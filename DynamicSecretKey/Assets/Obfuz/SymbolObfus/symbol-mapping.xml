<mapping>
  <assembly name="Assembly-CSharp">
    <type fullName="Bootstrap" newFullName="" status="NotRenamed">
      <method signature="void Bootstrap::SetUpDynamicSecret()" newName="$a" oldStackTraceSignature="Bootstrap:SetUpDynamicSecret()" newStackTraceSignature="Bootstrap:$a()" />
    </type>
    <type fullName="AOTGenericReferences" newFullName="" status="NotRenamed">
      <field signature="System.Collections.Generic.IReadOnlyList`1&lt;string&gt; PatchedAOTAssemblyList" newName="$a" />
      <method signature="void AOTGenericReferences::RefMethods([Assembly-CSharp]AOTGenericReferences)" newName="$A" oldStackTraceSignature="AOTGenericReferences:RefMethods()" newStackTraceSignature="AOTGenericReferences:$A()" />
    </type>
    <type fullName="Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine" newFullName="$a.$A" status="Renamed">
      <field signature="int kOpCodeBits" newName="$a" />
      <field signature="int kOpCodeCount" newName="$A" />
      <field signature="int kOpCodeMask" newName="$b" />
      <field signature="int[] _secretKey" newName="$B" />
      <property signature="int OpCodeCount" newName="$E" />
      <method signature="int Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine::get_OpCodeCount([Assembly-CSharp]Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine)" newName="&gt;$d" oldStackTraceSignature="Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine:get_OpCodeCount()" newStackTraceSignature="$a.$A:&gt;$d()" />
      <method signature="int Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine::Encrypt([Assembly-CSharp]Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine, int, int, int)" newName="&gt;$D" oldStackTraceSignature="Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine:Encrypt(Int32, Int32, Int32)" newStackTraceSignature="$a.$A:&gt;$D(Int32, Int32, Int32)" />
      <method signature="int Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine::Decrypt([Assembly-CSharp]Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine, int, int, int)" newName="&gt;$e" oldStackTraceSignature="Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine:Decrypt(Int32, Int32, Int32)" newStackTraceSignature="$a.$A:&gt;$e(Int32, Int32, Int32)" />
      <method signature="int Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine::ExecuteEncrypt([Assembly-CSharp]Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine, int, int, int)" newName="$c" oldStackTraceSignature="Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine:ExecuteEncrypt(Int32, Int32, Int32)" newStackTraceSignature="$a.$A:$c(Int32, Int32, Int32)" />
      <method signature="int Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine::ExecuteDecrypt([Assembly-CSharp]Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine, int, int, int)" newName="$C" oldStackTraceSignature="Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine:ExecuteDecrypt(Int32, Int32, Int32)" newStackTraceSignature="$a.$A:$C(Int32, Int32, Int32)" />
    </type>
    <type fullName="&lt;PrivateImplementationDetails&gt;" newFullName="$b" status="Renamed">
      <field signature="[Assembly-CSharp]&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=98 BF218D10022CE7A1E5B912E94A8D7C01D6AB70CF28B0902DE964A23A7912B85B" newName="$a" />
      <field signature="[Assembly-CSharp]&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=130 D1966B7692546EE781D8C444AD283CB920A0462C1BC6C35152E265EAB95DEBDE" newName="$A" />
    </type>
    <type fullName="&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=98" newFullName="$b/$a" status="Renamed" />
    <type fullName="&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=130" newFullName="$b/$B" status="Renamed" />
    <type fullName="$ObfuzRVA$DataHolder4096" newFullName="$c" status="Renamed" />
    <type fullName="$Obfuz$RVA$" newFullName="$C" status="Renamed">
      <field signature="[Assembly-CSharp]$ObfuzRVA$DataHolder4096 $RVA_Data0" newName="$a" />
      <field signature="byte[] $RVA_Value0" newName="$A" />
    </type>
    <type fullName="$Obfuz$ProxyCall" newFullName="$d" status="Renamed">
      <method signature="void $Obfuz$ProxyCall::$Obfuz$ProxyCall$Dispatch$0(object, int)" newName="$a" oldStackTraceSignature="$Obfuz$ProxyCall:$Obfuz$ProxyCall$Dispatch$0(Object, Int32)" newStackTraceSignature="$d:$a(Object, Int32)" />
      <method signature="[UnityEngine.CoreModule]UnityEngine.TextAsset $Obfuz$ProxyCall::$Obfuz$ProxyCall$Dispatch$1(object, int)" newName="$A" oldStackTraceSignature="$Obfuz$ProxyCall:$Obfuz$ProxyCall$Dispatch$1(Object, Int32)" newStackTraceSignature="$d:$A(Object, Int32)" />
      <method signature="byte[] $Obfuz$ProxyCall::$Obfuz$ProxyCall$Dispatch$2(object, int)" newName="$b" oldStackTraceSignature="$Obfuz$ProxyCall:$Obfuz$ProxyCall$Dispatch$2(Object, Int32)" newStackTraceSignature="$d:$b(Object, Int32)" />
      <method signature="void $Obfuz$ProxyCall::$Obfuz$ProxyCall$Dispatch$3(int)" newName="$B" oldStackTraceSignature="$Obfuz$ProxyCall:$Obfuz$ProxyCall$Dispatch$3(Int32)" newStackTraceSignature="$d:$B(Int32)" />
      <method signature="[UnityEngine.CoreModule]UnityEngine.GameObject $Obfuz$ProxyCall::$Obfuz$ProxyCall$Dispatch$4(object, int)" newName="$c" oldStackTraceSignature="$Obfuz$ProxyCall:$Obfuz$ProxyCall$Dispatch$4(Object, Int32)" newStackTraceSignature="$d:$c(Object, Int32)" />
      <method signature="[HotUpdate]Entry $Obfuz$ProxyCall::$Obfuz$ProxyCall$Dispatch$5(object, int)" newName="$C" oldStackTraceSignature="$Obfuz$ProxyCall:$Obfuz$ProxyCall$Dispatch$5(Object, Int32)" newStackTraceSignature="$d:$C(Object, Int32)" />
      <method signature="void $Obfuz$ProxyCall::$Obfuz$ProxyCall$Dispatch$6(object, object, int)" newName="$d" oldStackTraceSignature="$Obfuz$ProxyCall:$Obfuz$ProxyCall$Dispatch$6(Object, Object, Int32)" newStackTraceSignature="$d:$d(Object, Object, Int32)" />
      <method signature="void $Obfuz$ProxyCall::$Obfuz$ProxyCall$Dispatch$7(object, System.RuntimeFieldHandle, int)" newName="$D" oldStackTraceSignature="$Obfuz$ProxyCall:$Obfuz$ProxyCall$Dispatch$7(Object, RuntimeFieldHandle, Int32)" newStackTraceSignature="$d:$D(Object, RuntimeFieldHandle, Int32)" />
    </type>
  </assembly>
  <assembly name="HotUpdate">
    <type fullName="&lt;PrivateImplementationDetails&gt;" newFullName="$a" status="Renamed">
      <field signature="[HotUpdate]&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=11 93124A085FFDD7317F9EEBA8DFCFFF8607C96B8F97B2DE7450398DDC53631744" newName="$a" />
      <field signature="[HotUpdate]&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=34 AA0A1D096120048233C3B02E6484C3AD79679A69785499B0A08F28AA89638AC7" newName="$A" />
    </type>
    <type fullName="&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=11" newFullName="$a/$A" status="Renamed" />
    <type fullName="&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=34" newFullName="$a/$b" status="Renamed" />
    <type fullName="$ObfuzRVA$DataHolder4096" newFullName="$B" status="Renamed" />
    <type fullName="$Obfuz$RVA$" newFullName="$c" status="Renamed">
      <field signature="[HotUpdate]$ObfuzRVA$DataHolder4096 $RVA_Data0" newName="$a" />
      <field signature="byte[] $RVA_Value0" newName="$A" />
    </type>
    <type fullName="$Obfuz$ProxyCall" newFullName="$C" status="Renamed">
      <method signature="void $Obfuz$ProxyCall::$Obfuz$ProxyCall$Dispatch$0(object, int)" newName="$a" oldStackTraceSignature="$Obfuz$ProxyCall:$Obfuz$ProxyCall$Dispatch$0(Object, Int32)" newStackTraceSignature="$C:$a(Object, Int32)" />
      <method signature="void $Obfuz$ProxyCall::$Obfuz$ProxyCall$Dispatch$1(object, System.RuntimeFieldHandle, int)" newName="$A" oldStackTraceSignature="$Obfuz$ProxyCall:$Obfuz$ProxyCall$Dispatch$1(Object, RuntimeFieldHandle, Int32)" newStackTraceSignature="$C:$A(Object, RuntimeFieldHandle, Int32)" />
    </type>
  </assembly>
  <assembly name="Obfuz.Runtime">
    <type fullName="Obfuz.ConstUtility" newFullName="$A.$a" status="Renamed">
      <method signature="int Obfuz.ConstUtility::GetInt(byte[], int)" newName="$a" oldStackTraceSignature="Obfuz.ConstUtility:GetInt(Byte[], Int32)" newStackTraceSignature="$A.$a:$a(Byte[], Int32)" />
      <method signature="long Obfuz.ConstUtility::GetLong(byte[], int)" newName="$A" oldStackTraceSignature="Obfuz.ConstUtility:GetLong(Byte[], Int32)" newStackTraceSignature="$A.$a:$A(Byte[], Int32)" />
      <method signature="float Obfuz.ConstUtility::GetFloat(byte[], int)" newName="$b" oldStackTraceSignature="Obfuz.ConstUtility:GetFloat(Byte[], Int32)" newStackTraceSignature="$A.$a:$b(Byte[], Int32)" />
      <method signature="double Obfuz.ConstUtility::GetDouble(byte[], int)" newName="$B" oldStackTraceSignature="Obfuz.ConstUtility:GetDouble(Byte[], Int32)" newStackTraceSignature="$A.$a:$B(Byte[], Int32)" />
      <method signature="string Obfuz.ConstUtility::GetString(byte[], int, int)" newName="$c" oldStackTraceSignature="Obfuz.ConstUtility:GetString(Byte[], Int32, Int32)" newStackTraceSignature="$A.$a:$c(Byte[], Int32, Int32)" />
      <method signature="byte[] Obfuz.ConstUtility::GetBytes(byte[], int, int)" newName="$C" oldStackTraceSignature="Obfuz.ConstUtility:GetBytes(Byte[], Int32, Int32)" newStackTraceSignature="$A.$a:$C(Byte[], Int32, Int32)" />
      <method signature="int[] Obfuz.ConstUtility::GetInts(byte[], int, int)" newName="$d" oldStackTraceSignature="Obfuz.ConstUtility:GetInts(Byte[], Int32, Int32)" newStackTraceSignature="$A.$a:$d(Byte[], Int32, Int32)" />
      <method signature="void Obfuz.ConstUtility::InitializeArray(System.Array, byte[], int, int)" newName="$D" oldStackTraceSignature="Obfuz.ConstUtility:InitializeArray(Array, Byte[], Int32, Int32)" newStackTraceSignature="$A.$a:$D(Array, Byte[], Int32, Int32)" />
      <method signature="int Obfuz.ConstUtility::CastFloatAsInt(float)" newName="$e" oldStackTraceSignature="Obfuz.ConstUtility:CastFloatAsInt(Single)" newStackTraceSignature="$A.$a:$e(Single)" />
      <method signature="float Obfuz.ConstUtility::CastIntAsFloat(int)" newName="$E" oldStackTraceSignature="Obfuz.ConstUtility:CastIntAsFloat(Int32)" newStackTraceSignature="$A.$a:$E(Int32)" />
      <method signature="long Obfuz.ConstUtility::CastDoubleAsLong(double)" newName="$f" oldStackTraceSignature="Obfuz.ConstUtility:CastDoubleAsLong(Double)" newStackTraceSignature="$A.$a:$f(Double)" />
      <method signature="double Obfuz.ConstUtility::CastLongAsDouble(long)" newName="$F" oldStackTraceSignature="Obfuz.ConstUtility:CastLongAsDouble(Int64)" newStackTraceSignature="$A.$a:$F(Int64)" />
    </type>
    <type fullName="Obfuz.EncryptFieldAttribute" newFullName="$b.$f" status="Renamed" />
    <type fullName="Obfuz.IEncryptionScope" newFullName="$A.$A" status="Renamed" />
    <type fullName="Obfuz.EncryptionScopeBase" newFullName="$A.$b" status="Renamed">
      <method signature="void Obfuz.EncryptionScopeBase::ForcePreserveAOT([Obfuz.Runtime]Obfuz.EncryptionScopeBase)" newName="$a" oldStackTraceSignature="Obfuz.EncryptionScopeBase:ForcePreserveAOT()" newStackTraceSignature="$A.$b:$a()" />
    </type>
    <type fullName="Obfuz.DefaultDynamicEncryptionScope" newFullName="$A.$B" status="Renamed">
      <method signature="void Obfuz.DefaultDynamicEncryptionScope::ForcePreserveAOT([Obfuz.Runtime]Obfuz.DefaultDynamicEncryptionScope&amp;)" newName="$a" oldStackTraceSignature="Obfuz.DefaultDynamicEncryptionScope:ForcePreserveAOT()" newStackTraceSignature="$A.$B:$a()" />
    </type>
    <type fullName="Obfuz.DefaultStaticEncryptionScope" newFullName="$A.$c" status="Renamed">
      <method signature="void Obfuz.DefaultStaticEncryptionScope::ForcePreserveAOT([Obfuz.Runtime]Obfuz.DefaultStaticEncryptionScope&amp;)" newName="$a" oldStackTraceSignature="Obfuz.DefaultStaticEncryptionScope:ForcePreserveAOT()" newStackTraceSignature="$A.$c:$a()" />
    </type>
    <type fullName="Obfuz.EncryptionService`1" newFullName="$A.$C" status="Renamed">
      <field signature="[Obfuz.Runtime]Obfuz.IEncryptor _encryptor" newName="$a" />
      <property signature="[Obfuz.Runtime]Obfuz.IEncryptor Encryptor" newName="$L" />
      <method signature="[Obfuz.Runtime]Obfuz.IEncryptor Obfuz.EncryptionService`1::get_Encryptor()" newName="$A" oldStackTraceSignature="Obfuz.EncryptionService`1:get_Encryptor()" newStackTraceSignature="$A.$C:$A()" />
      <method signature="void Obfuz.EncryptionService`1::set_Encryptor([Obfuz.Runtime]Obfuz.IEncryptor)" newName="$b" oldStackTraceSignature="Obfuz.EncryptionService`1:set_Encryptor(IEncryptor)" newStackTraceSignature="$A.$C:$b($D)" />
      <method signature="void Obfuz.EncryptionService`1::EncryptBlock(byte[], int, int)" newName="$B" oldStackTraceSignature="Obfuz.EncryptionService`1:EncryptBlock(Byte[], Int32, Int32)" newStackTraceSignature="$A.$C:$B(Byte[], Int32, Int32)" />
      <method signature="void Obfuz.EncryptionService`1::DecryptBlock(byte[], int, int)" newName="$c" oldStackTraceSignature="Obfuz.EncryptionService`1:DecryptBlock(Byte[], Int32, Int32)" newStackTraceSignature="$A.$C:$c(Byte[], Int32, Int32)" />
      <method signature="int Obfuz.EncryptionService`1::Encrypt(int, int, int)" newName="$C" oldStackTraceSignature="Obfuz.EncryptionService`1:Encrypt(Int32, Int32, Int32)" newStackTraceSignature="$A.$C:$C(Int32, Int32, Int32)" />
      <method signature="int Obfuz.EncryptionService`1::Decrypt(int, int, int)" newName="$d" oldStackTraceSignature="Obfuz.EncryptionService`1:Decrypt(Int32, Int32, Int32)" newStackTraceSignature="$A.$C:$d(Int32, Int32, Int32)" />
      <method signature="long Obfuz.EncryptionService`1::Encrypt(long, int, int)" newName="$D" oldStackTraceSignature="Obfuz.EncryptionService`1:Encrypt(Int64, Int32, Int32)" newStackTraceSignature="$A.$C:$D(Int64, Int32, Int32)" />
      <method signature="long Obfuz.EncryptionService`1::Decrypt(long, int, int)" newName="$e" oldStackTraceSignature="Obfuz.EncryptionService`1:Decrypt(Int64, Int32, Int32)" newStackTraceSignature="$A.$C:$e(Int64, Int32, Int32)" />
      <method signature="float Obfuz.EncryptionService`1::Encrypt(float, int, int)" newName="$E" oldStackTraceSignature="Obfuz.EncryptionService`1:Encrypt(Single, Int32, Int32)" newStackTraceSignature="$A.$C:$E(Single, Int32, Int32)" />
      <method signature="float Obfuz.EncryptionService`1::Decrypt(float, int, int)" newName="$f" oldStackTraceSignature="Obfuz.EncryptionService`1:Decrypt(Single, Int32, Int32)" newStackTraceSignature="$A.$C:$f(Single, Int32, Int32)" />
      <method signature="double Obfuz.EncryptionService`1::Encrypt(double, int, int)" newName="$F" oldStackTraceSignature="Obfuz.EncryptionService`1:Encrypt(Double, Int32, Int32)" newStackTraceSignature="$A.$C:$F(Double, Int32, Int32)" />
      <method signature="double Obfuz.EncryptionService`1::Decrypt(double, int, int)" newName="$g" oldStackTraceSignature="Obfuz.EncryptionService`1:Decrypt(Double, Int32, Int32)" newStackTraceSignature="$A.$C:$g(Double, Int32, Int32)" />
      <method signature="byte[] Obfuz.EncryptionService`1::Encrypt(byte[], int, int, int, int)" newName="$G" oldStackTraceSignature="Obfuz.EncryptionService`1:Encrypt(Byte[], Int32, Int32, Int32, Int32)" newStackTraceSignature="$A.$C:$G(Byte[], Int32, Int32, Int32, Int32)" />
      <method signature="byte[] Obfuz.EncryptionService`1::Decrypt(byte[], int, int, int, int)" newName="$h" oldStackTraceSignature="Obfuz.EncryptionService`1:Decrypt(Byte[], Int32, Int32, Int32, Int32)" newStackTraceSignature="$A.$C:$h(Byte[], Int32, Int32, Int32, Int32)" />
      <method signature="byte[] Obfuz.EncryptionService`1::Encrypt(string, int, int)" newName="$H" oldStackTraceSignature="Obfuz.EncryptionService`1:Encrypt(String, Int32, Int32)" newStackTraceSignature="$A.$C:$H(String, Int32, Int32)" />
      <method signature="string Obfuz.EncryptionService`1::DecryptString(byte[], int, int, int, int)" newName="$i" oldStackTraceSignature="Obfuz.EncryptionService`1:DecryptString(Byte[], Int32, Int32, Int32, Int32)" newStackTraceSignature="$A.$C:$i(Byte[], Int32, Int32, Int32, Int32)" />
      <method signature="int Obfuz.EncryptionService`1::DecryptFromRvaInt(byte[], int, int, int)" newName="$I" oldStackTraceSignature="Obfuz.EncryptionService`1:DecryptFromRvaInt(Byte[], Int32, Int32, Int32)" newStackTraceSignature="$A.$C:$I(Byte[], Int32, Int32, Int32)" />
      <method signature="long Obfuz.EncryptionService`1::DecryptFromRvaLong(byte[], int, int, int)" newName="$j" oldStackTraceSignature="Obfuz.EncryptionService`1:DecryptFromRvaLong(Byte[], Int32, Int32, Int32)" newStackTraceSignature="$A.$C:$j(Byte[], Int32, Int32, Int32)" />
      <method signature="float Obfuz.EncryptionService`1::DecryptFromRvaFloat(byte[], int, int, int)" newName="$J" oldStackTraceSignature="Obfuz.EncryptionService`1:DecryptFromRvaFloat(Byte[], Int32, Int32, Int32)" newStackTraceSignature="$A.$C:$J(Byte[], Int32, Int32, Int32)" />
      <method signature="double Obfuz.EncryptionService`1::DecryptFromRvaDouble(byte[], int, int, int)" newName="$k" oldStackTraceSignature="Obfuz.EncryptionService`1:DecryptFromRvaDouble(Byte[], Int32, Int32, Int32)" newStackTraceSignature="$A.$C:$k(Byte[], Int32, Int32, Int32)" />
      <method signature="string Obfuz.EncryptionService`1::DecryptFromRvaString(byte[], int, int, int, int)" newName="$K" oldStackTraceSignature="Obfuz.EncryptionService`1:DecryptFromRvaString(Byte[], Int32, Int32, Int32, Int32)" newStackTraceSignature="$A.$C:$K(Byte[], Int32, Int32, Int32, Int32)" />
      <method signature="byte[] Obfuz.EncryptionService`1::DecryptFromRvaBytes(byte[], int, int, int, int)" newName="$l" oldStackTraceSignature="Obfuz.EncryptionService`1:DecryptFromRvaBytes(Byte[], Int32, Int32, Int32, Int32)" newStackTraceSignature="$A.$C:$l(Byte[], Int32, Int32, Int32, Int32)" />
    </type>
    <type fullName="Obfuz.EncryptorBase" newFullName="$A.$d" status="Renamed">
      <property signature="int OpCodeCount" newName="$d" />
      <method signature="int Obfuz.EncryptorBase::get_OpCodeCount([Obfuz.Runtime]Obfuz.EncryptorBase)" newName="&gt;$d" oldStackTraceSignature="Obfuz.EncryptorBase:get_OpCodeCount()" newStackTraceSignature="$A.$d:&gt;$d()" />
      <method signature="int[] Obfuz.EncryptorBase::ConvertToIntKey(byte[])" newName="$a" oldStackTraceSignature="Obfuz.EncryptorBase:ConvertToIntKey(Byte[])" newStackTraceSignature="$A.$d:$a(Byte[])" />
      <method signature="int Obfuz.EncryptorBase::Encrypt([Obfuz.Runtime]Obfuz.EncryptorBase, int, int, int)" newName="&gt;$D" oldStackTraceSignature="Obfuz.EncryptorBase:Encrypt(Int32, Int32, Int32)" newStackTraceSignature="$A.$d:&gt;$D(Int32, Int32, Int32)" />
      <method signature="int Obfuz.EncryptorBase::Decrypt([Obfuz.Runtime]Obfuz.EncryptorBase, int, int, int)" newName="&gt;$e" oldStackTraceSignature="Obfuz.EncryptorBase:Decrypt(Int32, Int32, Int32)" newStackTraceSignature="$A.$d:&gt;$e(Int32, Int32, Int32)" />
      <method signature="long Obfuz.EncryptorBase::Encrypt([Obfuz.Runtime]Obfuz.EncryptorBase, long, int, int)" newName="&gt;$D" oldStackTraceSignature="Obfuz.EncryptorBase:Encrypt(Int64, Int32, Int32)" newStackTraceSignature="$A.$d:&gt;$D(Int64, Int32, Int32)" />
      <method signature="long Obfuz.EncryptorBase::Decrypt([Obfuz.Runtime]Obfuz.EncryptorBase, long, int, int)" newName="&gt;$e" oldStackTraceSignature="Obfuz.EncryptorBase:Decrypt(Int64, Int32, Int32)" newStackTraceSignature="$A.$d:&gt;$e(Int64, Int32, Int32)" />
      <method signature="float Obfuz.EncryptorBase::Encrypt([Obfuz.Runtime]Obfuz.EncryptorBase, float, int, int)" newName="&gt;$D" oldStackTraceSignature="Obfuz.EncryptorBase:Encrypt(Single, Int32, Int32)" newStackTraceSignature="$A.$d:&gt;$D(Single, Int32, Int32)" />
      <method signature="float Obfuz.EncryptorBase::Decrypt([Obfuz.Runtime]Obfuz.EncryptorBase, float, int, int)" newName="&gt;$e" oldStackTraceSignature="Obfuz.EncryptorBase:Decrypt(Single, Int32, Int32)" newStackTraceSignature="$A.$d:&gt;$e(Single, Int32, Int32)" />
      <method signature="double Obfuz.EncryptorBase::Encrypt([Obfuz.Runtime]Obfuz.EncryptorBase, double, int, int)" newName="&gt;$D" oldStackTraceSignature="Obfuz.EncryptorBase:Encrypt(Double, Int32, Int32)" newStackTraceSignature="$A.$d:&gt;$D(Double, Int32, Int32)" />
      <method signature="double Obfuz.EncryptorBase::Decrypt([Obfuz.Runtime]Obfuz.EncryptorBase, double, int, int)" newName="&gt;$e" oldStackTraceSignature="Obfuz.EncryptorBase:Decrypt(Double, Int32, Int32)" newStackTraceSignature="$A.$d:&gt;$e(Double, Int32, Int32)" />
      <method signature="byte[] Obfuz.EncryptorBase::Encrypt([Obfuz.Runtime]Obfuz.EncryptorBase, byte[], int, int, int, int)" newName="$A" oldStackTraceSignature="Obfuz.EncryptorBase:Encrypt(Byte[], Int32, Int32, Int32, Int32)" newStackTraceSignature="$A.$d:$A(Byte[], Int32, Int32, Int32, Int32)" />
      <method signature="byte[] Obfuz.EncryptorBase::Decrypt([Obfuz.Runtime]Obfuz.EncryptorBase, byte[], int, int, int, int)" newName="$b" oldStackTraceSignature="Obfuz.EncryptorBase:Decrypt(Byte[], Int32, Int32, Int32, Int32)" newStackTraceSignature="$A.$d:$b(Byte[], Int32, Int32, Int32, Int32)" />
      <method signature="byte[] Obfuz.EncryptorBase::Encrypt([Obfuz.Runtime]Obfuz.EncryptorBase, string, int, int)" newName="&gt;$D" oldStackTraceSignature="Obfuz.EncryptorBase:Encrypt(String, Int32, Int32)" newStackTraceSignature="$A.$d:&gt;$D(String, Int32, Int32)" />
      <method signature="string Obfuz.EncryptorBase::DecryptString([Obfuz.Runtime]Obfuz.EncryptorBase, byte[], int, int, int, int)" newName="$B" oldStackTraceSignature="Obfuz.EncryptorBase:DecryptString(Byte[], Int32, Int32, Int32, Int32)" newStackTraceSignature="$A.$d:$B(Byte[], Int32, Int32, Int32, Int32)" />
      <method signature="void Obfuz.EncryptorBase::EncryptBlock([Obfuz.Runtime]Obfuz.EncryptorBase, byte[], int, int)" newName="$c" oldStackTraceSignature="Obfuz.EncryptorBase:EncryptBlock(Byte[], Int32, Int32)" newStackTraceSignature="$A.$d:$c(Byte[], Int32, Int32)" />
      <method signature="void Obfuz.EncryptorBase::DecryptBlock([Obfuz.Runtime]Obfuz.EncryptorBase, byte[], int, int)" newName="$C" oldStackTraceSignature="Obfuz.EncryptorBase:DecryptBlock(Byte[], Int32, Int32)" newStackTraceSignature="$A.$d:$C(Byte[], Int32, Int32)" />
    </type>
    <type fullName="Obfuz.IEncryptor" newFullName="$A.$D" status="Renamed">
      <property signature="int OpCodeCount" newName="$a" />
      <method signature="int Obfuz.IEncryptor::get_OpCodeCount([Obfuz.Runtime]Obfuz.IEncryptor)" newName="&gt;$d" oldStackTraceSignature="Obfuz.IEncryptor:get_OpCodeCount()" newStackTraceSignature="$A.$D:&gt;$d()" />
      <method signature="void Obfuz.IEncryptor::EncryptBlock([Obfuz.Runtime]Obfuz.IEncryptor, byte[], int, int)" newName="$c" oldStackTraceSignature="Obfuz.IEncryptor:EncryptBlock(Byte[], Int32, Int32)" newStackTraceSignature="$A.$D:$c(Byte[], Int32, Int32)" />
      <method signature="void Obfuz.IEncryptor::DecryptBlock([Obfuz.Runtime]Obfuz.IEncryptor, byte[], int, int)" newName="$C" oldStackTraceSignature="Obfuz.IEncryptor:DecryptBlock(Byte[], Int32, Int32)" newStackTraceSignature="$A.$D:$C(Byte[], Int32, Int32)" />
      <method signature="int Obfuz.IEncryptor::Encrypt([Obfuz.Runtime]Obfuz.IEncryptor, int, int, int)" newName="&gt;$D" oldStackTraceSignature="Obfuz.IEncryptor:Encrypt(Int32, Int32, Int32)" newStackTraceSignature="$A.$D:&gt;$D(Int32, Int32, Int32)" />
      <method signature="int Obfuz.IEncryptor::Decrypt([Obfuz.Runtime]Obfuz.IEncryptor, int, int, int)" newName="&gt;$e" oldStackTraceSignature="Obfuz.IEncryptor:Decrypt(Int32, Int32, Int32)" newStackTraceSignature="$A.$D:&gt;$e(Int32, Int32, Int32)" />
      <method signature="long Obfuz.IEncryptor::Encrypt([Obfuz.Runtime]Obfuz.IEncryptor, long, int, int)" newName="&gt;$D" oldStackTraceSignature="Obfuz.IEncryptor:Encrypt(Int64, Int32, Int32)" newStackTraceSignature="$A.$D:&gt;$D(Int64, Int32, Int32)" />
      <method signature="long Obfuz.IEncryptor::Decrypt([Obfuz.Runtime]Obfuz.IEncryptor, long, int, int)" newName="&gt;$e" oldStackTraceSignature="Obfuz.IEncryptor:Decrypt(Int64, Int32, Int32)" newStackTraceSignature="$A.$D:&gt;$e(Int64, Int32, Int32)" />
      <method signature="float Obfuz.IEncryptor::Encrypt([Obfuz.Runtime]Obfuz.IEncryptor, float, int, int)" newName="&gt;$D" oldStackTraceSignature="Obfuz.IEncryptor:Encrypt(Single, Int32, Int32)" newStackTraceSignature="$A.$D:&gt;$D(Single, Int32, Int32)" />
      <method signature="float Obfuz.IEncryptor::Decrypt([Obfuz.Runtime]Obfuz.IEncryptor, float, int, int)" newName="&gt;$e" oldStackTraceSignature="Obfuz.IEncryptor:Decrypt(Single, Int32, Int32)" newStackTraceSignature="$A.$D:&gt;$e(Single, Int32, Int32)" />
      <method signature="double Obfuz.IEncryptor::Encrypt([Obfuz.Runtime]Obfuz.IEncryptor, double, int, int)" newName="&gt;$D" oldStackTraceSignature="Obfuz.IEncryptor:Encrypt(Double, Int32, Int32)" newStackTraceSignature="$A.$D:&gt;$D(Double, Int32, Int32)" />
      <method signature="double Obfuz.IEncryptor::Decrypt([Obfuz.Runtime]Obfuz.IEncryptor, double, int, int)" newName="&gt;$e" oldStackTraceSignature="Obfuz.IEncryptor:Decrypt(Double, Int32, Int32)" newStackTraceSignature="$A.$D:&gt;$e(Double, Int32, Int32)" />
      <method signature="byte[] Obfuz.IEncryptor::Encrypt([Obfuz.Runtime]Obfuz.IEncryptor, byte[], int, int, int, int)" newName="$A" oldStackTraceSignature="Obfuz.IEncryptor:Encrypt(Byte[], Int32, Int32, Int32, Int32)" newStackTraceSignature="$A.$D:$A(Byte[], Int32, Int32, Int32, Int32)" />
      <method signature="byte[] Obfuz.IEncryptor::Decrypt([Obfuz.Runtime]Obfuz.IEncryptor, byte[], int, int, int, int)" newName="$b" oldStackTraceSignature="Obfuz.IEncryptor:Decrypt(Byte[], Int32, Int32, Int32, Int32)" newStackTraceSignature="$A.$D:$b(Byte[], Int32, Int32, Int32, Int32)" />
      <method signature="byte[] Obfuz.IEncryptor::Encrypt([Obfuz.Runtime]Obfuz.IEncryptor, string, int, int)" newName="&gt;$D" oldStackTraceSignature="Obfuz.IEncryptor:Encrypt(String, Int32, Int32)" newStackTraceSignature="$A.$D:&gt;$D(String, Int32, Int32)" />
      <method signature="string Obfuz.IEncryptor::DecryptString([Obfuz.Runtime]Obfuz.IEncryptor, byte[], int, int, int, int)" newName="$B" oldStackTraceSignature="Obfuz.IEncryptor:DecryptString(Byte[], Int32, Int32, Int32, Int32)" newStackTraceSignature="$A.$D:$B(Byte[], Int32, Int32, Int32, Int32)" />
    </type>
    <type fullName="Obfuz.NullEncryptor" newFullName="$A.$e" status="Renamed">
      <field signature="byte[] _key" newName="$a" />
      <property signature="int OpCodeCount" newName="$A" />
      <method signature="int Obfuz.NullEncryptor::get_OpCodeCount([Obfuz.Runtime]Obfuz.NullEncryptor)" newName="&gt;$d" oldStackTraceSignature="Obfuz.NullEncryptor:get_OpCodeCount()" newStackTraceSignature="$A.$e:&gt;$d()" />
      <method signature="int Obfuz.NullEncryptor::Encrypt([Obfuz.Runtime]Obfuz.NullEncryptor, int, int, int)" newName="&gt;$D" oldStackTraceSignature="Obfuz.NullEncryptor:Encrypt(Int32, Int32, Int32)" newStackTraceSignature="$A.$e:&gt;$D(Int32, Int32, Int32)" />
      <method signature="int Obfuz.NullEncryptor::Decrypt([Obfuz.Runtime]Obfuz.NullEncryptor, int, int, int)" newName="&gt;$e" oldStackTraceSignature="Obfuz.NullEncryptor:Decrypt(Int32, Int32, Int32)" newStackTraceSignature="$A.$e:&gt;$e(Int32, Int32, Int32)" />
      <method signature="long Obfuz.NullEncryptor::Encrypt([Obfuz.Runtime]Obfuz.NullEncryptor, long, int, int)" newName="&gt;$D" oldStackTraceSignature="Obfuz.NullEncryptor:Encrypt(Int64, Int32, Int32)" newStackTraceSignature="$A.$e:&gt;$D(Int64, Int32, Int32)" />
      <method signature="long Obfuz.NullEncryptor::Decrypt([Obfuz.Runtime]Obfuz.NullEncryptor, long, int, int)" newName="&gt;$e" oldStackTraceSignature="Obfuz.NullEncryptor:Decrypt(Int64, Int32, Int32)" newStackTraceSignature="$A.$e:&gt;$e(Int64, Int32, Int32)" />
      <method signature="float Obfuz.NullEncryptor::Encrypt([Obfuz.Runtime]Obfuz.NullEncryptor, float, int, int)" newName="&gt;$D" oldStackTraceSignature="Obfuz.NullEncryptor:Encrypt(Single, Int32, Int32)" newStackTraceSignature="$A.$e:&gt;$D(Single, Int32, Int32)" />
      <method signature="float Obfuz.NullEncryptor::Decrypt([Obfuz.Runtime]Obfuz.NullEncryptor, float, int, int)" newName="&gt;$e" oldStackTraceSignature="Obfuz.NullEncryptor:Decrypt(Single, Int32, Int32)" newStackTraceSignature="$A.$e:&gt;$e(Single, Int32, Int32)" />
      <method signature="double Obfuz.NullEncryptor::Encrypt([Obfuz.Runtime]Obfuz.NullEncryptor, double, int, int)" newName="&gt;$D" oldStackTraceSignature="Obfuz.NullEncryptor:Encrypt(Double, Int32, Int32)" newStackTraceSignature="$A.$e:&gt;$D(Double, Int32, Int32)" />
      <method signature="double Obfuz.NullEncryptor::Decrypt([Obfuz.Runtime]Obfuz.NullEncryptor, double, int, int)" newName="&gt;$e" oldStackTraceSignature="Obfuz.NullEncryptor:Decrypt(Double, Int32, Int32)" newStackTraceSignature="$A.$e:&gt;$e(Double, Int32, Int32)" />
      <method signature="byte[] Obfuz.NullEncryptor::Encrypt([Obfuz.Runtime]Obfuz.NullEncryptor, byte[], int, int, int, int)" newName="$A" oldStackTraceSignature="Obfuz.NullEncryptor:Encrypt(Byte[], Int32, Int32, Int32, Int32)" newStackTraceSignature="$A.$e:$A(Byte[], Int32, Int32, Int32, Int32)" />
      <method signature="byte[] Obfuz.NullEncryptor::Decrypt([Obfuz.Runtime]Obfuz.NullEncryptor, byte[], int, int, int, int)" newName="$b" oldStackTraceSignature="Obfuz.NullEncryptor:Decrypt(Byte[], Int32, Int32, Int32, Int32)" newStackTraceSignature="$A.$e:$b(Byte[], Int32, Int32, Int32, Int32)" />
      <method signature="byte[] Obfuz.NullEncryptor::Encrypt([Obfuz.Runtime]Obfuz.NullEncryptor, string, int, int)" newName="&gt;$D" oldStackTraceSignature="Obfuz.NullEncryptor:Encrypt(String, Int32, Int32)" newStackTraceSignature="$A.$e:&gt;$D(String, Int32, Int32)" />
      <method signature="string Obfuz.NullEncryptor::DecryptString([Obfuz.Runtime]Obfuz.NullEncryptor, byte[], int, int, int, int)" newName="$B" oldStackTraceSignature="Obfuz.NullEncryptor:DecryptString(Byte[], Int32, Int32, Int32, Int32)" newStackTraceSignature="$A.$e:$B(Byte[], Int32, Int32, Int32, Int32)" />
    </type>
    <type fullName="Obfuz.ObfuzScope" newFullName="$b.$F" status="Renamed">
      <field signature="[Obfuz.Runtime]Obfuz.ObfuzScope None" newName="$a" />
      <field signature="[Obfuz.Runtime]Obfuz.ObfuzScope TypeName" newName="$A" />
      <field signature="[Obfuz.Runtime]Obfuz.ObfuzScope Field" newName="$b" />
      <field signature="[Obfuz.Runtime]Obfuz.ObfuzScope MethodName" newName="$B" />
      <field signature="[Obfuz.Runtime]Obfuz.ObfuzScope MethodParameter" newName="$c" />
      <field signature="[Obfuz.Runtime]Obfuz.ObfuzScope MethodBody" newName="$C" />
      <field signature="[Obfuz.Runtime]Obfuz.ObfuzScope Method" newName="$d" />
      <field signature="[Obfuz.Runtime]Obfuz.ObfuzScope PropertyName" newName="$D" />
      <field signature="[Obfuz.Runtime]Obfuz.ObfuzScope PropertyGetter" newName="$e" />
      <field signature="[Obfuz.Runtime]Obfuz.ObfuzScope PropertySetter" newName="$E" />
      <field signature="[Obfuz.Runtime]Obfuz.ObfuzScope Property" newName="$f" />
      <field signature="[Obfuz.Runtime]Obfuz.ObfuzScope EventName" newName="$F" />
      <field signature="[Obfuz.Runtime]Obfuz.ObfuzScope EventAdd" newName="$g" />
      <field signature="[Obfuz.Runtime]Obfuz.ObfuzScope EventRemove" newName="$G" />
      <field signature="[Obfuz.Runtime]Obfuz.ObfuzScope EventFire" newName="$h" />
      <field signature="[Obfuz.Runtime]Obfuz.ObfuzScope Event" newName="$H" />
      <field signature="[Obfuz.Runtime]Obfuz.ObfuzScope Module" newName="$i" />
      <field signature="[Obfuz.Runtime]Obfuz.ObfuzScope All" newName="$I" />
    </type>
    <type fullName="Obfuz.ObfuzIgnoreAttribute" newFullName="" status="NotRenamed">
      <field signature="[Obfuz.Runtime]Obfuz.ObfuzScope &lt;Scope&gt;k__BackingField" newName="$a" />
      <field signature="bool &lt;InheritByNestedTypes&gt;k__BackingField" newName="$A" />
      <property signature="[Obfuz.Runtime]Obfuz.ObfuzScope Scope" newName="$d" />
      <property signature="bool InheritByNestedTypes" newName="$D" />
      <method signature="[Obfuz.Runtime]Obfuz.ObfuzScope Obfuz.ObfuzIgnoreAttribute::get_Scope([Obfuz.Runtime]Obfuz.ObfuzIgnoreAttribute)" newName="$b" oldStackTraceSignature="Obfuz.ObfuzIgnoreAttribute:get_Scope()" newStackTraceSignature="Obfuz.ObfuzIgnoreAttribute:$b()" />
      <method signature="void Obfuz.ObfuzIgnoreAttribute::set_Scope([Obfuz.Runtime]Obfuz.ObfuzIgnoreAttribute, [Obfuz.Runtime]Obfuz.ObfuzScope)" newName="$B" oldStackTraceSignature="Obfuz.ObfuzIgnoreAttribute:set_Scope(ObfuzScope)" newStackTraceSignature="Obfuz.ObfuzIgnoreAttribute:$B($F)" />
      <method signature="bool Obfuz.ObfuzIgnoreAttribute::get_InheritByNestedTypes([Obfuz.Runtime]Obfuz.ObfuzIgnoreAttribute)" newName="$c" oldStackTraceSignature="Obfuz.ObfuzIgnoreAttribute:get_InheritByNestedTypes()" newStackTraceSignature="Obfuz.ObfuzIgnoreAttribute:$c()" />
      <method signature="void Obfuz.ObfuzIgnoreAttribute::set_InheritByNestedTypes([Obfuz.Runtime]Obfuz.ObfuzIgnoreAttribute, bool)" newName="$C" oldStackTraceSignature="Obfuz.ObfuzIgnoreAttribute:set_InheritByNestedTypes(Boolean)" newStackTraceSignature="Obfuz.ObfuzIgnoreAttribute:$C(Boolean)" />
    </type>
    <type fullName="&lt;PrivateImplementationDetails&gt;" newFullName="$E" status="Renamed">
      <field signature="[Obfuz.Runtime]&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=319 06C5CC799072FD4902F78D29EDFE6FE472BD7FD862AE4A4E2809A519029E52EF" newName="$a" />
      <field signature="[Obfuz.Runtime]&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=745 2C6FE40FA6B394B79284669828F374AA06BC7CA1F44686DE2BAB532E5BAC8644" newName="$A" />
    </type>
    <type fullName="&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=319" newFullName="$E/$g" status="Renamed" />
    <type fullName="&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=745" newFullName="$E/$G" status="Renamed" />
  </assembly>
</mapping>