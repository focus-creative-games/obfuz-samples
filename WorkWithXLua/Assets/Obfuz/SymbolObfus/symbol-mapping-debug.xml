<mapping>
  <assembly name="Assembly-CSharp">
    <type fullName="&lt;&gt;f__AnonymousType0`3" newFullName="$&lt;&gt;f__AnonymousType0`3" status="Renamed">
      <field signature="!0 &lt;Type&gt;i__Field" newName="$&lt;Type&gt;i__Field" />
      <field signature="!1 &lt;Value&gt;i__Field" newName="$&lt;Value&gt;i__Field" />
      <field signature="!2 &lt;Index&gt;i__Field" newName="$&lt;Index&gt;i__Field" />
      <property signature="!0 Type" newName="$Type" />
      <property signature="!1 Value" newName="$Value" />
      <property signature="!2 Index" newName="$Index" />
      <method signature="!0 &lt;&gt;f__AnonymousType0`3::get_Type([Assembly-CSharp]&lt;&gt;f__AnonymousType0`3&lt;!0,!1,!2&gt;)" newName="$get_Type" oldStackTraceSignature="&lt;&gt;f__AnonymousType0`3:get_Type()" newStackTraceSignature="$&lt;&gt;f__AnonymousType0`3:$get_Type()" />
      <method signature="!1 &lt;&gt;f__AnonymousType0`3::get_Value([Assembly-CSharp]&lt;&gt;f__AnonymousType0`3&lt;!0,!1,!2&gt;)" newName="$get_Value" oldStackTraceSignature="&lt;&gt;f__AnonymousType0`3:get_Value()" newStackTraceSignature="$&lt;&gt;f__AnonymousType0`3:$get_Value()" />
      <method signature="!2 &lt;&gt;f__AnonymousType0`3::get_Index([Assembly-CSharp]&lt;&gt;f__AnonymousType0`3&lt;!0,!1,!2&gt;)" newName="$get_Index" oldStackTraceSignature="&lt;&gt;f__AnonymousType0`3:get_Index()" newStackTraceSignature="$&lt;&gt;f__AnonymousType0`3:$get_Index()" />
    </type>
    <type fullName="&lt;&gt;f__AnonymousType1`2" newFullName="$&lt;&gt;f__AnonymousType1`2" status="Renamed">
      <field signature="!0 &lt;type&gt;i__Field" newName="$&lt;type&gt;i__Field" />
      <field signature="!1 &lt;method&gt;i__Field" newName="$&lt;method&gt;i__Field" />
      <property signature="!0 type" newName="$type" />
      <property signature="!1 method" newName="$method" />
      <method signature="!0 &lt;&gt;f__AnonymousType1`2::get_type([Assembly-CSharp]&lt;&gt;f__AnonymousType1`2&lt;!0,!1&gt;)" newName="$get_type" oldStackTraceSignature="&lt;&gt;f__AnonymousType1`2:get_type()" newStackTraceSignature="$&lt;&gt;f__AnonymousType1`2:$get_type()" />
      <method signature="!1 &lt;&gt;f__AnonymousType1`2::get_method([Assembly-CSharp]&lt;&gt;f__AnonymousType1`2&lt;!0,!1&gt;)" newName="$get_method" oldStackTraceSignature="&lt;&gt;f__AnonymousType1`2:get_method()" newStackTraceSignature="$&lt;&gt;f__AnonymousType1`2:$get_method()" />
    </type>
    <type fullName="&lt;PrivateImplementationDetails&gt;" newFullName="$&lt;PrivateImplementationDetails&gt;" status="Renamed">
      <field signature="[Assembly-CSharp]&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=5464 039A636936ED71962231AA5E1F53895DA09EB3514311C548616503EA572E9D6F" newName="$039A636936ED71962231AA5E1F53895DA09EB3514311C548616503EA572E9D6F" />
      <field signature="[Assembly-CSharp]&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=4973 9F65B1EDF945C7FA6E5EB61BBC1D0001257CFF391B2E1BFC8DA1A7511A6E28F0" newName="$9F65B1EDF945C7FA6E5EB61BBC1D0001257CFF391B2E1BFC8DA1A7511A6E28F0" />
      <field signature="[Assembly-CSharp]&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=12 A0D673A85CA2CEE9AFDD1A9BAC40D741D2F8F94C97C59385CDD5B8891D35F237" newName="$A0D673A85CA2CEE9AFDD1A9BAC40D741D2F8F94C97C59385CDD5B8891D35F237" />
    </type>
    <type fullName="&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=12" newFullName="$&lt;PrivateImplementationDetails&gt;/$__StaticArrayInitTypeSize=12" status="Renamed" />
    <type fullName="&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=4973" newFullName="$&lt;PrivateImplementationDetails&gt;/$__StaticArrayInitTypeSize=4973" status="Renamed" />
    <type fullName="&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=5464" newFullName="$&lt;PrivateImplementationDetails&gt;/$__StaticArrayInitTypeSize=5464" status="Renamed" />
    <type fullName="ExampleGenConfig" newFullName="$ExampleGenConfig" status="Renamed">
      <field signature="System.Collections.Generic.List`1&lt;System.Type&gt; LuaCallCSharp" newName="$LuaCallCSharp" />
      <field signature="System.Collections.Generic.List`1&lt;System.Type&gt; CSharpCallLua" newName="$CSharpCallLua" />
      <field signature="System.Collections.Generic.List`1&lt;System.Collections.Generic.List`1&lt;string&gt;&gt; BlackList" newName="$BlackList" />
    </type>
    <type fullName="LuaCallCs" newFullName="" status="NotRenamed">
      <field signature="[Assembly-CSharp]XLua.LuaEnv luaenv" newName="$luaenv" />
      <field signature="string script" newName="$script" />
    </type>
    <type fullName="Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine" newFullName="$Obfuz.EncryptionVM.$GeneratedEncryptionVirtualMachine" status="Renamed">
      <field signature="int kOpCodeBits" newName="$kOpCodeBits" />
      <field signature="int kOpCodeCount" newName="$kOpCodeCount" />
      <field signature="int kOpCodeMask" newName="$kOpCodeMask" />
      <field signature="int[] _secretKey" newName="$_secretKey" />
      <property signature="int OpCodeCount" newName="$OpCodeCount" />
      <method signature="int Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine::get_OpCodeCount([Assembly-CSharp]Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine)" newName="$get_OpCodeCount" oldStackTraceSignature="Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine:get_OpCodeCount()" newStackTraceSignature="$Obfuz.EncryptionVM.$GeneratedEncryptionVirtualMachine:$get_OpCodeCount()" />
      <method signature="int Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine::Encrypt([Assembly-CSharp]Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine, int, int, int)" newName="$Encrypt450" oldStackTraceSignature="Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine:Encrypt(Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.EncryptionVM.$GeneratedEncryptionVirtualMachine:$Encrypt450(Int32, Int32, Int32)" />
      <method signature="int Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine::Decrypt([Assembly-CSharp]Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine, int, int, int)" newName="$Decrypt451" oldStackTraceSignature="Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine:Decrypt(Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.EncryptionVM.$GeneratedEncryptionVirtualMachine:$Decrypt451(Int32, Int32, Int32)" />
      <method signature="int Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine::ExecuteEncrypt([Assembly-CSharp]Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine, int, int, int)" newName="$ExecuteEncrypt" oldStackTraceSignature="Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine:ExecuteEncrypt(Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.EncryptionVM.$GeneratedEncryptionVirtualMachine:$ExecuteEncrypt(Int32, Int32, Int32)" />
      <method signature="int Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine::ExecuteDecrypt([Assembly-CSharp]Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine, int, int, int)" newName="$ExecuteDecrypt" oldStackTraceSignature="Obfuz.EncryptionVM.GeneratedEncryptionVirtualMachine:ExecuteDecrypt(Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.EncryptionVM.$GeneratedEncryptionVirtualMachine:$ExecuteDecrypt(Int32, Int32, Int32)" />
    </type>
    <type fullName="Tutorial.BaseClass" newFullName="$Tutorial.$BaseClass" status="Renamed">
      <field signature="int BSF" newName="$BSF" />
      <field signature="int &lt;BMF&gt;k__BackingField" newName="$&lt;BMF&gt;k__BackingField" />
      <property signature="int BMF" newName="$BMF" />
      <method signature="void Tutorial.BaseClass::BSFunc()" newName="$BSFunc" oldStackTraceSignature="Tutorial.BaseClass:BSFunc()" newStackTraceSignature="$Tutorial.$BaseClass:$BSFunc()" />
      <method signature="void Tutorial.BaseClass::BMFunc([Assembly-CSharp]Tutorial.BaseClass)" newName="$BMFunc" oldStackTraceSignature="Tutorial.BaseClass:BMFunc()" newStackTraceSignature="$Tutorial.$BaseClass:$BMFunc()" />
      <method signature="int Tutorial.BaseClass::get_BMF([Assembly-CSharp]Tutorial.BaseClass)" newName="$get_BMF" oldStackTraceSignature="Tutorial.BaseClass:get_BMF()" newStackTraceSignature="$Tutorial.$BaseClass:$get_BMF()" />
      <method signature="void Tutorial.BaseClass::set_BMF([Assembly-CSharp]Tutorial.BaseClass, int)" newName="$set_BMF" oldStackTraceSignature="Tutorial.BaseClass:set_BMF(Int32)" newStackTraceSignature="$Tutorial.$BaseClass:$set_BMF(Int32)" />
    </type>
    <type fullName="Tutorial.ByFile" newFullName="" status="NotRenamed">
      <field signature="[Assembly-CSharp]XLua.LuaEnv luaenv" newName="$luaenv2" />
    </type>
    <type fullName="Tutorial.ByString" newFullName="" status="NotRenamed">
      <field signature="[Assembly-CSharp]XLua.LuaEnv luaenv" newName="$luaenv3" />
    </type>
    <type fullName="Tutorial.CSCallLua" newFullName="" status="NotRenamed">
      <field signature="[Assembly-CSharp]XLua.LuaEnv luaenv" newName="$luaenv0" />
      <field signature="string script" newName="$script1" />
    </type>
    <type fullName="Tutorial.CSCallLua/DClass" newFullName="Tutorial.CSCallLua/$DClass" status="Renamed">
      <field signature="int f1" newName="$f1" />
      <field signature="int f2" newName="$f2" />
    </type>
    <type fullName="Tutorial.CSCallLua/FDelegate" newFullName="Tutorial.CSCallLua/$FDelegate" status="Renamed" />
    <type fullName="Tutorial.CSCallLua/GetE" newFullName="Tutorial.CSCallLua/$GetE" status="Renamed" />
    <type fullName="Tutorial.CSCallLua/ItfD" newFullName="Tutorial.CSCallLua/$ItfD" status="Renamed">
      <property signature="int f1" newName="$f1" />
      <property signature="int f2" newName="$f2" />
      <method signature="int Tutorial.CSCallLua/ItfD::get_f1([Assembly-CSharp]Tutorial.CSCallLua/ItfD)" newName="$get_f1" oldStackTraceSignature="Tutorial.ItfD:get_f1()" newStackTraceSignature="Tutorial.$ItfD:$get_f1()" />
      <method signature="void Tutorial.CSCallLua/ItfD::set_f1([Assembly-CSharp]Tutorial.CSCallLua/ItfD, int)" newName="$set_f1" oldStackTraceSignature="Tutorial.ItfD:set_f1(Int32)" newStackTraceSignature="Tutorial.$ItfD:$set_f1(Int32)" />
      <method signature="int Tutorial.CSCallLua/ItfD::get_f2([Assembly-CSharp]Tutorial.CSCallLua/ItfD)" newName="$get_f2" oldStackTraceSignature="Tutorial.ItfD:get_f2()" newStackTraceSignature="Tutorial.$ItfD:$get_f2()" />
      <method signature="void Tutorial.CSCallLua/ItfD::set_f2([Assembly-CSharp]Tutorial.CSCallLua/ItfD, int)" newName="$set_f2" oldStackTraceSignature="Tutorial.ItfD:set_f2(Int32)" newStackTraceSignature="Tutorial.$ItfD:$set_f2(Int32)" />
      <method signature="int Tutorial.CSCallLua/ItfD::add([Assembly-CSharp]Tutorial.CSCallLua/ItfD, int, int)" newName="$add" oldStackTraceSignature="Tutorial.ItfD:add(Int32, Int32)" newStackTraceSignature="Tutorial.$ItfD:$add(Int32, Int32)" />
    </type>
    <type fullName="Tutorial.CustomLoader" newFullName="" status="NotRenamed">
      <field signature="[Assembly-CSharp]XLua.LuaEnv luaenv" newName="$luaenv4" />
    </type>
    <type fullName="Tutorial.CustomLoader/&lt;&gt;c" newFullName="" status="NotRenamed">
      <field signature="[Assembly-CSharp]Tutorial.CustomLoader/&lt;&gt;c &lt;&gt;9" newName="$&lt;&gt;9" />
      <field signature="[Assembly-CSharp]XLua.LuaEnv/CustomLoader &lt;&gt;9__1_0" newName="$&lt;&gt;9__1_0" />
      <method signature="byte[] Tutorial.CustomLoader/&lt;&gt;c::&lt;Start&gt;b__1_0([Assembly-CSharp]Tutorial.CustomLoader/&lt;&gt;c, string&amp;)" newName="$&lt;Start&gt;b__1_0" oldStackTraceSignature="Tutorial.&lt;&gt;c:&lt;Start&gt;b__1_0(String&amp;)" newStackTraceSignature="Tutorial.&lt;&gt;c:$&lt;Start&gt;b__1_0(String&amp;)" />
    </type>
    <type fullName="Tutorial.DerivedClass" newFullName="$Tutorial.$DerivedClass" status="Renamed">
      <field signature="int &lt;DMF&gt;k__BackingField" newName="$&lt;DMF&gt;k__BackingField" />
      <field signature="System.Action`1&lt;string&gt; TestDelegate" newName="$TestDelegate" />
      <field signature="System.Action TestEvent" newName="$TestEvent" />
      <property signature="int DMF" newName="$DMF" />
      <event signature="System.Action TestEvent" newName="$TestEvent" />
      <method signature="void Tutorial.DerivedClass::DMFunc([Assembly-CSharp]Tutorial.DerivedClass)" newName="$DMFunc" oldStackTraceSignature="Tutorial.DerivedClass:DMFunc()" newStackTraceSignature="$Tutorial.$DerivedClass:$DMFunc()" />
      <method signature="int Tutorial.DerivedClass::get_DMF([Assembly-CSharp]Tutorial.DerivedClass)" newName="$get_DMF" oldStackTraceSignature="Tutorial.DerivedClass:get_DMF()" newStackTraceSignature="$Tutorial.$DerivedClass:$get_DMF()" />
      <method signature="void Tutorial.DerivedClass::set_DMF([Assembly-CSharp]Tutorial.DerivedClass, int)" newName="$set_DMF" oldStackTraceSignature="Tutorial.DerivedClass:set_DMF(Int32)" newStackTraceSignature="$Tutorial.$DerivedClass:$set_DMF(Int32)" />
      <method signature="double Tutorial.DerivedClass::ComplexFunc([Assembly-CSharp]Tutorial.DerivedClass, [Assembly-CSharp]Tutorial.Param1, int&amp;, string&amp;, System.Action, System.Action&amp;)" newName="$ComplexFunc" oldStackTraceSignature="Tutorial.DerivedClass:ComplexFunc(Param1, Int32&amp;, String&amp;, Action, Action&amp;)" newStackTraceSignature="$Tutorial.$DerivedClass:$ComplexFunc($Param1, Int32&amp;, String&amp;, Action, Action&amp;)" />
      <method signature="void Tutorial.DerivedClass::TestFunc([Assembly-CSharp]Tutorial.DerivedClass, int)" newName="$TestFunc" oldStackTraceSignature="Tutorial.DerivedClass:TestFunc(Int32)" newStackTraceSignature="$Tutorial.$DerivedClass:$TestFunc(Int32)" />
      <method signature="void Tutorial.DerivedClass::TestFunc([Assembly-CSharp]Tutorial.DerivedClass, string)" newName="$TestFunc0" oldStackTraceSignature="Tutorial.DerivedClass:TestFunc(String)" newStackTraceSignature="$Tutorial.$DerivedClass:$TestFunc0(String)" />
      <method signature="[Assembly-CSharp]Tutorial.DerivedClass Tutorial.DerivedClass::op_Addition([Assembly-CSharp]Tutorial.DerivedClass, [Assembly-CSharp]Tutorial.DerivedClass)" newName="$op_Addition" oldStackTraceSignature="Tutorial.DerivedClass:op_Addition(DerivedClass, DerivedClass)" newStackTraceSignature="$Tutorial.$DerivedClass:$op_Addition($DerivedClass, $DerivedClass)" />
      <method signature="void Tutorial.DerivedClass::DefaultValueFunc([Assembly-CSharp]Tutorial.DerivedClass, int, string, string)" newName="$DefaultValueFunc" oldStackTraceSignature="Tutorial.DerivedClass:DefaultValueFunc(Int32, String, String)" newStackTraceSignature="$Tutorial.$DerivedClass:$DefaultValueFunc(Int32, String, String)" />
      <method signature="void Tutorial.DerivedClass::VariableParamsFunc([Assembly-CSharp]Tutorial.DerivedClass, int, string[])" newName="$VariableParamsFunc" oldStackTraceSignature="Tutorial.DerivedClass:VariableParamsFunc(Int32, String[])" newStackTraceSignature="$Tutorial.$DerivedClass:$VariableParamsFunc(Int32, String[])" />
      <method signature="[Assembly-CSharp]Tutorial.TestEnum Tutorial.DerivedClass::EnumTestFunc([Assembly-CSharp]Tutorial.DerivedClass, [Assembly-CSharp]Tutorial.TestEnum)" newName="$EnumTestFunc" oldStackTraceSignature="Tutorial.DerivedClass:EnumTestFunc(TestEnum)" newStackTraceSignature="$Tutorial.$DerivedClass:$EnumTestFunc($TestEnum)" />
      <method signature="void Tutorial.DerivedClass::add_TestEvent([Assembly-CSharp]Tutorial.DerivedClass, System.Action)" newName="$add_TestEvent" oldStackTraceSignature="Tutorial.DerivedClass:add_TestEvent(Action)" newStackTraceSignature="$Tutorial.$DerivedClass:$add_TestEvent(Action)" />
      <method signature="void Tutorial.DerivedClass::remove_TestEvent([Assembly-CSharp]Tutorial.DerivedClass, System.Action)" newName="$remove_TestEvent" oldStackTraceSignature="Tutorial.DerivedClass:remove_TestEvent(Action)" newStackTraceSignature="$Tutorial.$DerivedClass:$remove_TestEvent(Action)" />
      <method signature="void Tutorial.DerivedClass::CallEvent([Assembly-CSharp]Tutorial.DerivedClass)" newName="$CallEvent" oldStackTraceSignature="Tutorial.DerivedClass:CallEvent()" newStackTraceSignature="$Tutorial.$DerivedClass:$CallEvent()" />
      <method signature="ulong Tutorial.DerivedClass::TestLong([Assembly-CSharp]Tutorial.DerivedClass, long)" newName="$TestLong" oldStackTraceSignature="Tutorial.DerivedClass:TestLong(Int64)" newStackTraceSignature="$Tutorial.$DerivedClass:$TestLong(Int64)" />
      <method signature="[Assembly-CSharp]Tutorial.ICalc Tutorial.DerivedClass::GetCalc([Assembly-CSharp]Tutorial.DerivedClass)" newName="$GetCalc" oldStackTraceSignature="Tutorial.DerivedClass:GetCalc()" newStackTraceSignature="$Tutorial.$DerivedClass:$GetCalc()" />
      <method signature="void Tutorial.DerivedClass::GenericMethod`1([Assembly-CSharp]Tutorial.DerivedClass)" newName="$GenericMethod" oldStackTraceSignature="Tutorial.DerivedClass:GenericMethod()" newStackTraceSignature="$Tutorial.$DerivedClass:$GenericMethod()" />
    </type>
    <type fullName="Tutorial.DerivedClass/&lt;&gt;c" newFullName="" status="NotRenamed">
      <field signature="[Assembly-CSharp]Tutorial.DerivedClass/&lt;&gt;c &lt;&gt;9" newName="$&lt;&gt;95" />
      <field signature="System.Action &lt;&gt;9__6_0" newName="$&lt;&gt;9__6_0" />
      <field signature="System.Action`1&lt;string&gt; &lt;&gt;9__22_0" newName="$&lt;&gt;9__22_0" />
      <method signature="void Tutorial.DerivedClass/&lt;&gt;c::&lt;ComplexFunc&gt;b__6_0([Assembly-CSharp]Tutorial.DerivedClass/&lt;&gt;c)" newName="$&lt;ComplexFunc&gt;b__6_0" oldStackTraceSignature="Tutorial.&lt;&gt;c:&lt;ComplexFunc&gt;b__6_0()" newStackTraceSignature="$Tutorial.&lt;&gt;c:$&lt;ComplexFunc&gt;b__6_0()" />
      <method signature="void Tutorial.DerivedClass/&lt;&gt;c::&lt;.ctor&gt;b__22_0([Assembly-CSharp]Tutorial.DerivedClass/&lt;&gt;c, string)" newName="$&lt;.ctor&gt;b__22_0" oldStackTraceSignature="Tutorial.&lt;&gt;c:&lt;.ctor&gt;b__22_0(String)" newStackTraceSignature="$Tutorial.&lt;&gt;c:$&lt;.ctor&gt;b__22_0(String)" />
    </type>
    <type fullName="Tutorial.DerivedClass/InnerCalc" newFullName="$Tutorial.$DerivedClass/$InnerCalc" status="Renamed" />
    <type fullName="Tutorial.DerivedClass/TestEnumInner" newFullName="$Tutorial.$DerivedClass/$TestEnumInner" status="Renamed">
      <field signature="[Assembly-CSharp]Tutorial.DerivedClass/TestEnumInner E3" newName="$E3" />
      <field signature="[Assembly-CSharp]Tutorial.DerivedClass/TestEnumInner E4" newName="$E4" />
    </type>
    <type fullName="Tutorial.DerivedClassExtensions" newFullName="$Tutorial.$DerivedClassExtensions" status="Renamed">
      <method signature="int Tutorial.DerivedClassExtensions::GetSomeData([Assembly-CSharp]Tutorial.DerivedClass)" newName="$GetSomeData" oldStackTraceSignature="Tutorial.DerivedClassExtensions:GetSomeData(DerivedClass)" newStackTraceSignature="$Tutorial.$DerivedClassExtensions:$GetSomeData($DerivedClass)" />
      <method signature="int Tutorial.DerivedClassExtensions::GetSomeBaseData([Assembly-CSharp]Tutorial.BaseClass)" newName="$GetSomeBaseData" oldStackTraceSignature="Tutorial.DerivedClassExtensions:GetSomeBaseData(BaseClass)" newStackTraceSignature="$Tutorial.$DerivedClassExtensions:$GetSomeBaseData($BaseClass)" />
      <method signature="void Tutorial.DerivedClassExtensions::GenericMethodOfString([Assembly-CSharp]Tutorial.DerivedClass)" newName="$GenericMethodOfString" oldStackTraceSignature="Tutorial.DerivedClassExtensions:GenericMethodOfString(DerivedClass)" newStackTraceSignature="$Tutorial.$DerivedClassExtensions:$GenericMethodOfString($DerivedClass)" />
    </type>
    <type fullName="Tutorial.ICalc" newFullName="$Tutorial.$ICalc" status="Renamed" />
    <type fullName="Tutorial.Param1" newFullName="$Tutorial.$Param1" status="Renamed">
      <field signature="int x" newName="$x" />
      <field signature="string y" newName="$y" />
    </type>
    <type fullName="Tutorial.TestEnum" newFullName="$Tutorial.$TestEnum" status="Renamed">
      <field signature="[Assembly-CSharp]Tutorial.TestEnum E1" newName="$E1" />
      <field signature="[Assembly-CSharp]Tutorial.TestEnum E2" newName="$E2" />
    </type>
    <type fullName="XLua.AdditionalPropertiesAttribute" newFullName="$XLua.$AdditionalPropertiesAttribute" status="Renamed" />
    <type fullName="XLua.BlackListAttribute" newFullName="$XLua.$BlackListAttribute" status="Renamed" />
    <type fullName="XLua.Cast.Any`1" newFullName="$XLua.Cast.$Any`1" status="Renamed">
      <field signature="!0 mTarget" newName="$mTarget" />
      <property signature="object Target" newName="$Target" />
      <method signature="object XLua.Cast.Any`1::get_Target([Assembly-CSharp]XLua.Cast.Any`1&lt;!0&gt;)" newName="$get_Target" oldStackTraceSignature="XLua.Cast.Any`1:get_Target()" newStackTraceSignature="$XLua.Cast.$Any`1:$get_Target()" />
    </type>
    <type fullName="XLua.Cast.Byte" newFullName="$XLua.Cast.$Byte" status="Renamed" />
    <type fullName="XLua.Cast.Char" newFullName="$XLua.Cast.$Char" status="Renamed" />
    <type fullName="XLua.Cast.Float" newFullName="$XLua.Cast.$Float" status="Renamed" />
    <type fullName="XLua.Cast.Int16" newFullName="$XLua.Cast.$Int16" status="Renamed" />
    <type fullName="XLua.Cast.Int32" newFullName="$XLua.Cast.$Int32" status="Renamed" />
    <type fullName="XLua.Cast.Int64" newFullName="$XLua.Cast.$Int64" status="Renamed" />
    <type fullName="XLua.Cast.SByte" newFullName="$XLua.Cast.$SByte" status="Renamed" />
    <type fullName="XLua.Cast.UInt16" newFullName="$XLua.Cast.$UInt16" status="Renamed" />
    <type fullName="XLua.Cast.UInt32" newFullName="$XLua.Cast.$UInt32" status="Renamed" />
    <type fullName="XLua.Cast.UInt64" newFullName="$XLua.Cast.$UInt64" status="Renamed" />
    <type fullName="XLua.CopyByValue" newFullName="$XLua.$CopyByValue" status="Renamed">
      <method signature="void XLua.CopyByValue::UnPack([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [UnityEngine.CoreModule]UnityEngine.Vector2&amp;)" newName="$UnPack" oldStackTraceSignature="XLua.CopyByValue:UnPack(ObjectTranslator, IntPtr, Int32, Vector2&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack($ObjectTranslator, IntPtr, Int32, Vector2&amp;)" />
      <method signature="bool XLua.CopyByValue::Pack(nint, int, [UnityEngine.CoreModule]UnityEngine.Vector2)" newName="$Pack" oldStackTraceSignature="XLua.CopyByValue:Pack(IntPtr, Int32, Vector2)" newStackTraceSignature="$XLua.$CopyByValue:$Pack(IntPtr, Int32, Vector2)" />
      <method signature="bool XLua.CopyByValue::UnPack(nint, int, [UnityEngine.CoreModule]UnityEngine.Vector2&amp;)" newName="$UnPack9" oldStackTraceSignature="XLua.CopyByValue:UnPack(IntPtr, Int32, Vector2&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack9(IntPtr, Int32, Vector2&amp;)" />
      <method signature="void XLua.CopyByValue::UnPack([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [UnityEngine.CoreModule]UnityEngine.Vector3&amp;)" newName="$UnPack10" oldStackTraceSignature="XLua.CopyByValue:UnPack(ObjectTranslator, IntPtr, Int32, Vector3&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack10($ObjectTranslator, IntPtr, Int32, Vector3&amp;)" />
      <method signature="bool XLua.CopyByValue::Pack(nint, int, [UnityEngine.CoreModule]UnityEngine.Vector3)" newName="$Pack11" oldStackTraceSignature="XLua.CopyByValue:Pack(IntPtr, Int32, Vector3)" newStackTraceSignature="$XLua.$CopyByValue:$Pack11(IntPtr, Int32, Vector3)" />
      <method signature="bool XLua.CopyByValue::UnPack(nint, int, [UnityEngine.CoreModule]UnityEngine.Vector3&amp;)" newName="$UnPack12" oldStackTraceSignature="XLua.CopyByValue:UnPack(IntPtr, Int32, Vector3&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack12(IntPtr, Int32, Vector3&amp;)" />
      <method signature="void XLua.CopyByValue::UnPack([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [UnityEngine.CoreModule]UnityEngine.Vector4&amp;)" newName="$UnPack13" oldStackTraceSignature="XLua.CopyByValue:UnPack(ObjectTranslator, IntPtr, Int32, Vector4&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack13($ObjectTranslator, IntPtr, Int32, Vector4&amp;)" />
      <method signature="bool XLua.CopyByValue::Pack(nint, int, [UnityEngine.CoreModule]UnityEngine.Vector4)" newName="$Pack14" oldStackTraceSignature="XLua.CopyByValue:Pack(IntPtr, Int32, Vector4)" newStackTraceSignature="$XLua.$CopyByValue:$Pack14(IntPtr, Int32, Vector4)" />
      <method signature="bool XLua.CopyByValue::UnPack(nint, int, [UnityEngine.CoreModule]UnityEngine.Vector4&amp;)" newName="$UnPack15" oldStackTraceSignature="XLua.CopyByValue:UnPack(IntPtr, Int32, Vector4&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack15(IntPtr, Int32, Vector4&amp;)" />
      <method signature="void XLua.CopyByValue::UnPack([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [UnityEngine.CoreModule]UnityEngine.Color&amp;)" newName="$UnPack16" oldStackTraceSignature="XLua.CopyByValue:UnPack(ObjectTranslator, IntPtr, Int32, Color&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack16($ObjectTranslator, IntPtr, Int32, Color&amp;)" />
      <method signature="bool XLua.CopyByValue::Pack(nint, int, [UnityEngine.CoreModule]UnityEngine.Color)" newName="$Pack17" oldStackTraceSignature="XLua.CopyByValue:Pack(IntPtr, Int32, Color)" newStackTraceSignature="$XLua.$CopyByValue:$Pack17(IntPtr, Int32, Color)" />
      <method signature="bool XLua.CopyByValue::UnPack(nint, int, [UnityEngine.CoreModule]UnityEngine.Color&amp;)" newName="$UnPack18" oldStackTraceSignature="XLua.CopyByValue:UnPack(IntPtr, Int32, Color&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack18(IntPtr, Int32, Color&amp;)" />
      <method signature="void XLua.CopyByValue::UnPack([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [UnityEngine.CoreModule]UnityEngine.Quaternion&amp;)" newName="$UnPack19" oldStackTraceSignature="XLua.CopyByValue:UnPack(ObjectTranslator, IntPtr, Int32, Quaternion&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack19($ObjectTranslator, IntPtr, Int32, Quaternion&amp;)" />
      <method signature="bool XLua.CopyByValue::Pack(nint, int, [UnityEngine.CoreModule]UnityEngine.Quaternion)" newName="$Pack20" oldStackTraceSignature="XLua.CopyByValue:Pack(IntPtr, Int32, Quaternion)" newStackTraceSignature="$XLua.$CopyByValue:$Pack20(IntPtr, Int32, Quaternion)" />
      <method signature="bool XLua.CopyByValue::UnPack(nint, int, [UnityEngine.CoreModule]UnityEngine.Quaternion&amp;)" newName="$UnPack21" oldStackTraceSignature="XLua.CopyByValue:UnPack(IntPtr, Int32, Quaternion&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack21(IntPtr, Int32, Quaternion&amp;)" />
      <method signature="void XLua.CopyByValue::UnPack([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [UnityEngine.CoreModule]UnityEngine.Ray&amp;)" newName="$UnPack22" oldStackTraceSignature="XLua.CopyByValue:UnPack(ObjectTranslator, IntPtr, Int32, Ray&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack22($ObjectTranslator, IntPtr, Int32, Ray&amp;)" />
      <method signature="bool XLua.CopyByValue::Pack(nint, int, [UnityEngine.CoreModule]UnityEngine.Ray)" newName="$Pack23" oldStackTraceSignature="XLua.CopyByValue:Pack(IntPtr, Int32, Ray)" newStackTraceSignature="$XLua.$CopyByValue:$Pack23(IntPtr, Int32, Ray)" />
      <method signature="bool XLua.CopyByValue::UnPack(nint, int, [UnityEngine.CoreModule]UnityEngine.Ray&amp;)" newName="$UnPack24" oldStackTraceSignature="XLua.CopyByValue:UnPack(IntPtr, Int32, Ray&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack24(IntPtr, Int32, Ray&amp;)" />
      <method signature="void XLua.CopyByValue::UnPack([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [UnityEngine.CoreModule]UnityEngine.Bounds&amp;)" newName="$UnPack25" oldStackTraceSignature="XLua.CopyByValue:UnPack(ObjectTranslator, IntPtr, Int32, Bounds&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack25($ObjectTranslator, IntPtr, Int32, Bounds&amp;)" />
      <method signature="bool XLua.CopyByValue::Pack(nint, int, [UnityEngine.CoreModule]UnityEngine.Bounds)" newName="$Pack26" oldStackTraceSignature="XLua.CopyByValue:Pack(IntPtr, Int32, Bounds)" newStackTraceSignature="$XLua.$CopyByValue:$Pack26(IntPtr, Int32, Bounds)" />
      <method signature="bool XLua.CopyByValue::UnPack(nint, int, [UnityEngine.CoreModule]UnityEngine.Bounds&amp;)" newName="$UnPack27" oldStackTraceSignature="XLua.CopyByValue:UnPack(IntPtr, Int32, Bounds&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack27(IntPtr, Int32, Bounds&amp;)" />
      <method signature="void XLua.CopyByValue::UnPack([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [UnityEngine.CoreModule]UnityEngine.Ray2D&amp;)" newName="$UnPack28" oldStackTraceSignature="XLua.CopyByValue:UnPack(ObjectTranslator, IntPtr, Int32, Ray2D&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack28($ObjectTranslator, IntPtr, Int32, Ray2D&amp;)" />
      <method signature="bool XLua.CopyByValue::Pack(nint, int, [UnityEngine.CoreModule]UnityEngine.Ray2D)" newName="$Pack29" oldStackTraceSignature="XLua.CopyByValue:Pack(IntPtr, Int32, Ray2D)" newStackTraceSignature="$XLua.$CopyByValue:$Pack29(IntPtr, Int32, Ray2D)" />
      <method signature="bool XLua.CopyByValue::UnPack(nint, int, [UnityEngine.CoreModule]UnityEngine.Ray2D&amp;)" newName="$UnPack30" oldStackTraceSignature="XLua.CopyByValue:UnPack(IntPtr, Int32, Ray2D&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack30(IntPtr, Int32, Ray2D&amp;)" />
      <method signature="void XLua.CopyByValue::UnPack([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [Assembly-CSharp]XLuaTest.Pedding&amp;)" newName="$UnPack31" oldStackTraceSignature="XLua.CopyByValue:UnPack(ObjectTranslator, IntPtr, Int32, Pedding&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack31($ObjectTranslator, IntPtr, Int32, $Pedding&amp;)" />
      <method signature="bool XLua.CopyByValue::Pack(nint, int, [Assembly-CSharp]XLuaTest.Pedding)" newName="$Pack32" oldStackTraceSignature="XLua.CopyByValue:Pack(IntPtr, Int32, Pedding)" newStackTraceSignature="$XLua.$CopyByValue:$Pack32(IntPtr, Int32, $Pedding)" />
      <method signature="bool XLua.CopyByValue::UnPack(nint, int, [Assembly-CSharp]XLuaTest.Pedding&amp;)" newName="$UnPack33" oldStackTraceSignature="XLua.CopyByValue:UnPack(IntPtr, Int32, Pedding&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack33(IntPtr, Int32, $Pedding&amp;)" />
      <method signature="void XLua.CopyByValue::UnPack([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [Assembly-CSharp]XLuaTest.MyStruct&amp;)" newName="$UnPack34" oldStackTraceSignature="XLua.CopyByValue:UnPack(ObjectTranslator, IntPtr, Int32, MyStruct&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack34($ObjectTranslator, IntPtr, Int32, $MyStruct&amp;)" />
      <method signature="bool XLua.CopyByValue::Pack(nint, int, [Assembly-CSharp]XLuaTest.MyStruct)" newName="$Pack35" oldStackTraceSignature="XLua.CopyByValue:Pack(IntPtr, Int32, MyStruct)" newStackTraceSignature="$XLua.$CopyByValue:$Pack35(IntPtr, Int32, $MyStruct)" />
      <method signature="bool XLua.CopyByValue::UnPack(nint, int, [Assembly-CSharp]XLuaTest.MyStruct&amp;)" newName="$UnPack36" oldStackTraceSignature="XLua.CopyByValue:UnPack(IntPtr, Int32, MyStruct&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack36(IntPtr, Int32, $MyStruct&amp;)" />
      <method signature="void XLua.CopyByValue::UnPack([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [Assembly-CSharp]XLuaTest.PushAsTableStruct&amp;)" newName="$UnPack37" oldStackTraceSignature="XLua.CopyByValue:UnPack(ObjectTranslator, IntPtr, Int32, PushAsTableStruct&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack37($ObjectTranslator, IntPtr, Int32, $PushAsTableStruct&amp;)" />
      <method signature="bool XLua.CopyByValue::Pack(nint, int, [Assembly-CSharp]XLuaTest.PushAsTableStruct)" newName="$Pack38" oldStackTraceSignature="XLua.CopyByValue:Pack(IntPtr, Int32, PushAsTableStruct)" newStackTraceSignature="$XLua.$CopyByValue:$Pack38(IntPtr, Int32, $PushAsTableStruct)" />
      <method signature="bool XLua.CopyByValue::UnPack(nint, int, [Assembly-CSharp]XLuaTest.PushAsTableStruct&amp;)" newName="$UnPack39" oldStackTraceSignature="XLua.CopyByValue:UnPack(IntPtr, Int32, PushAsTableStruct&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack39(IntPtr, Int32, $PushAsTableStruct&amp;)" />
      <method signature="bool XLua.CopyByValue::Pack(nint, int, byte)" newName="$Pack40" oldStackTraceSignature="XLua.CopyByValue:Pack(IntPtr, Int32, Byte)" newStackTraceSignature="$XLua.$CopyByValue:$Pack40(IntPtr, Int32, Byte)" />
      <method signature="bool XLua.CopyByValue::UnPack(nint, int, byte&amp;)" newName="$UnPack41" oldStackTraceSignature="XLua.CopyByValue:UnPack(IntPtr, Int32, Byte&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack41(IntPtr, Int32, Byte&amp;)" />
      <method signature="bool XLua.CopyByValue::Pack(nint, int, sbyte)" newName="$Pack42" oldStackTraceSignature="XLua.CopyByValue:Pack(IntPtr, Int32, SByte)" newStackTraceSignature="$XLua.$CopyByValue:$Pack42(IntPtr, Int32, SByte)" />
      <method signature="bool XLua.CopyByValue::UnPack(nint, int, sbyte&amp;)" newName="$UnPack43" oldStackTraceSignature="XLua.CopyByValue:UnPack(IntPtr, Int32, SByte&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack43(IntPtr, Int32, SByte&amp;)" />
      <method signature="bool XLua.CopyByValue::Pack(nint, int, short)" newName="$Pack44" oldStackTraceSignature="XLua.CopyByValue:Pack(IntPtr, Int32, Int16)" newStackTraceSignature="$XLua.$CopyByValue:$Pack44(IntPtr, Int32, Int16)" />
      <method signature="bool XLua.CopyByValue::UnPack(nint, int, short&amp;)" newName="$UnPack45" oldStackTraceSignature="XLua.CopyByValue:UnPack(IntPtr, Int32, Int16&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack45(IntPtr, Int32, Int16&amp;)" />
      <method signature="bool XLua.CopyByValue::Pack(nint, int, ushort)" newName="$Pack46" oldStackTraceSignature="XLua.CopyByValue:Pack(IntPtr, Int32, UInt16)" newStackTraceSignature="$XLua.$CopyByValue:$Pack46(IntPtr, Int32, UInt16)" />
      <method signature="bool XLua.CopyByValue::UnPack(nint, int, ushort&amp;)" newName="$UnPack47" oldStackTraceSignature="XLua.CopyByValue:UnPack(IntPtr, Int32, UInt16&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack47(IntPtr, Int32, UInt16&amp;)" />
      <method signature="bool XLua.CopyByValue::Pack(nint, int, int)" newName="$Pack48" oldStackTraceSignature="XLua.CopyByValue:Pack(IntPtr, Int32, Int32)" newStackTraceSignature="$XLua.$CopyByValue:$Pack48(IntPtr, Int32, Int32)" />
      <method signature="bool XLua.CopyByValue::UnPack(nint, int, int&amp;)" newName="$UnPack49" oldStackTraceSignature="XLua.CopyByValue:UnPack(IntPtr, Int32, Int32&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack49(IntPtr, Int32, Int32&amp;)" />
      <method signature="bool XLua.CopyByValue::Pack(nint, int, uint)" newName="$Pack50" oldStackTraceSignature="XLua.CopyByValue:Pack(IntPtr, Int32, UInt32)" newStackTraceSignature="$XLua.$CopyByValue:$Pack50(IntPtr, Int32, UInt32)" />
      <method signature="bool XLua.CopyByValue::UnPack(nint, int, uint&amp;)" newName="$UnPack51" oldStackTraceSignature="XLua.CopyByValue:UnPack(IntPtr, Int32, UInt32&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack51(IntPtr, Int32, UInt32&amp;)" />
      <method signature="bool XLua.CopyByValue::Pack(nint, int, long)" newName="$Pack52" oldStackTraceSignature="XLua.CopyByValue:Pack(IntPtr, Int32, Int64)" newStackTraceSignature="$XLua.$CopyByValue:$Pack52(IntPtr, Int32, Int64)" />
      <method signature="bool XLua.CopyByValue::UnPack(nint, int, long&amp;)" newName="$UnPack53" oldStackTraceSignature="XLua.CopyByValue:UnPack(IntPtr, Int32, Int64&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack53(IntPtr, Int32, Int64&amp;)" />
      <method signature="bool XLua.CopyByValue::Pack(nint, int, ulong)" newName="$Pack54" oldStackTraceSignature="XLua.CopyByValue:Pack(IntPtr, Int32, UInt64)" newStackTraceSignature="$XLua.$CopyByValue:$Pack54(IntPtr, Int32, UInt64)" />
      <method signature="bool XLua.CopyByValue::UnPack(nint, int, ulong&amp;)" newName="$UnPack55" oldStackTraceSignature="XLua.CopyByValue:UnPack(IntPtr, Int32, UInt64&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack55(IntPtr, Int32, UInt64&amp;)" />
      <method signature="bool XLua.CopyByValue::Pack(nint, int, float)" newName="$Pack56" oldStackTraceSignature="XLua.CopyByValue:Pack(IntPtr, Int32, Single)" newStackTraceSignature="$XLua.$CopyByValue:$Pack56(IntPtr, Int32, Single)" />
      <method signature="bool XLua.CopyByValue::UnPack(nint, int, float&amp;)" newName="$UnPack57" oldStackTraceSignature="XLua.CopyByValue:UnPack(IntPtr, Int32, Single&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack57(IntPtr, Int32, Single&amp;)" />
      <method signature="bool XLua.CopyByValue::Pack(nint, int, double)" newName="$Pack58" oldStackTraceSignature="XLua.CopyByValue:Pack(IntPtr, Int32, Double)" newStackTraceSignature="$XLua.$CopyByValue:$Pack58(IntPtr, Int32, Double)" />
      <method signature="bool XLua.CopyByValue::UnPack(nint, int, double&amp;)" newName="$UnPack59" oldStackTraceSignature="XLua.CopyByValue:UnPack(IntPtr, Int32, Double&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack59(IntPtr, Int32, Double&amp;)" />
      <method signature="bool XLua.CopyByValue::Pack(nint, int, System.Decimal)" newName="$Pack60" oldStackTraceSignature="XLua.CopyByValue:Pack(IntPtr, Int32, Decimal)" newStackTraceSignature="$XLua.$CopyByValue:$Pack60(IntPtr, Int32, Decimal)" />
      <method signature="bool XLua.CopyByValue::UnPack(nint, int, System.Decimal&amp;)" newName="$UnPack61" oldStackTraceSignature="XLua.CopyByValue:UnPack(IntPtr, Int32, Decimal&amp;)" newStackTraceSignature="$XLua.$CopyByValue:$UnPack61(IntPtr, Int32, Decimal&amp;)" />
      <method signature="bool XLua.CopyByValue::IsStruct(System.Type)" newName="$IsStruct" oldStackTraceSignature="XLua.CopyByValue:IsStruct(Type)" newStackTraceSignature="$XLua.$CopyByValue:$IsStruct(Type)" />
    </type>
    <type fullName="XLua.CSharpCallLuaAttribute" newFullName="$XLua.$CSharpCallLuaAttribute" status="Renamed" />
    <type fullName="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap" newFullName="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::__Register(nint)" newName="$__Register126" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$__Register126(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::__CreateInstance(nint)" newName="$__CreateInstance" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$__CreateInstance(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::__CSIndexer(nint)" newName="$__CSIndexer" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:__CSIndexer(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$__CSIndexer(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::__NewIndexer(nint)" newName="$__NewIndexer" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:__NewIndexer(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$__NewIndexer(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_m_Add(nint)" newName="$_m_Add" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_m_Add(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_m_Add(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_m_AddRange(nint)" newName="$_m_AddRange" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_m_AddRange(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_m_AddRange(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_m_AsReadOnly(nint)" newName="$_m_AsReadOnly" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_m_AsReadOnly(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_m_AsReadOnly(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_m_BinarySearch(nint)" newName="$_m_BinarySearch" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_m_BinarySearch(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_m_BinarySearch(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_m_Clear(nint)" newName="$_m_Clear" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_m_Clear(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_m_Clear(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_m_Contains(nint)" newName="$_m_Contains" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_m_Contains(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_m_Contains(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_m_CopyTo(nint)" newName="$_m_CopyTo" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_m_CopyTo(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_m_CopyTo(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_m_Exists(nint)" newName="$_m_Exists" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_m_Exists(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_m_Exists(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_m_Find(nint)" newName="$_m_Find" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_m_Find(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_m_Find(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_m_FindAll(nint)" newName="$_m_FindAll" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_m_FindAll(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_m_FindAll(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_m_FindIndex(nint)" newName="$_m_FindIndex" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_m_FindIndex(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_m_FindIndex(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_m_FindLast(nint)" newName="$_m_FindLast" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_m_FindLast(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_m_FindLast(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_m_FindLastIndex(nint)" newName="$_m_FindLastIndex" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_m_FindLastIndex(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_m_FindLastIndex(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_m_ForEach(nint)" newName="$_m_ForEach" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_m_ForEach(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_m_ForEach(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_m_GetEnumerator(nint)" newName="$_m_GetEnumerator" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_m_GetEnumerator(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_m_GetEnumerator(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_m_GetRange(nint)" newName="$_m_GetRange" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_m_GetRange(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_m_GetRange(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_m_IndexOf(nint)" newName="$_m_IndexOf" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_m_IndexOf(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_m_IndexOf(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_m_Insert(nint)" newName="$_m_Insert" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_m_Insert(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_m_Insert(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_m_InsertRange(nint)" newName="$_m_InsertRange" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_m_InsertRange(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_m_InsertRange(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_m_LastIndexOf(nint)" newName="$_m_LastIndexOf" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_m_LastIndexOf(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_m_LastIndexOf(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_m_Remove(nint)" newName="$_m_Remove" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_m_Remove(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_m_Remove(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_m_RemoveAll(nint)" newName="$_m_RemoveAll" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_m_RemoveAll(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_m_RemoveAll(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_m_RemoveAt(nint)" newName="$_m_RemoveAt" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_m_RemoveAt(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_m_RemoveAt(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_m_RemoveRange(nint)" newName="$_m_RemoveRange" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_m_RemoveRange(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_m_RemoveRange(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_m_Reverse(nint)" newName="$_m_Reverse" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_m_Reverse(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_m_Reverse(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_m_Sort(nint)" newName="$_m_Sort" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_m_Sort(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_m_Sort(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_m_ToArray(nint)" newName="$_m_ToArray" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_m_ToArray(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_m_ToArray(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_m_TrimExcess(nint)" newName="$_m_TrimExcess" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_m_TrimExcess(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_m_TrimExcess(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_m_TrueForAll(nint)" newName="$_m_TrueForAll" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_m_TrueForAll(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_m_TrueForAll(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_g_get_Capacity(nint)" newName="$_g_get_Capacity" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_g_get_Capacity(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_g_get_Capacity(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_g_get_Count(nint)" newName="$_g_get_Count" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_g_get_Count(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_g_get_Count(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap::_s_set_Capacity(nint)" newName="$_s_set_Capacity" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsGenericList_1_SystemInt32_Wrap:_s_set_Capacity(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsGenericList_1_SystemInt32_Wrap:$_s_set_Capacity(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.SystemCollectionsIEnumeratorBridge" newFullName="$XLua.CSObjectWrap.$SystemCollectionsIEnumeratorBridge" status="Renamed">
      <property signature="object System.Collections.IEnumerator.Current" newName="$System.Collections.IEnumerator.Current" />
      <method signature="[Assembly-CSharp]XLua.LuaBase XLua.CSObjectWrap.SystemCollectionsIEnumeratorBridge::__Create(int, [Assembly-CSharp]XLua.LuaEnv)" newName="$__Create" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsIEnumeratorBridge:__Create(Int32, LuaEnv)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsIEnumeratorBridge:$__Create(Int32, $LuaEnv)" />
      <method signature="bool XLua.CSObjectWrap.SystemCollectionsIEnumeratorBridge::System.Collections.IEnumerator.MoveNext([Assembly-CSharp]XLua.CSObjectWrap.SystemCollectionsIEnumeratorBridge)" newName="$System.Collections.IEnumerator.MoveNext" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsIEnumeratorBridge:System.Collections.IEnumerator.MoveNext()" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsIEnumeratorBridge:$System.Collections.IEnumerator.MoveNext()" />
      <method signature="void XLua.CSObjectWrap.SystemCollectionsIEnumeratorBridge::System.Collections.IEnumerator.Reset([Assembly-CSharp]XLua.CSObjectWrap.SystemCollectionsIEnumeratorBridge)" newName="$System.Collections.IEnumerator.Reset444" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsIEnumeratorBridge:System.Collections.IEnumerator.Reset()" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsIEnumeratorBridge:$System.Collections.IEnumerator.Reset444()" />
      <method signature="object XLua.CSObjectWrap.SystemCollectionsIEnumeratorBridge::System.Collections.IEnumerator.get_Current([Assembly-CSharp]XLua.CSObjectWrap.SystemCollectionsIEnumeratorBridge)" newName="$System.Collections.IEnumerator.get_Current445" oldStackTraceSignature="XLua.CSObjectWrap.SystemCollectionsIEnumeratorBridge:System.Collections.IEnumerator.get_Current()" newStackTraceSignature="$XLua.CSObjectWrap.$SystemCollectionsIEnumeratorBridge:$System.Collections.IEnumerator.get_Current445()" />
    </type>
    <type fullName="XLua.CSObjectWrap.SystemObjectWrap" newFullName="$XLua.CSObjectWrap.$SystemObjectWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.SystemObjectWrap::__Register(nint)" newName="$__Register127" oldStackTraceSignature="XLua.CSObjectWrap.SystemObjectWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemObjectWrap:$__Register127(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemObjectWrap::__CreateInstance(nint)" newName="$__CreateInstance128" oldStackTraceSignature="XLua.CSObjectWrap.SystemObjectWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemObjectWrap:$__CreateInstance128(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemObjectWrap::_m_Equals(nint)" newName="$_m_Equals" oldStackTraceSignature="XLua.CSObjectWrap.SystemObjectWrap:_m_Equals(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemObjectWrap:$_m_Equals(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemObjectWrap::_m_Equals_xlua_st_(nint)" newName="$_m_Equals_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.SystemObjectWrap:_m_Equals_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemObjectWrap:$_m_Equals_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemObjectWrap::_m_GetHashCode(nint)" newName="$_m_GetHashCode" oldStackTraceSignature="XLua.CSObjectWrap.SystemObjectWrap:_m_GetHashCode(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemObjectWrap:$_m_GetHashCode(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemObjectWrap::_m_GetType(nint)" newName="$_m_GetType" oldStackTraceSignature="XLua.CSObjectWrap.SystemObjectWrap:_m_GetType(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemObjectWrap:$_m_GetType(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemObjectWrap::_m_ToString(nint)" newName="$_m_ToString" oldStackTraceSignature="XLua.CSObjectWrap.SystemObjectWrap:_m_ToString(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemObjectWrap:$_m_ToString(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.SystemObjectWrap::_m_ReferenceEquals_xlua_st_(nint)" newName="$_m_ReferenceEquals_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.SystemObjectWrap:_m_ReferenceEquals_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$SystemObjectWrap:$_m_ReferenceEquals_xlua_st_(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.TutorialBaseClassWrap" newFullName="$XLua.CSObjectWrap.$TutorialBaseClassWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.TutorialBaseClassWrap::__Register(nint)" newName="$__Register129" oldStackTraceSignature="XLua.CSObjectWrap.TutorialBaseClassWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialBaseClassWrap:$__Register129(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialBaseClassWrap::__CreateInstance(nint)" newName="$__CreateInstance130" oldStackTraceSignature="XLua.CSObjectWrap.TutorialBaseClassWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialBaseClassWrap:$__CreateInstance130(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialBaseClassWrap::_m_BSFunc_xlua_st_(nint)" newName="$_m_BSFunc_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.TutorialBaseClassWrap:_m_BSFunc_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialBaseClassWrap:$_m_BSFunc_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialBaseClassWrap::_m_BMFunc(nint)" newName="$_m_BMFunc" oldStackTraceSignature="XLua.CSObjectWrap.TutorialBaseClassWrap:_m_BMFunc(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialBaseClassWrap:$_m_BMFunc(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialBaseClassWrap::_m_GetSomeBaseData(nint)" newName="$_m_GetSomeBaseData" oldStackTraceSignature="XLua.CSObjectWrap.TutorialBaseClassWrap:_m_GetSomeBaseData(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialBaseClassWrap:$_m_GetSomeBaseData(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialBaseClassWrap::_g_get_BMF(nint)" newName="$_g_get_BMF" oldStackTraceSignature="XLua.CSObjectWrap.TutorialBaseClassWrap:_g_get_BMF(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialBaseClassWrap:$_g_get_BMF(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialBaseClassWrap::_g_get_BSF(nint)" newName="$_g_get_BSF" oldStackTraceSignature="XLua.CSObjectWrap.TutorialBaseClassWrap:_g_get_BSF(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialBaseClassWrap:$_g_get_BSF(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialBaseClassWrap::_s_set_BMF(nint)" newName="$_s_set_BMF" oldStackTraceSignature="XLua.CSObjectWrap.TutorialBaseClassWrap:_s_set_BMF(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialBaseClassWrap:$_s_set_BMF(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialBaseClassWrap::_s_set_BSF(nint)" newName="$_s_set_BSF" oldStackTraceSignature="XLua.CSObjectWrap.TutorialBaseClassWrap:_s_set_BSF(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialBaseClassWrap:$_s_set_BSF(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.TutorialCSCallLuaItfDBridge" newFullName="$XLua.CSObjectWrap.$TutorialCSCallLuaItfDBridge" status="Renamed">
      <property signature="int Tutorial.CSCallLua.ItfD.f1" newName="$Tutorial.CSCallLua.ItfD.f1" />
      <property signature="int Tutorial.CSCallLua.ItfD.f2" newName="$Tutorial.CSCallLua.ItfD.f2" />
      <method signature="[Assembly-CSharp]XLua.LuaBase XLua.CSObjectWrap.TutorialCSCallLuaItfDBridge::__Create(int, [Assembly-CSharp]XLua.LuaEnv)" newName="$__Create131" oldStackTraceSignature="XLua.CSObjectWrap.TutorialCSCallLuaItfDBridge:__Create(Int32, LuaEnv)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialCSCallLuaItfDBridge:$__Create131(Int32, $LuaEnv)" />
      <method signature="int XLua.CSObjectWrap.TutorialCSCallLuaItfDBridge::Tutorial.CSCallLua.ItfD.add([Assembly-CSharp]XLua.CSObjectWrap.TutorialCSCallLuaItfDBridge, int, int)" newName="$Tutorial.CSCallLua.ItfD.add" oldStackTraceSignature="XLua.CSObjectWrap.TutorialCSCallLuaItfDBridge:Tutorial.CSCallLua.ItfD.add(Int32, Int32)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialCSCallLuaItfDBridge:$Tutorial.CSCallLua.ItfD.add(Int32, Int32)" />
      <method signature="int XLua.CSObjectWrap.TutorialCSCallLuaItfDBridge::Tutorial.CSCallLua.ItfD.get_f1([Assembly-CSharp]XLua.CSObjectWrap.TutorialCSCallLuaItfDBridge)" newName="$Tutorial.CSCallLua.ItfD.get_f1" oldStackTraceSignature="XLua.CSObjectWrap.TutorialCSCallLuaItfDBridge:Tutorial.CSCallLua.ItfD.get_f1()" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialCSCallLuaItfDBridge:$Tutorial.CSCallLua.ItfD.get_f1()" />
      <method signature="void XLua.CSObjectWrap.TutorialCSCallLuaItfDBridge::Tutorial.CSCallLua.ItfD.set_f1([Assembly-CSharp]XLua.CSObjectWrap.TutorialCSCallLuaItfDBridge, int)" newName="$Tutorial.CSCallLua.ItfD.set_f1" oldStackTraceSignature="XLua.CSObjectWrap.TutorialCSCallLuaItfDBridge:Tutorial.CSCallLua.ItfD.set_f1(Int32)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialCSCallLuaItfDBridge:$Tutorial.CSCallLua.ItfD.set_f1(Int32)" />
      <method signature="int XLua.CSObjectWrap.TutorialCSCallLuaItfDBridge::Tutorial.CSCallLua.ItfD.get_f2([Assembly-CSharp]XLua.CSObjectWrap.TutorialCSCallLuaItfDBridge)" newName="$Tutorial.CSCallLua.ItfD.get_f2" oldStackTraceSignature="XLua.CSObjectWrap.TutorialCSCallLuaItfDBridge:Tutorial.CSCallLua.ItfD.get_f2()" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialCSCallLuaItfDBridge:$Tutorial.CSCallLua.ItfD.get_f2()" />
      <method signature="void XLua.CSObjectWrap.TutorialCSCallLuaItfDBridge::Tutorial.CSCallLua.ItfD.set_f2([Assembly-CSharp]XLua.CSObjectWrap.TutorialCSCallLuaItfDBridge, int)" newName="$Tutorial.CSCallLua.ItfD.set_f2" oldStackTraceSignature="XLua.CSObjectWrap.TutorialCSCallLuaItfDBridge:Tutorial.CSCallLua.ItfD.set_f2(Int32)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialCSCallLuaItfDBridge:$Tutorial.CSCallLua.ItfD.set_f2(Int32)" />
    </type>
    <type fullName="XLua.CSObjectWrap.TutorialDerivedClassExtensionsWrap" newFullName="$XLua.CSObjectWrap.$TutorialDerivedClassExtensionsWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.TutorialDerivedClassExtensionsWrap::__Register(nint)" newName="$__Register132" oldStackTraceSignature="XLua.CSObjectWrap.TutorialDerivedClassExtensionsWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialDerivedClassExtensionsWrap:$__Register132(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialDerivedClassExtensionsWrap::__CreateInstance(nint)" newName="$__CreateInstance133" oldStackTraceSignature="XLua.CSObjectWrap.TutorialDerivedClassExtensionsWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialDerivedClassExtensionsWrap:$__CreateInstance133(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.TutorialDerivedClassTestEnumInnerWrap" newFullName="$XLua.CSObjectWrap.$TutorialDerivedClassTestEnumInnerWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.TutorialDerivedClassTestEnumInnerWrap::__Register(nint)" newName="$__Register124" oldStackTraceSignature="XLua.CSObjectWrap.TutorialDerivedClassTestEnumInnerWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialDerivedClassTestEnumInnerWrap:$__Register124(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialDerivedClassTestEnumInnerWrap::__CastFrom(nint)" newName="$__CastFrom125" oldStackTraceSignature="XLua.CSObjectWrap.TutorialDerivedClassTestEnumInnerWrap:__CastFrom(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialDerivedClassTestEnumInnerWrap:$__CastFrom125(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.TutorialDerivedClassWrap" newFullName="$XLua.CSObjectWrap.$TutorialDerivedClassWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.TutorialDerivedClassWrap::__Register(nint)" newName="$__Register134" oldStackTraceSignature="XLua.CSObjectWrap.TutorialDerivedClassWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialDerivedClassWrap:$__Register134(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialDerivedClassWrap::__CreateInstance(nint)" newName="$__CreateInstance135" oldStackTraceSignature="XLua.CSObjectWrap.TutorialDerivedClassWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialDerivedClassWrap:$__CreateInstance135(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialDerivedClassWrap::__AddMeta(nint)" newName="$__AddMeta" oldStackTraceSignature="XLua.CSObjectWrap.TutorialDerivedClassWrap:__AddMeta(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialDerivedClassWrap:$__AddMeta(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialDerivedClassWrap::_m_DMFunc(nint)" newName="$_m_DMFunc" oldStackTraceSignature="XLua.CSObjectWrap.TutorialDerivedClassWrap:_m_DMFunc(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialDerivedClassWrap:$_m_DMFunc(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialDerivedClassWrap::_m_ComplexFunc(nint)" newName="$_m_ComplexFunc" oldStackTraceSignature="XLua.CSObjectWrap.TutorialDerivedClassWrap:_m_ComplexFunc(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialDerivedClassWrap:$_m_ComplexFunc(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialDerivedClassWrap::_m_TestFunc(nint)" newName="$_m_TestFunc" oldStackTraceSignature="XLua.CSObjectWrap.TutorialDerivedClassWrap:_m_TestFunc(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialDerivedClassWrap:$_m_TestFunc(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialDerivedClassWrap::_m_DefaultValueFunc(nint)" newName="$_m_DefaultValueFunc" oldStackTraceSignature="XLua.CSObjectWrap.TutorialDerivedClassWrap:_m_DefaultValueFunc(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialDerivedClassWrap:$_m_DefaultValueFunc(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialDerivedClassWrap::_m_VariableParamsFunc(nint)" newName="$_m_VariableParamsFunc" oldStackTraceSignature="XLua.CSObjectWrap.TutorialDerivedClassWrap:_m_VariableParamsFunc(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialDerivedClassWrap:$_m_VariableParamsFunc(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialDerivedClassWrap::_m_EnumTestFunc(nint)" newName="$_m_EnumTestFunc" oldStackTraceSignature="XLua.CSObjectWrap.TutorialDerivedClassWrap:_m_EnumTestFunc(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialDerivedClassWrap:$_m_EnumTestFunc(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialDerivedClassWrap::_m_CallEvent(nint)" newName="$_m_CallEvent" oldStackTraceSignature="XLua.CSObjectWrap.TutorialDerivedClassWrap:_m_CallEvent(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialDerivedClassWrap:$_m_CallEvent(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialDerivedClassWrap::_m_TestLong(nint)" newName="$_m_TestLong" oldStackTraceSignature="XLua.CSObjectWrap.TutorialDerivedClassWrap:_m_TestLong(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialDerivedClassWrap:$_m_TestLong(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialDerivedClassWrap::_m_GetCalc(nint)" newName="$_m_GetCalc" oldStackTraceSignature="XLua.CSObjectWrap.TutorialDerivedClassWrap:_m_GetCalc(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialDerivedClassWrap:$_m_GetCalc(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialDerivedClassWrap::_m_GetSomeData(nint)" newName="$_m_GetSomeData" oldStackTraceSignature="XLua.CSObjectWrap.TutorialDerivedClassWrap:_m_GetSomeData(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialDerivedClassWrap:$_m_GetSomeData(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialDerivedClassWrap::_m_GenericMethodOfString(nint)" newName="$_m_GenericMethodOfString" oldStackTraceSignature="XLua.CSObjectWrap.TutorialDerivedClassWrap:_m_GenericMethodOfString(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialDerivedClassWrap:$_m_GenericMethodOfString(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialDerivedClassWrap::_g_get_DMF(nint)" newName="$_g_get_DMF" oldStackTraceSignature="XLua.CSObjectWrap.TutorialDerivedClassWrap:_g_get_DMF(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialDerivedClassWrap:$_g_get_DMF(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialDerivedClassWrap::_g_get_TestDelegate(nint)" newName="$_g_get_TestDelegate" oldStackTraceSignature="XLua.CSObjectWrap.TutorialDerivedClassWrap:_g_get_TestDelegate(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialDerivedClassWrap:$_g_get_TestDelegate(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialDerivedClassWrap::_s_set_DMF(nint)" newName="$_s_set_DMF" oldStackTraceSignature="XLua.CSObjectWrap.TutorialDerivedClassWrap:_s_set_DMF(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialDerivedClassWrap:$_s_set_DMF(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialDerivedClassWrap::_s_set_TestDelegate(nint)" newName="$_s_set_TestDelegate" oldStackTraceSignature="XLua.CSObjectWrap.TutorialDerivedClassWrap:_s_set_TestDelegate(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialDerivedClassWrap:$_s_set_TestDelegate(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialDerivedClassWrap::_e_TestEvent(nint)" newName="$_e_TestEvent" oldStackTraceSignature="XLua.CSObjectWrap.TutorialDerivedClassWrap:_e_TestEvent(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialDerivedClassWrap:$_e_TestEvent(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.TutorialICalcWrap" newFullName="$XLua.CSObjectWrap.$TutorialICalcWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.TutorialICalcWrap::__Register(nint)" newName="$__Register136" oldStackTraceSignature="XLua.CSObjectWrap.TutorialICalcWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialICalcWrap:$__Register136(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialICalcWrap::__CreateInstance(nint)" newName="$__CreateInstance137" oldStackTraceSignature="XLua.CSObjectWrap.TutorialICalcWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialICalcWrap:$__CreateInstance137(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialICalcWrap::_m_add(nint)" newName="$_m_add" oldStackTraceSignature="XLua.CSObjectWrap.TutorialICalcWrap:_m_add(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialICalcWrap:$_m_add(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.TutorialTestEnumWrap" newFullName="$XLua.CSObjectWrap.$TutorialTestEnumWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.TutorialTestEnumWrap::__Register(nint)" newName="$__Register" oldStackTraceSignature="XLua.CSObjectWrap.TutorialTestEnumWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialTestEnumWrap:$__Register(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.TutorialTestEnumWrap::__CastFrom(nint)" newName="$__CastFrom" oldStackTraceSignature="XLua.CSObjectWrap.TutorialTestEnumWrap:__CastFrom(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$TutorialTestEnumWrap:$__CastFrom(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.UnityEngineAnimationClipWrap" newFullName="$XLua.CSObjectWrap.$UnityEngineAnimationClipWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.UnityEngineAnimationClipWrap::__Register(nint)" newName="$__Register138" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationClipWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationClipWrap:$__Register138(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationClipWrap::__CreateInstance(nint)" newName="$__CreateInstance139" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationClipWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationClipWrap:$__CreateInstance139(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationClipWrap::_m_SampleAnimation(nint)" newName="$_m_SampleAnimation" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationClipWrap:_m_SampleAnimation(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationClipWrap:$_m_SampleAnimation(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationClipWrap::_m_SetCurve(nint)" newName="$_m_SetCurve" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationClipWrap:_m_SetCurve(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationClipWrap:$_m_SetCurve(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationClipWrap::_m_EnsureQuaternionContinuity(nint)" newName="$_m_EnsureQuaternionContinuity" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationClipWrap:_m_EnsureQuaternionContinuity(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationClipWrap:$_m_EnsureQuaternionContinuity(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationClipWrap::_m_ClearCurves(nint)" newName="$_m_ClearCurves" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationClipWrap:_m_ClearCurves(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationClipWrap:$_m_ClearCurves(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationClipWrap::_m_AddEvent(nint)" newName="$_m_AddEvent" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationClipWrap:_m_AddEvent(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationClipWrap:$_m_AddEvent(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationClipWrap::_g_get_length(nint)" newName="$_g_get_length" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationClipWrap:_g_get_length(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationClipWrap:$_g_get_length(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationClipWrap::_g_get_frameRate(nint)" newName="$_g_get_frameRate" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationClipWrap:_g_get_frameRate(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationClipWrap:$_g_get_frameRate(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationClipWrap::_g_get_wrapMode(nint)" newName="$_g_get_wrapMode" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationClipWrap:_g_get_wrapMode(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationClipWrap:$_g_get_wrapMode(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationClipWrap::_g_get_localBounds(nint)" newName="$_g_get_localBounds" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationClipWrap:_g_get_localBounds(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationClipWrap:$_g_get_localBounds(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationClipWrap::_g_get_legacy(nint)" newName="$_g_get_legacy" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationClipWrap:_g_get_legacy(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationClipWrap:$_g_get_legacy(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationClipWrap::_g_get_humanMotion(nint)" newName="$_g_get_humanMotion" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationClipWrap:_g_get_humanMotion(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationClipWrap:$_g_get_humanMotion(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationClipWrap::_g_get_empty(nint)" newName="$_g_get_empty" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationClipWrap:_g_get_empty(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationClipWrap:$_g_get_empty(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationClipWrap::_g_get_hasGenericRootTransform(nint)" newName="$_g_get_hasGenericRootTransform" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationClipWrap:_g_get_hasGenericRootTransform(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationClipWrap:$_g_get_hasGenericRootTransform(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationClipWrap::_g_get_hasMotionFloatCurves(nint)" newName="$_g_get_hasMotionFloatCurves" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationClipWrap:_g_get_hasMotionFloatCurves(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationClipWrap:$_g_get_hasMotionFloatCurves(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationClipWrap::_g_get_hasMotionCurves(nint)" newName="$_g_get_hasMotionCurves" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationClipWrap:_g_get_hasMotionCurves(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationClipWrap:$_g_get_hasMotionCurves(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationClipWrap::_g_get_hasRootCurves(nint)" newName="$_g_get_hasRootCurves" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationClipWrap:_g_get_hasRootCurves(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationClipWrap:$_g_get_hasRootCurves(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationClipWrap::_g_get_events(nint)" newName="$_g_get_events" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationClipWrap:_g_get_events(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationClipWrap:$_g_get_events(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationClipWrap::_s_set_frameRate(nint)" newName="$_s_set_frameRate" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationClipWrap:_s_set_frameRate(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationClipWrap:$_s_set_frameRate(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationClipWrap::_s_set_wrapMode(nint)" newName="$_s_set_wrapMode" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationClipWrap:_s_set_wrapMode(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationClipWrap:$_s_set_wrapMode(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationClipWrap::_s_set_localBounds(nint)" newName="$_s_set_localBounds" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationClipWrap:_s_set_localBounds(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationClipWrap:$_s_set_localBounds(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationClipWrap::_s_set_legacy(nint)" newName="$_s_set_legacy" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationClipWrap:_s_set_legacy(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationClipWrap:$_s_set_legacy(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationClipWrap::_s_set_events(nint)" newName="$_s_set_events" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationClipWrap:_s_set_events(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationClipWrap:$_s_set_events(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.UnityEngineAnimationCurveWrap" newFullName="$XLua.CSObjectWrap.$UnityEngineAnimationCurveWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.UnityEngineAnimationCurveWrap::__Register(nint)" newName="$__Register140" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationCurveWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationCurveWrap:$__Register140(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationCurveWrap::__CreateInstance(nint)" newName="$__CreateInstance141" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationCurveWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationCurveWrap:$__CreateInstance141(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationCurveWrap::__CSIndexer(nint)" newName="$__CSIndexer142" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationCurveWrap:__CSIndexer(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationCurveWrap:$__CSIndexer142(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationCurveWrap::_m_Evaluate(nint)" newName="$_m_Evaluate" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationCurveWrap:_m_Evaluate(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationCurveWrap:$_m_Evaluate(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationCurveWrap::_m_AddKey(nint)" newName="$_m_AddKey" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationCurveWrap:_m_AddKey(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationCurveWrap:$_m_AddKey(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationCurveWrap::_m_MoveKey(nint)" newName="$_m_MoveKey" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationCurveWrap:_m_MoveKey(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationCurveWrap:$_m_MoveKey(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationCurveWrap::_m_ClearKeys(nint)" newName="$_m_ClearKeys" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationCurveWrap:_m_ClearKeys(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationCurveWrap:$_m_ClearKeys(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationCurveWrap::_m_RemoveKey(nint)" newName="$_m_RemoveKey" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationCurveWrap:_m_RemoveKey(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationCurveWrap:$_m_RemoveKey(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationCurveWrap::_m_GetHashCode(nint)" newName="$_m_GetHashCode143" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationCurveWrap:_m_GetHashCode(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationCurveWrap:$_m_GetHashCode143(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationCurveWrap::_m_SmoothTangents(nint)" newName="$_m_SmoothTangents" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationCurveWrap:_m_SmoothTangents(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationCurveWrap:$_m_SmoothTangents(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationCurveWrap::_m_Constant_xlua_st_(nint)" newName="$_m_Constant_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationCurveWrap:_m_Constant_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationCurveWrap:$_m_Constant_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationCurveWrap::_m_Linear_xlua_st_(nint)" newName="$_m_Linear_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationCurveWrap:_m_Linear_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationCurveWrap:$_m_Linear_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationCurveWrap::_m_EaseInOut_xlua_st_(nint)" newName="$_m_EaseInOut_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationCurveWrap:_m_EaseInOut_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationCurveWrap:$_m_EaseInOut_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationCurveWrap::_m_Equals(nint)" newName="$_m_Equals144" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationCurveWrap:_m_Equals(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationCurveWrap:$_m_Equals144(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationCurveWrap::_m_CopyFrom(nint)" newName="$_m_CopyFrom" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationCurveWrap:_m_CopyFrom(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationCurveWrap:$_m_CopyFrom(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationCurveWrap::_g_get_keys(nint)" newName="$_g_get_keys" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationCurveWrap:_g_get_keys(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationCurveWrap:$_g_get_keys(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationCurveWrap::_g_get_length(nint)" newName="$_g_get_length145" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationCurveWrap:_g_get_length(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationCurveWrap:$_g_get_length145(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationCurveWrap::_g_get_preWrapMode(nint)" newName="$_g_get_preWrapMode" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationCurveWrap:_g_get_preWrapMode(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationCurveWrap:$_g_get_preWrapMode(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationCurveWrap::_g_get_postWrapMode(nint)" newName="$_g_get_postWrapMode" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationCurveWrap:_g_get_postWrapMode(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationCurveWrap:$_g_get_postWrapMode(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationCurveWrap::_s_set_keys(nint)" newName="$_s_set_keys" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationCurveWrap:_s_set_keys(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationCurveWrap:$_s_set_keys(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationCurveWrap::_s_set_preWrapMode(nint)" newName="$_s_set_preWrapMode" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationCurveWrap:_s_set_preWrapMode(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationCurveWrap:$_s_set_preWrapMode(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineAnimationCurveWrap::_s_set_postWrapMode(nint)" newName="$_s_set_postWrapMode" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineAnimationCurveWrap:_s_set_postWrapMode(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineAnimationCurveWrap:$_s_set_postWrapMode(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.UnityEngineBehaviourWrap" newFullName="$XLua.CSObjectWrap.$UnityEngineBehaviourWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.UnityEngineBehaviourWrap::__Register(nint)" newName="$__Register146" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineBehaviourWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineBehaviourWrap:$__Register146(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineBehaviourWrap::__CreateInstance(nint)" newName="$__CreateInstance147" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineBehaviourWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineBehaviourWrap:$__CreateInstance147(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineBehaviourWrap::_g_get_enabled(nint)" newName="$_g_get_enabled" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineBehaviourWrap:_g_get_enabled(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineBehaviourWrap:$_g_get_enabled(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineBehaviourWrap::_g_get_isActiveAndEnabled(nint)" newName="$_g_get_isActiveAndEnabled" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineBehaviourWrap:_g_get_isActiveAndEnabled(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineBehaviourWrap:$_g_get_isActiveAndEnabled(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineBehaviourWrap::_s_set_enabled(nint)" newName="$_s_set_enabled" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineBehaviourWrap:_s_set_enabled(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineBehaviourWrap:$_s_set_enabled(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.UnityEngineBoundsWrap" newFullName="$XLua.CSObjectWrap.$UnityEngineBoundsWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.UnityEngineBoundsWrap::__Register(nint)" newName="$__Register148" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineBoundsWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineBoundsWrap:$__Register148(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineBoundsWrap::__CreateInstance(nint)" newName="$__CreateInstance149" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineBoundsWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineBoundsWrap:$__CreateInstance149(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineBoundsWrap::__EqMeta(nint)" newName="$__EqMeta" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineBoundsWrap:__EqMeta(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineBoundsWrap:$__EqMeta(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineBoundsWrap::_m_GetHashCode(nint)" newName="$_m_GetHashCode150" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineBoundsWrap:_m_GetHashCode(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineBoundsWrap:$_m_GetHashCode150(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineBoundsWrap::_m_Equals(nint)" newName="$_m_Equals151" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineBoundsWrap:_m_Equals(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineBoundsWrap:$_m_Equals151(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineBoundsWrap::_m_SetMinMax(nint)" newName="$_m_SetMinMax" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineBoundsWrap:_m_SetMinMax(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineBoundsWrap:$_m_SetMinMax(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineBoundsWrap::_m_Encapsulate(nint)" newName="$_m_Encapsulate" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineBoundsWrap:_m_Encapsulate(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineBoundsWrap:$_m_Encapsulate(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineBoundsWrap::_m_Expand(nint)" newName="$_m_Expand" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineBoundsWrap:_m_Expand(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineBoundsWrap:$_m_Expand(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineBoundsWrap::_m_Intersects(nint)" newName="$_m_Intersects" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineBoundsWrap:_m_Intersects(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineBoundsWrap:$_m_Intersects(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineBoundsWrap::_m_IntersectRay(nint)" newName="$_m_IntersectRay" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineBoundsWrap:_m_IntersectRay(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineBoundsWrap:$_m_IntersectRay(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineBoundsWrap::_m_ToString(nint)" newName="$_m_ToString152" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineBoundsWrap:_m_ToString(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineBoundsWrap:$_m_ToString152(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineBoundsWrap::_m_Contains(nint)" newName="$_m_Contains153" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineBoundsWrap:_m_Contains(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineBoundsWrap:$_m_Contains153(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineBoundsWrap::_m_SqrDistance(nint)" newName="$_m_SqrDistance" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineBoundsWrap:_m_SqrDistance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineBoundsWrap:$_m_SqrDistance(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineBoundsWrap::_m_ClosestPoint(nint)" newName="$_m_ClosestPoint" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineBoundsWrap:_m_ClosestPoint(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineBoundsWrap:$_m_ClosestPoint(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineBoundsWrap::_g_get_center(nint)" newName="$_g_get_center" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineBoundsWrap:_g_get_center(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineBoundsWrap:$_g_get_center(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineBoundsWrap::_g_get_size(nint)" newName="$_g_get_size" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineBoundsWrap:_g_get_size(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineBoundsWrap:$_g_get_size(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineBoundsWrap::_g_get_extents(nint)" newName="$_g_get_extents" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineBoundsWrap:_g_get_extents(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineBoundsWrap:$_g_get_extents(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineBoundsWrap::_g_get_min(nint)" newName="$_g_get_min" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineBoundsWrap:_g_get_min(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineBoundsWrap:$_g_get_min(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineBoundsWrap::_g_get_max(nint)" newName="$_g_get_max" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineBoundsWrap:_g_get_max(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineBoundsWrap:$_g_get_max(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineBoundsWrap::_s_set_center(nint)" newName="$_s_set_center" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineBoundsWrap:_s_set_center(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineBoundsWrap:$_s_set_center(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineBoundsWrap::_s_set_size(nint)" newName="$_s_set_size" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineBoundsWrap:_s_set_size(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineBoundsWrap:$_s_set_size(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineBoundsWrap::_s_set_extents(nint)" newName="$_s_set_extents" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineBoundsWrap:_s_set_extents(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineBoundsWrap:$_s_set_extents(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineBoundsWrap::_s_set_min(nint)" newName="$_s_set_min" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineBoundsWrap:_s_set_min(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineBoundsWrap:$_s_set_min(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineBoundsWrap::_s_set_max(nint)" newName="$_s_set_max" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineBoundsWrap:_s_set_max(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineBoundsWrap:$_s_set_max(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.UnityEngineColorWrap" newFullName="$XLua.CSObjectWrap.$UnityEngineColorWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.UnityEngineColorWrap::__Register(nint)" newName="$__Register154" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$__Register154(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::__CreateInstance(nint)" newName="$__CreateInstance155" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$__CreateInstance155(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::__CSIndexer(nint)" newName="$__CSIndexer156" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:__CSIndexer(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$__CSIndexer156(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::__NewIndexer(nint)" newName="$__NewIndexer157" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:__NewIndexer(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$__NewIndexer157(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::__AddMeta(nint)" newName="$__AddMeta158" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:__AddMeta(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$__AddMeta158(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::__SubMeta(nint)" newName="$__SubMeta" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:__SubMeta(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$__SubMeta(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::__MulMeta(nint)" newName="$__MulMeta" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:__MulMeta(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$__MulMeta(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::__DivMeta(nint)" newName="$__DivMeta" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:__DivMeta(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$__DivMeta(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::__EqMeta(nint)" newName="$__EqMeta159" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:__EqMeta(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$__EqMeta159(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::_m_ToString(nint)" newName="$_m_ToString160" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:_m_ToString(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$_m_ToString160(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::_m_GetHashCode(nint)" newName="$_m_GetHashCode161" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:_m_GetHashCode(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$_m_GetHashCode161(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::_m_Equals(nint)" newName="$_m_Equals162" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:_m_Equals(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$_m_Equals162(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::_m_Lerp_xlua_st_(nint)" newName="$_m_Lerp_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:_m_Lerp_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$_m_Lerp_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::_m_LerpUnclamped_xlua_st_(nint)" newName="$_m_LerpUnclamped_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:_m_LerpUnclamped_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$_m_LerpUnclamped_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::_m_RGBToHSV_xlua_st_(nint)" newName="$_m_RGBToHSV_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:_m_RGBToHSV_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$_m_RGBToHSV_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::_m_HSVToRGB_xlua_st_(nint)" newName="$_m_HSVToRGB_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:_m_HSVToRGB_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$_m_HSVToRGB_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::_g_get_red(nint)" newName="$_g_get_red" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:_g_get_red(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$_g_get_red(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::_g_get_green(nint)" newName="$_g_get_green" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:_g_get_green(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$_g_get_green(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::_g_get_blue(nint)" newName="$_g_get_blue" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:_g_get_blue(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$_g_get_blue(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::_g_get_white(nint)" newName="$_g_get_white" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:_g_get_white(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$_g_get_white(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::_g_get_black(nint)" newName="$_g_get_black" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:_g_get_black(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$_g_get_black(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::_g_get_yellow(nint)" newName="$_g_get_yellow" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:_g_get_yellow(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$_g_get_yellow(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::_g_get_cyan(nint)" newName="$_g_get_cyan" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:_g_get_cyan(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$_g_get_cyan(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::_g_get_magenta(nint)" newName="$_g_get_magenta" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:_g_get_magenta(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$_g_get_magenta(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::_g_get_gray(nint)" newName="$_g_get_gray" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:_g_get_gray(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$_g_get_gray(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::_g_get_grey(nint)" newName="$_g_get_grey" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:_g_get_grey(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$_g_get_grey(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::_g_get_clear(nint)" newName="$_g_get_clear" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:_g_get_clear(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$_g_get_clear(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::_g_get_grayscale(nint)" newName="$_g_get_grayscale" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:_g_get_grayscale(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$_g_get_grayscale(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::_g_get_linear(nint)" newName="$_g_get_linear" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:_g_get_linear(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$_g_get_linear(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::_g_get_gamma(nint)" newName="$_g_get_gamma" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:_g_get_gamma(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$_g_get_gamma(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::_g_get_maxColorComponent(nint)" newName="$_g_get_maxColorComponent" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:_g_get_maxColorComponent(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$_g_get_maxColorComponent(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::_g_get_r(nint)" newName="$_g_get_r" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:_g_get_r(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$_g_get_r(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::_g_get_g(nint)" newName="$_g_get_g" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:_g_get_g(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$_g_get_g(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::_g_get_b(nint)" newName="$_g_get_b" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:_g_get_b(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$_g_get_b(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::_g_get_a(nint)" newName="$_g_get_a" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:_g_get_a(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$_g_get_a(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::_s_set_r(nint)" newName="$_s_set_r" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:_s_set_r(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$_s_set_r(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::_s_set_g(nint)" newName="$_s_set_g" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:_s_set_g(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$_s_set_g(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::_s_set_b(nint)" newName="$_s_set_b" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:_s_set_b(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$_s_set_b(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineColorWrap::_s_set_a(nint)" newName="$_s_set_a" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineColorWrap:_s_set_a(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineColorWrap:$_s_set_a(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.UnityEngineComponentWrap" newFullName="$XLua.CSObjectWrap.$UnityEngineComponentWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.UnityEngineComponentWrap::__Register(nint)" newName="$__Register163" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineComponentWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineComponentWrap:$__Register163(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineComponentWrap::__CreateInstance(nint)" newName="$__CreateInstance164" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineComponentWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineComponentWrap:$__CreateInstance164(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineComponentWrap::_m_GetComponent(nint)" newName="$_m_GetComponent" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineComponentWrap:_m_GetComponent(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineComponentWrap:$_m_GetComponent(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineComponentWrap::_m_TryGetComponent(nint)" newName="$_m_TryGetComponent" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineComponentWrap:_m_TryGetComponent(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineComponentWrap:$_m_TryGetComponent(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineComponentWrap::_m_GetComponentInChildren(nint)" newName="$_m_GetComponentInChildren" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineComponentWrap:_m_GetComponentInChildren(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineComponentWrap:$_m_GetComponentInChildren(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineComponentWrap::_m_GetComponentsInChildren(nint)" newName="$_m_GetComponentsInChildren" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineComponentWrap:_m_GetComponentsInChildren(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineComponentWrap:$_m_GetComponentsInChildren(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineComponentWrap::_m_GetComponentInParent(nint)" newName="$_m_GetComponentInParent" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineComponentWrap:_m_GetComponentInParent(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineComponentWrap:$_m_GetComponentInParent(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineComponentWrap::_m_GetComponentsInParent(nint)" newName="$_m_GetComponentsInParent" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineComponentWrap:_m_GetComponentsInParent(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineComponentWrap:$_m_GetComponentsInParent(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineComponentWrap::_m_GetComponents(nint)" newName="$_m_GetComponents" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineComponentWrap:_m_GetComponents(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineComponentWrap:$_m_GetComponents(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineComponentWrap::_m_GetComponentIndex(nint)" newName="$_m_GetComponentIndex" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineComponentWrap:_m_GetComponentIndex(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineComponentWrap:$_m_GetComponentIndex(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineComponentWrap::_m_CompareTag(nint)" newName="$_m_CompareTag" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineComponentWrap:_m_CompareTag(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineComponentWrap:$_m_CompareTag(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineComponentWrap::_m_SendMessageUpwards(nint)" newName="$_m_SendMessageUpwards" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineComponentWrap:_m_SendMessageUpwards(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineComponentWrap:$_m_SendMessageUpwards(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineComponentWrap::_m_SendMessage(nint)" newName="$_m_SendMessage" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineComponentWrap:_m_SendMessage(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineComponentWrap:$_m_SendMessage(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineComponentWrap::_m_BroadcastMessage(nint)" newName="$_m_BroadcastMessage" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineComponentWrap:_m_BroadcastMessage(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineComponentWrap:$_m_BroadcastMessage(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineComponentWrap::_g_get_transform(nint)" newName="$_g_get_transform" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineComponentWrap:_g_get_transform(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineComponentWrap:$_g_get_transform(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineComponentWrap::_g_get_gameObject(nint)" newName="$_g_get_gameObject" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineComponentWrap:_g_get_gameObject(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineComponentWrap:$_g_get_gameObject(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineComponentWrap::_g_get_tag(nint)" newName="$_g_get_tag" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineComponentWrap:_g_get_tag(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineComponentWrap:$_g_get_tag(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineComponentWrap::_s_set_tag(nint)" newName="$_s_set_tag" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineComponentWrap:_s_set_tag(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineComponentWrap:$_s_set_tag(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.UnityEngineDebugWrap" newFullName="$XLua.CSObjectWrap.$UnityEngineDebugWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.UnityEngineDebugWrap::__Register(nint)" newName="$__Register165" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineDebugWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineDebugWrap:$__Register165(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineDebugWrap::__CreateInstance(nint)" newName="$__CreateInstance166" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineDebugWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineDebugWrap:$__CreateInstance166(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineDebugWrap::_m_DrawLine_xlua_st_(nint)" newName="$_m_DrawLine_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineDebugWrap:_m_DrawLine_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineDebugWrap:$_m_DrawLine_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineDebugWrap::_m_DrawRay_xlua_st_(nint)" newName="$_m_DrawRay_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineDebugWrap:_m_DrawRay_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineDebugWrap:$_m_DrawRay_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineDebugWrap::_m_Break_xlua_st_(nint)" newName="$_m_Break_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineDebugWrap:_m_Break_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineDebugWrap:$_m_Break_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineDebugWrap::_m_DebugBreak_xlua_st_(nint)" newName="$_m_DebugBreak_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineDebugWrap:_m_DebugBreak_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineDebugWrap:$_m_DebugBreak_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineDebugWrap::_m_Log_xlua_st_(nint)" newName="$_m_Log_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineDebugWrap:_m_Log_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineDebugWrap:$_m_Log_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineDebugWrap::_m_LogFormat_xlua_st_(nint)" newName="$_m_LogFormat_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineDebugWrap:_m_LogFormat_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineDebugWrap:$_m_LogFormat_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineDebugWrap::_m_LogError_xlua_st_(nint)" newName="$_m_LogError_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineDebugWrap:_m_LogError_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineDebugWrap:$_m_LogError_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineDebugWrap::_m_LogErrorFormat_xlua_st_(nint)" newName="$_m_LogErrorFormat_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineDebugWrap:_m_LogErrorFormat_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineDebugWrap:$_m_LogErrorFormat_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineDebugWrap::_m_ClearDeveloperConsole_xlua_st_(nint)" newName="$_m_ClearDeveloperConsole_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineDebugWrap:_m_ClearDeveloperConsole_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineDebugWrap:$_m_ClearDeveloperConsole_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineDebugWrap::_m_LogException_xlua_st_(nint)" newName="$_m_LogException_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineDebugWrap:_m_LogException_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineDebugWrap:$_m_LogException_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineDebugWrap::_m_LogWarning_xlua_st_(nint)" newName="$_m_LogWarning_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineDebugWrap:_m_LogWarning_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineDebugWrap:$_m_LogWarning_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineDebugWrap::_m_LogWarningFormat_xlua_st_(nint)" newName="$_m_LogWarningFormat_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineDebugWrap:_m_LogWarningFormat_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineDebugWrap:$_m_LogWarningFormat_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineDebugWrap::_m_Assert_xlua_st_(nint)" newName="$_m_Assert_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineDebugWrap:_m_Assert_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineDebugWrap:$_m_Assert_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineDebugWrap::_m_AssertFormat_xlua_st_(nint)" newName="$_m_AssertFormat_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineDebugWrap:_m_AssertFormat_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineDebugWrap:$_m_AssertFormat_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineDebugWrap::_m_LogAssertion_xlua_st_(nint)" newName="$_m_LogAssertion_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineDebugWrap:_m_LogAssertion_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineDebugWrap:$_m_LogAssertion_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineDebugWrap::_m_LogAssertionFormat_xlua_st_(nint)" newName="$_m_LogAssertionFormat_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineDebugWrap:_m_LogAssertionFormat_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineDebugWrap:$_m_LogAssertionFormat_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineDebugWrap::_g_get_unityLogger(nint)" newName="$_g_get_unityLogger" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineDebugWrap:_g_get_unityLogger(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineDebugWrap:$_g_get_unityLogger(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineDebugWrap::_g_get_developerConsoleEnabled(nint)" newName="$_g_get_developerConsoleEnabled" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineDebugWrap:_g_get_developerConsoleEnabled(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineDebugWrap:$_g_get_developerConsoleEnabled(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineDebugWrap::_g_get_developerConsoleVisible(nint)" newName="$_g_get_developerConsoleVisible" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineDebugWrap:_g_get_developerConsoleVisible(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineDebugWrap:$_g_get_developerConsoleVisible(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineDebugWrap::_g_get_isDebugBuild(nint)" newName="$_g_get_isDebugBuild" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineDebugWrap:_g_get_isDebugBuild(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineDebugWrap:$_g_get_isDebugBuild(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineDebugWrap::_s_set_developerConsoleEnabled(nint)" newName="$_s_set_developerConsoleEnabled" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineDebugWrap:_s_set_developerConsoleEnabled(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineDebugWrap:$_s_set_developerConsoleEnabled(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineDebugWrap::_s_set_developerConsoleVisible(nint)" newName="$_s_set_developerConsoleVisible" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineDebugWrap:_s_set_developerConsoleVisible(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineDebugWrap:$_s_set_developerConsoleVisible(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.UnityEngineGameObjectWrap" newFullName="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.UnityEngineGameObjectWrap::__Register(nint)" newName="$__Register167" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$__Register167(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::__CreateInstance(nint)" newName="$__CreateInstance168" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$__CreateInstance168(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_m_CreatePrimitive_xlua_st_(nint)" newName="$_m_CreatePrimitive_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_m_CreatePrimitive_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_m_CreatePrimitive_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_m_GetComponent(nint)" newName="$_m_GetComponent169" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_m_GetComponent(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_m_GetComponent169(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_m_GetComponentInChildren(nint)" newName="$_m_GetComponentInChildren170" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_m_GetComponentInChildren(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_m_GetComponentInChildren170(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_m_GetComponentInParent(nint)" newName="$_m_GetComponentInParent171" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_m_GetComponentInParent(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_m_GetComponentInParent171(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_m_GetComponents(nint)" newName="$_m_GetComponents172" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_m_GetComponents(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_m_GetComponents172(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_m_GetComponentsInChildren(nint)" newName="$_m_GetComponentsInChildren173" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_m_GetComponentsInChildren(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_m_GetComponentsInChildren173(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_m_GetComponentsInParent(nint)" newName="$_m_GetComponentsInParent174" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_m_GetComponentsInParent(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_m_GetComponentsInParent174(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_m_TryGetComponent(nint)" newName="$_m_TryGetComponent175" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_m_TryGetComponent(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_m_TryGetComponent175(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_m_FindWithTag_xlua_st_(nint)" newName="$_m_FindWithTag_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_m_FindWithTag_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_m_FindWithTag_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_m_SendMessageUpwards(nint)" newName="$_m_SendMessageUpwards176" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_m_SendMessageUpwards(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_m_SendMessageUpwards176(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_m_SendMessage(nint)" newName="$_m_SendMessage177" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_m_SendMessage(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_m_SendMessage177(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_m_BroadcastMessage(nint)" newName="$_m_BroadcastMessage178" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_m_BroadcastMessage(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_m_BroadcastMessage178(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_m_AddComponent(nint)" newName="$_m_AddComponent" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_m_AddComponent(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_m_AddComponent(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_m_GetComponentCount(nint)" newName="$_m_GetComponentCount" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_m_GetComponentCount(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_m_GetComponentCount(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_m_GetComponentAtIndex(nint)" newName="$_m_GetComponentAtIndex" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_m_GetComponentAtIndex(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_m_GetComponentAtIndex(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_m_GetComponentIndex(nint)" newName="$_m_GetComponentIndex179" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_m_GetComponentIndex(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_m_GetComponentIndex179(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_m_SetActive(nint)" newName="$_m_SetActive" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_m_SetActive(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_m_SetActive(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_m_CompareTag(nint)" newName="$_m_CompareTag180" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_m_CompareTag(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_m_CompareTag180(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_m_FindGameObjectWithTag_xlua_st_(nint)" newName="$_m_FindGameObjectWithTag_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_m_FindGameObjectWithTag_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_m_FindGameObjectWithTag_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_m_FindGameObjectsWithTag_xlua_st_(nint)" newName="$_m_FindGameObjectsWithTag_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_m_FindGameObjectsWithTag_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_m_FindGameObjectsWithTag_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_m_Find_xlua_st_(nint)" newName="$_m_Find_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_m_Find_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_m_Find_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_m_SetGameObjectsActive_xlua_st_(nint)" newName="$_m_SetGameObjectsActive_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_m_SetGameObjectsActive_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_m_SetGameObjectsActive_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_m_InstantiateGameObjects_xlua_st_(nint)" newName="$_m_InstantiateGameObjects_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_m_InstantiateGameObjects_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_m_InstantiateGameObjects_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_m_GetScene_xlua_st_(nint)" newName="$_m_GetScene_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_m_GetScene_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_m_GetScene_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_g_get_transform(nint)" newName="$_g_get_transform181" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_g_get_transform(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_g_get_transform181(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_g_get_layer(nint)" newName="$_g_get_layer" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_g_get_layer(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_g_get_layer(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_g_get_activeSelf(nint)" newName="$_g_get_activeSelf" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_g_get_activeSelf(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_g_get_activeSelf(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_g_get_activeInHierarchy(nint)" newName="$_g_get_activeInHierarchy" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_g_get_activeInHierarchy(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_g_get_activeInHierarchy(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_g_get_isStatic(nint)" newName="$_g_get_isStatic" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_g_get_isStatic(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_g_get_isStatic(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_g_get_tag(nint)" newName="$_g_get_tag182" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_g_get_tag(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_g_get_tag182(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_g_get_scene(nint)" newName="$_g_get_scene" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_g_get_scene(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_g_get_scene(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_g_get_sceneCullingMask(nint)" newName="$_g_get_sceneCullingMask" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_g_get_sceneCullingMask(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_g_get_sceneCullingMask(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_g_get_gameObject(nint)" newName="$_g_get_gameObject183" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_g_get_gameObject(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_g_get_gameObject183(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_s_set_layer(nint)" newName="$_s_set_layer" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_s_set_layer(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_s_set_layer(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_s_set_isStatic(nint)" newName="$_s_set_isStatic" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_s_set_isStatic(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_s_set_isStatic(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineGameObjectWrap::_s_set_tag(nint)" newName="$_s_set_tag184" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineGameObjectWrap:_s_set_tag(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineGameObjectWrap:$_s_set_tag184(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.UnityEngineKeyframeWrap" newFullName="$XLua.CSObjectWrap.$UnityEngineKeyframeWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.UnityEngineKeyframeWrap::__Register(nint)" newName="$__Register185" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineKeyframeWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineKeyframeWrap:$__Register185(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineKeyframeWrap::__CreateInstance(nint)" newName="$__CreateInstance186" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineKeyframeWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineKeyframeWrap:$__CreateInstance186(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineKeyframeWrap::_g_get_time(nint)" newName="$_g_get_time" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineKeyframeWrap:_g_get_time(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineKeyframeWrap:$_g_get_time(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineKeyframeWrap::_g_get_value(nint)" newName="$_g_get_value" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineKeyframeWrap:_g_get_value(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineKeyframeWrap:$_g_get_value(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineKeyframeWrap::_g_get_inTangent(nint)" newName="$_g_get_inTangent" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineKeyframeWrap:_g_get_inTangent(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineKeyframeWrap:$_g_get_inTangent(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineKeyframeWrap::_g_get_outTangent(nint)" newName="$_g_get_outTangent" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineKeyframeWrap:_g_get_outTangent(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineKeyframeWrap:$_g_get_outTangent(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineKeyframeWrap::_g_get_inWeight(nint)" newName="$_g_get_inWeight" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineKeyframeWrap:_g_get_inWeight(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineKeyframeWrap:$_g_get_inWeight(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineKeyframeWrap::_g_get_outWeight(nint)" newName="$_g_get_outWeight" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineKeyframeWrap:_g_get_outWeight(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineKeyframeWrap:$_g_get_outWeight(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineKeyframeWrap::_g_get_weightedMode(nint)" newName="$_g_get_weightedMode" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineKeyframeWrap:_g_get_weightedMode(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineKeyframeWrap:$_g_get_weightedMode(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineKeyframeWrap::_s_set_time(nint)" newName="$_s_set_time" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineKeyframeWrap:_s_set_time(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineKeyframeWrap:$_s_set_time(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineKeyframeWrap::_s_set_value(nint)" newName="$_s_set_value" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineKeyframeWrap:_s_set_value(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineKeyframeWrap:$_s_set_value(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineKeyframeWrap::_s_set_inTangent(nint)" newName="$_s_set_inTangent" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineKeyframeWrap:_s_set_inTangent(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineKeyframeWrap:$_s_set_inTangent(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineKeyframeWrap::_s_set_outTangent(nint)" newName="$_s_set_outTangent" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineKeyframeWrap:_s_set_outTangent(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineKeyframeWrap:$_s_set_outTangent(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineKeyframeWrap::_s_set_inWeight(nint)" newName="$_s_set_inWeight" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineKeyframeWrap:_s_set_inWeight(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineKeyframeWrap:$_s_set_inWeight(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineKeyframeWrap::_s_set_outWeight(nint)" newName="$_s_set_outWeight" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineKeyframeWrap:_s_set_outWeight(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineKeyframeWrap:$_s_set_outWeight(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineKeyframeWrap::_s_set_weightedMode(nint)" newName="$_s_set_weightedMode" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineKeyframeWrap:_s_set_weightedMode(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineKeyframeWrap:$_s_set_weightedMode(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.UnityEngineMathfWrap" newFullName="$XLua.CSObjectWrap.$UnityEngineMathfWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.UnityEngineMathfWrap::__Register(nint)" newName="$__Register187" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$__Register187(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::__CreateInstance(nint)" newName="$__CreateInstance188" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$__CreateInstance188(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_ClosestPowerOfTwo_xlua_st_(nint)" newName="$_m_ClosestPowerOfTwo_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_ClosestPowerOfTwo_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_ClosestPowerOfTwo_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_IsPowerOfTwo_xlua_st_(nint)" newName="$_m_IsPowerOfTwo_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_IsPowerOfTwo_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_IsPowerOfTwo_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_NextPowerOfTwo_xlua_st_(nint)" newName="$_m_NextPowerOfTwo_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_NextPowerOfTwo_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_NextPowerOfTwo_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_GammaToLinearSpace_xlua_st_(nint)" newName="$_m_GammaToLinearSpace_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_GammaToLinearSpace_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_GammaToLinearSpace_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_LinearToGammaSpace_xlua_st_(nint)" newName="$_m_LinearToGammaSpace_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_LinearToGammaSpace_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_LinearToGammaSpace_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_CorrelatedColorTemperatureToRGB_xlua_st_(nint)" newName="$_m_CorrelatedColorTemperatureToRGB_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_CorrelatedColorTemperatureToRGB_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_CorrelatedColorTemperatureToRGB_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_FloatToHalf_xlua_st_(nint)" newName="$_m_FloatToHalf_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_FloatToHalf_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_FloatToHalf_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_HalfToFloat_xlua_st_(nint)" newName="$_m_HalfToFloat_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_HalfToFloat_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_HalfToFloat_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_PerlinNoise_xlua_st_(nint)" newName="$_m_PerlinNoise_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_PerlinNoise_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_PerlinNoise_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_PerlinNoise1D_xlua_st_(nint)" newName="$_m_PerlinNoise1D_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_PerlinNoise1D_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_PerlinNoise1D_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_Sin_xlua_st_(nint)" newName="$_m_Sin_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_Sin_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_Sin_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_Cos_xlua_st_(nint)" newName="$_m_Cos_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_Cos_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_Cos_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_Tan_xlua_st_(nint)" newName="$_m_Tan_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_Tan_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_Tan_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_Asin_xlua_st_(nint)" newName="$_m_Asin_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_Asin_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_Asin_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_Acos_xlua_st_(nint)" newName="$_m_Acos_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_Acos_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_Acos_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_Atan_xlua_st_(nint)" newName="$_m_Atan_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_Atan_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_Atan_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_Atan2_xlua_st_(nint)" newName="$_m_Atan2_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_Atan2_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_Atan2_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_Sqrt_xlua_st_(nint)" newName="$_m_Sqrt_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_Sqrt_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_Sqrt_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_Abs_xlua_st_(nint)" newName="$_m_Abs_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_Abs_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_Abs_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_Min_xlua_st_(nint)" newName="$_m_Min_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_Min_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_Min_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_Max_xlua_st_(nint)" newName="$_m_Max_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_Max_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_Max_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_Pow_xlua_st_(nint)" newName="$_m_Pow_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_Pow_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_Pow_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_Exp_xlua_st_(nint)" newName="$_m_Exp_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_Exp_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_Exp_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_Log_xlua_st_(nint)" newName="$_m_Log_xlua_st_189" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_Log_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_Log_xlua_st_189(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_Log10_xlua_st_(nint)" newName="$_m_Log10_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_Log10_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_Log10_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_Ceil_xlua_st_(nint)" newName="$_m_Ceil_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_Ceil_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_Ceil_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_Floor_xlua_st_(nint)" newName="$_m_Floor_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_Floor_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_Floor_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_Round_xlua_st_(nint)" newName="$_m_Round_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_Round_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_Round_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_CeilToInt_xlua_st_(nint)" newName="$_m_CeilToInt_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_CeilToInt_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_CeilToInt_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_FloorToInt_xlua_st_(nint)" newName="$_m_FloorToInt_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_FloorToInt_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_FloorToInt_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_RoundToInt_xlua_st_(nint)" newName="$_m_RoundToInt_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_RoundToInt_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_RoundToInt_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_Sign_xlua_st_(nint)" newName="$_m_Sign_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_Sign_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_Sign_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_Clamp_xlua_st_(nint)" newName="$_m_Clamp_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_Clamp_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_Clamp_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_Clamp01_xlua_st_(nint)" newName="$_m_Clamp01_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_Clamp01_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_Clamp01_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_Lerp_xlua_st_(nint)" newName="$_m_Lerp_xlua_st_190" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_Lerp_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_Lerp_xlua_st_190(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_LerpUnclamped_xlua_st_(nint)" newName="$_m_LerpUnclamped_xlua_st_191" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_LerpUnclamped_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_LerpUnclamped_xlua_st_191(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_LerpAngle_xlua_st_(nint)" newName="$_m_LerpAngle_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_LerpAngle_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_LerpAngle_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_MoveTowards_xlua_st_(nint)" newName="$_m_MoveTowards_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_MoveTowards_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_MoveTowards_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_MoveTowardsAngle_xlua_st_(nint)" newName="$_m_MoveTowardsAngle_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_MoveTowardsAngle_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_MoveTowardsAngle_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_SmoothStep_xlua_st_(nint)" newName="$_m_SmoothStep_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_SmoothStep_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_SmoothStep_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_Gamma_xlua_st_(nint)" newName="$_m_Gamma_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_Gamma_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_Gamma_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_Approximately_xlua_st_(nint)" newName="$_m_Approximately_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_Approximately_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_Approximately_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_SmoothDamp_xlua_st_(nint)" newName="$_m_SmoothDamp_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_SmoothDamp_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_SmoothDamp_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_SmoothDampAngle_xlua_st_(nint)" newName="$_m_SmoothDampAngle_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_SmoothDampAngle_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_SmoothDampAngle_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_Repeat_xlua_st_(nint)" newName="$_m_Repeat_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_Repeat_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_Repeat_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_PingPong_xlua_st_(nint)" newName="$_m_PingPong_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_PingPong_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_PingPong_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_InverseLerp_xlua_st_(nint)" newName="$_m_InverseLerp_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_InverseLerp_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_InverseLerp_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMathfWrap::_m_DeltaAngle_xlua_st_(nint)" newName="$_m_DeltaAngle_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMathfWrap:_m_DeltaAngle_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMathfWrap:$_m_DeltaAngle_xlua_st_(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.UnityEngineMonoBehaviourWrap" newFullName="$XLua.CSObjectWrap.$UnityEngineMonoBehaviourWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.UnityEngineMonoBehaviourWrap::__Register(nint)" newName="$__Register192" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMonoBehaviourWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMonoBehaviourWrap:$__Register192(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMonoBehaviourWrap::__CreateInstance(nint)" newName="$__CreateInstance193" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMonoBehaviourWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMonoBehaviourWrap:$__CreateInstance193(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMonoBehaviourWrap::_m_IsInvoking(nint)" newName="$_m_IsInvoking" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMonoBehaviourWrap:_m_IsInvoking(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMonoBehaviourWrap:$_m_IsInvoking(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMonoBehaviourWrap::_m_CancelInvoke(nint)" newName="$_m_CancelInvoke" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMonoBehaviourWrap:_m_CancelInvoke(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMonoBehaviourWrap:$_m_CancelInvoke(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMonoBehaviourWrap::_m_Invoke(nint)" newName="$_m_Invoke" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMonoBehaviourWrap:_m_Invoke(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMonoBehaviourWrap:$_m_Invoke(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMonoBehaviourWrap::_m_InvokeRepeating(nint)" newName="$_m_InvokeRepeating" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMonoBehaviourWrap:_m_InvokeRepeating(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMonoBehaviourWrap:$_m_InvokeRepeating(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMonoBehaviourWrap::_m_StartCoroutine(nint)" newName="$_m_StartCoroutine" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMonoBehaviourWrap:_m_StartCoroutine(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMonoBehaviourWrap:$_m_StartCoroutine(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMonoBehaviourWrap::_m_StopCoroutine(nint)" newName="$_m_StopCoroutine" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMonoBehaviourWrap:_m_StopCoroutine(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMonoBehaviourWrap:$_m_StopCoroutine(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMonoBehaviourWrap::_m_StopAllCoroutines(nint)" newName="$_m_StopAllCoroutines" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMonoBehaviourWrap:_m_StopAllCoroutines(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMonoBehaviourWrap:$_m_StopAllCoroutines(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMonoBehaviourWrap::_m_print_xlua_st_(nint)" newName="$_m_print_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMonoBehaviourWrap:_m_print_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMonoBehaviourWrap:$_m_print_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMonoBehaviourWrap::_g_get_destroyCancellationToken(nint)" newName="$_g_get_destroyCancellationToken" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMonoBehaviourWrap:_g_get_destroyCancellationToken(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMonoBehaviourWrap:$_g_get_destroyCancellationToken(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMonoBehaviourWrap::_g_get_useGUILayout(nint)" newName="$_g_get_useGUILayout" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMonoBehaviourWrap:_g_get_useGUILayout(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMonoBehaviourWrap:$_g_get_useGUILayout(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineMonoBehaviourWrap::_s_set_useGUILayout(nint)" newName="$_s_set_useGUILayout" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineMonoBehaviourWrap:_s_set_useGUILayout(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineMonoBehaviourWrap:$_s_set_useGUILayout(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.UnityEngineObjectWrap" newFullName="$XLua.CSObjectWrap.$UnityEngineObjectWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.UnityEngineObjectWrap::__Register(nint)" newName="$__Register194" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineObjectWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineObjectWrap:$__Register194(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineObjectWrap::__CreateInstance(nint)" newName="$__CreateInstance195" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineObjectWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineObjectWrap:$__CreateInstance195(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineObjectWrap::__EqMeta(nint)" newName="$__EqMeta196" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineObjectWrap:__EqMeta(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineObjectWrap:$__EqMeta196(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineObjectWrap::_m_GetInstanceID(nint)" newName="$_m_GetInstanceID" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineObjectWrap:_m_GetInstanceID(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineObjectWrap:$_m_GetInstanceID(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineObjectWrap::_m_GetHashCode(nint)" newName="$_m_GetHashCode197" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineObjectWrap:_m_GetHashCode(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineObjectWrap:$_m_GetHashCode197(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineObjectWrap::_m_Equals(nint)" newName="$_m_Equals198" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineObjectWrap:_m_Equals(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineObjectWrap:$_m_Equals198(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineObjectWrap::_m_InstantiateAsync_xlua_st_(nint)" newName="$_m_InstantiateAsync_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineObjectWrap:_m_InstantiateAsync_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineObjectWrap:$_m_InstantiateAsync_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineObjectWrap::_m_Instantiate_xlua_st_(nint)" newName="$_m_Instantiate_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineObjectWrap:_m_Instantiate_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineObjectWrap:$_m_Instantiate_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineObjectWrap::_m_Destroy_xlua_st_(nint)" newName="$_m_Destroy_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineObjectWrap:_m_Destroy_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineObjectWrap:$_m_Destroy_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineObjectWrap::_m_DestroyImmediate_xlua_st_(nint)" newName="$_m_DestroyImmediate_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineObjectWrap:_m_DestroyImmediate_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineObjectWrap:$_m_DestroyImmediate_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineObjectWrap::_m_FindObjectsOfType_xlua_st_(nint)" newName="$_m_FindObjectsOfType_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineObjectWrap:_m_FindObjectsOfType_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineObjectWrap:$_m_FindObjectsOfType_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineObjectWrap::_m_FindObjectsByType_xlua_st_(nint)" newName="$_m_FindObjectsByType_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineObjectWrap:_m_FindObjectsByType_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineObjectWrap:$_m_FindObjectsByType_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineObjectWrap::_m_DontDestroyOnLoad_xlua_st_(nint)" newName="$_m_DontDestroyOnLoad_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineObjectWrap:_m_DontDestroyOnLoad_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineObjectWrap:$_m_DontDestroyOnLoad_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineObjectWrap::_m_FindObjectOfType_xlua_st_(nint)" newName="$_m_FindObjectOfType_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineObjectWrap:_m_FindObjectOfType_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineObjectWrap:$_m_FindObjectOfType_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineObjectWrap::_m_FindFirstObjectByType_xlua_st_(nint)" newName="$_m_FindFirstObjectByType_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineObjectWrap:_m_FindFirstObjectByType_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineObjectWrap:$_m_FindFirstObjectByType_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineObjectWrap::_m_FindAnyObjectByType_xlua_st_(nint)" newName="$_m_FindAnyObjectByType_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineObjectWrap:_m_FindAnyObjectByType_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineObjectWrap:$_m_FindAnyObjectByType_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineObjectWrap::_m_ToString(nint)" newName="$_m_ToString199" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineObjectWrap:_m_ToString(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineObjectWrap:$_m_ToString199(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineObjectWrap::_g_get_name(nint)" newName="$_g_get_name" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineObjectWrap:_g_get_name(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineObjectWrap:$_g_get_name(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineObjectWrap::_g_get_hideFlags(nint)" newName="$_g_get_hideFlags" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineObjectWrap:_g_get_hideFlags(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineObjectWrap:$_g_get_hideFlags(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineObjectWrap::_s_set_name(nint)" newName="$_s_set_name" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineObjectWrap:_s_set_name(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineObjectWrap:$_s_set_name(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineObjectWrap::_s_set_hideFlags(nint)" newName="$_s_set_hideFlags" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineObjectWrap:_s_set_hideFlags(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineObjectWrap:$_s_set_hideFlags(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.UnityEngineParticleSystemWrap" newFullName="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.UnityEngineParticleSystemWrap::__Register(nint)" newName="$__Register200" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$__Register200(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::__CreateInstance(nint)" newName="$__CreateInstance201" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$__CreateInstance201(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_m_SetParticles(nint)" newName="$_m_SetParticles" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_m_SetParticles(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_m_SetParticles(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_m_GetParticles(nint)" newName="$_m_GetParticles" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_m_GetParticles(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_m_GetParticles(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_m_SetCustomParticleData(nint)" newName="$_m_SetCustomParticleData" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_m_SetCustomParticleData(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_m_SetCustomParticleData(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_m_GetCustomParticleData(nint)" newName="$_m_GetCustomParticleData" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_m_GetCustomParticleData(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_m_GetCustomParticleData(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_m_GetPlaybackState(nint)" newName="$_m_GetPlaybackState" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_m_GetPlaybackState(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_m_GetPlaybackState(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_m_SetPlaybackState(nint)" newName="$_m_SetPlaybackState" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_m_SetPlaybackState(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_m_SetPlaybackState(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_m_GetTrails(nint)" newName="$_m_GetTrails" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_m_GetTrails(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_m_GetTrails(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_m_SetTrails(nint)" newName="$_m_SetTrails" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_m_SetTrails(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_m_SetTrails(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_m_Simulate(nint)" newName="$_m_Simulate" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_m_Simulate(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_m_Simulate(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_m_Play(nint)" newName="$_m_Play" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_m_Play(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_m_Play(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_m_Pause(nint)" newName="$_m_Pause" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_m_Pause(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_m_Pause(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_m_Stop(nint)" newName="$_m_Stop" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_m_Stop(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_m_Stop(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_m_Clear(nint)" newName="$_m_Clear202" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_m_Clear(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_m_Clear202(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_m_IsAlive(nint)" newName="$_m_IsAlive" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_m_IsAlive(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_m_IsAlive(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_m_Emit(nint)" newName="$_m_Emit" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_m_Emit(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_m_Emit(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_m_TriggerSubEmitter(nint)" newName="$_m_TriggerSubEmitter" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_m_TriggerSubEmitter(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_m_TriggerSubEmitter(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_m_ResetPreMappedBufferMemory_xlua_st_(nint)" newName="$_m_ResetPreMappedBufferMemory_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_m_ResetPreMappedBufferMemory_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_m_ResetPreMappedBufferMemory_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_m_SetMaximumPreMappedBufferCounts_xlua_st_(nint)" newName="$_m_SetMaximumPreMappedBufferCounts_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_m_SetMaximumPreMappedBufferCounts_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_m_SetMaximumPreMappedBufferCounts_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_m_AllocateAxisOfRotationAttribute(nint)" newName="$_m_AllocateAxisOfRotationAttribute" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_m_AllocateAxisOfRotationAttribute(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_m_AllocateAxisOfRotationAttribute(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_m_AllocateMeshIndexAttribute(nint)" newName="$_m_AllocateMeshIndexAttribute" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_m_AllocateMeshIndexAttribute(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_m_AllocateMeshIndexAttribute(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_m_AllocateCustomDataAttribute(nint)" newName="$_m_AllocateCustomDataAttribute" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_m_AllocateCustomDataAttribute(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_m_AllocateCustomDataAttribute(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_isPlaying(nint)" newName="$_g_get_isPlaying" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_isPlaying(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_isPlaying(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_isEmitting(nint)" newName="$_g_get_isEmitting" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_isEmitting(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_isEmitting(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_isStopped(nint)" newName="$_g_get_isStopped" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_isStopped(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_isStopped(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_isPaused(nint)" newName="$_g_get_isPaused" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_isPaused(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_isPaused(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_particleCount(nint)" newName="$_g_get_particleCount" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_particleCount(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_particleCount(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_time(nint)" newName="$_g_get_time203" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_time(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_time203(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_totalTime(nint)" newName="$_g_get_totalTime" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_totalTime(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_totalTime(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_randomSeed(nint)" newName="$_g_get_randomSeed" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_randomSeed(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_randomSeed(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_useAutoRandomSeed(nint)" newName="$_g_get_useAutoRandomSeed" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_useAutoRandomSeed(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_useAutoRandomSeed(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_proceduralSimulationSupported(nint)" newName="$_g_get_proceduralSimulationSupported" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_proceduralSimulationSupported(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_proceduralSimulationSupported(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_has3DParticleRotations(nint)" newName="$_g_get_has3DParticleRotations" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_has3DParticleRotations(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_has3DParticleRotations(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_hasNonUniformParticleSizes(nint)" newName="$_g_get_hasNonUniformParticleSizes" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_hasNonUniformParticleSizes(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_hasNonUniformParticleSizes(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_main(nint)" newName="$_g_get_main" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_main(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_main(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_emission(nint)" newName="$_g_get_emission" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_emission(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_emission(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_shape(nint)" newName="$_g_get_shape" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_shape(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_shape(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_velocityOverLifetime(nint)" newName="$_g_get_velocityOverLifetime" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_velocityOverLifetime(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_velocityOverLifetime(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_limitVelocityOverLifetime(nint)" newName="$_g_get_limitVelocityOverLifetime" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_limitVelocityOverLifetime(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_limitVelocityOverLifetime(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_inheritVelocity(nint)" newName="$_g_get_inheritVelocity" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_inheritVelocity(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_inheritVelocity(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_lifetimeByEmitterSpeed(nint)" newName="$_g_get_lifetimeByEmitterSpeed" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_lifetimeByEmitterSpeed(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_lifetimeByEmitterSpeed(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_forceOverLifetime(nint)" newName="$_g_get_forceOverLifetime" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_forceOverLifetime(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_forceOverLifetime(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_colorOverLifetime(nint)" newName="$_g_get_colorOverLifetime" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_colorOverLifetime(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_colorOverLifetime(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_colorBySpeed(nint)" newName="$_g_get_colorBySpeed" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_colorBySpeed(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_colorBySpeed(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_sizeOverLifetime(nint)" newName="$_g_get_sizeOverLifetime" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_sizeOverLifetime(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_sizeOverLifetime(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_sizeBySpeed(nint)" newName="$_g_get_sizeBySpeed" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_sizeBySpeed(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_sizeBySpeed(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_rotationOverLifetime(nint)" newName="$_g_get_rotationOverLifetime" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_rotationOverLifetime(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_rotationOverLifetime(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_rotationBySpeed(nint)" newName="$_g_get_rotationBySpeed" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_rotationBySpeed(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_rotationBySpeed(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_externalForces(nint)" newName="$_g_get_externalForces" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_externalForces(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_externalForces(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_noise(nint)" newName="$_g_get_noise" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_noise(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_noise(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_collision(nint)" newName="$_g_get_collision" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_collision(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_collision(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_trigger(nint)" newName="$_g_get_trigger" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_trigger(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_trigger(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_subEmitters(nint)" newName="$_g_get_subEmitters" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_subEmitters(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_subEmitters(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_textureSheetAnimation(nint)" newName="$_g_get_textureSheetAnimation" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_textureSheetAnimation(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_textureSheetAnimation(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_lights(nint)" newName="$_g_get_lights" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_lights(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_lights(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_trails(nint)" newName="$_g_get_trails" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_trails(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_trails(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_g_get_customData(nint)" newName="$_g_get_customData" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_g_get_customData(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_g_get_customData(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_s_set_time(nint)" newName="$_s_set_time204" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_s_set_time(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_s_set_time204(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_s_set_randomSeed(nint)" newName="$_s_set_randomSeed" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_s_set_randomSeed(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_s_set_randomSeed(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineParticleSystemWrap::_s_set_useAutoRandomSeed(nint)" newName="$_s_set_useAutoRandomSeed" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineParticleSystemWrap:_s_set_useAutoRandomSeed(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineParticleSystemWrap:$_s_set_useAutoRandomSeed(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.UnityEngineQuaternionWrap" newFullName="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.UnityEngineQuaternionWrap::__Register(nint)" newName="$__Register205" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$__Register205(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::__CreateInstance(nint)" newName="$__CreateInstance206" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$__CreateInstance206(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::__CSIndexer(nint)" newName="$__CSIndexer207" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:__CSIndexer(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$__CSIndexer207(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::__NewIndexer(nint)" newName="$__NewIndexer208" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:__NewIndexer(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$__NewIndexer208(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::__MulMeta(nint)" newName="$__MulMeta209" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:__MulMeta(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$__MulMeta209(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::__EqMeta(nint)" newName="$__EqMeta210" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:__EqMeta(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$__EqMeta210(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_m_FromToRotation_xlua_st_(nint)" newName="$_m_FromToRotation_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_m_FromToRotation_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_m_FromToRotation_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_m_Inverse_xlua_st_(nint)" newName="$_m_Inverse_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_m_Inverse_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_m_Inverse_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_m_Slerp_xlua_st_(nint)" newName="$_m_Slerp_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_m_Slerp_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_m_Slerp_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_m_SlerpUnclamped_xlua_st_(nint)" newName="$_m_SlerpUnclamped_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_m_SlerpUnclamped_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_m_SlerpUnclamped_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_m_Lerp_xlua_st_(nint)" newName="$_m_Lerp_xlua_st_211" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_m_Lerp_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_m_Lerp_xlua_st_211(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_m_LerpUnclamped_xlua_st_(nint)" newName="$_m_LerpUnclamped_xlua_st_212" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_m_LerpUnclamped_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_m_LerpUnclamped_xlua_st_212(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_m_AngleAxis_xlua_st_(nint)" newName="$_m_AngleAxis_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_m_AngleAxis_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_m_AngleAxis_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_m_LookRotation_xlua_st_(nint)" newName="$_m_LookRotation_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_m_LookRotation_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_m_LookRotation_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_m_Set(nint)" newName="$_m_Set" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_m_Set(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_m_Set(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_m_Dot_xlua_st_(nint)" newName="$_m_Dot_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_m_Dot_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_m_Dot_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_m_SetLookRotation(nint)" newName="$_m_SetLookRotation" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_m_SetLookRotation(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_m_SetLookRotation(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_m_Angle_xlua_st_(nint)" newName="$_m_Angle_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_m_Angle_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_m_Angle_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_m_Euler_xlua_st_(nint)" newName="$_m_Euler_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_m_Euler_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_m_Euler_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_m_ToAngleAxis(nint)" newName="$_m_ToAngleAxis" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_m_ToAngleAxis(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_m_ToAngleAxis(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_m_SetFromToRotation(nint)" newName="$_m_SetFromToRotation" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_m_SetFromToRotation(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_m_SetFromToRotation(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_m_RotateTowards_xlua_st_(nint)" newName="$_m_RotateTowards_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_m_RotateTowards_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_m_RotateTowards_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_m_Normalize_xlua_st_(nint)" newName="$_m_Normalize_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_m_Normalize_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_m_Normalize_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_m_Normalize(nint)" newName="$_m_Normalize" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_m_Normalize(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_m_Normalize(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_m_GetHashCode(nint)" newName="$_m_GetHashCode213" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_m_GetHashCode(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_m_GetHashCode213(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_m_Equals(nint)" newName="$_m_Equals214" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_m_Equals(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_m_Equals214(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_m_ToString(nint)" newName="$_m_ToString215" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_m_ToString(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_m_ToString215(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_g_get_identity(nint)" newName="$_g_get_identity" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_g_get_identity(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_g_get_identity(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_g_get_eulerAngles(nint)" newName="$_g_get_eulerAngles" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_g_get_eulerAngles(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_g_get_eulerAngles(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_g_get_normalized(nint)" newName="$_g_get_normalized" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_g_get_normalized(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_g_get_normalized(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_g_get_x(nint)" newName="$_g_get_x" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_g_get_x(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_g_get_x(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_g_get_y(nint)" newName="$_g_get_y" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_g_get_y(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_g_get_y(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_g_get_z(nint)" newName="$_g_get_z" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_g_get_z(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_g_get_z(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_g_get_w(nint)" newName="$_g_get_w" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_g_get_w(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_g_get_w(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_s_set_eulerAngles(nint)" newName="$_s_set_eulerAngles" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_s_set_eulerAngles(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_s_set_eulerAngles(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_s_set_x(nint)" newName="$_s_set_x" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_s_set_x(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_s_set_x(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_s_set_y(nint)" newName="$_s_set_y" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_s_set_y(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_s_set_y(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_s_set_z(nint)" newName="$_s_set_z" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_s_set_z(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_s_set_z(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineQuaternionWrap::_s_set_w(nint)" newName="$_s_set_w" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineQuaternionWrap:_s_set_w(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineQuaternionWrap:$_s_set_w(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.UnityEngineRay2DWrap" newFullName="$XLua.CSObjectWrap.$UnityEngineRay2DWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.UnityEngineRay2DWrap::__Register(nint)" newName="$__Register216" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRay2DWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRay2DWrap:$__Register216(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRay2DWrap::__CreateInstance(nint)" newName="$__CreateInstance217" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRay2DWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRay2DWrap:$__CreateInstance217(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRay2DWrap::_m_GetPoint(nint)" newName="$_m_GetPoint" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRay2DWrap:_m_GetPoint(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRay2DWrap:$_m_GetPoint(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRay2DWrap::_m_ToString(nint)" newName="$_m_ToString218" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRay2DWrap:_m_ToString(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRay2DWrap:$_m_ToString218(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRay2DWrap::_g_get_origin(nint)" newName="$_g_get_origin" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRay2DWrap:_g_get_origin(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRay2DWrap:$_g_get_origin(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRay2DWrap::_g_get_direction(nint)" newName="$_g_get_direction" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRay2DWrap:_g_get_direction(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRay2DWrap:$_g_get_direction(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRay2DWrap::_s_set_origin(nint)" newName="$_s_set_origin" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRay2DWrap:_s_set_origin(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRay2DWrap:$_s_set_origin(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRay2DWrap::_s_set_direction(nint)" newName="$_s_set_direction" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRay2DWrap:_s_set_direction(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRay2DWrap:$_s_set_direction(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.UnityEngineRayWrap" newFullName="$XLua.CSObjectWrap.$UnityEngineRayWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.UnityEngineRayWrap::__Register(nint)" newName="$__Register219" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRayWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRayWrap:$__Register219(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRayWrap::__CreateInstance(nint)" newName="$__CreateInstance220" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRayWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRayWrap:$__CreateInstance220(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRayWrap::_m_GetPoint(nint)" newName="$_m_GetPoint221" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRayWrap:_m_GetPoint(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRayWrap:$_m_GetPoint221(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRayWrap::_m_ToString(nint)" newName="$_m_ToString222" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRayWrap:_m_ToString(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRayWrap:$_m_ToString222(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRayWrap::_g_get_origin(nint)" newName="$_g_get_origin223" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRayWrap:_g_get_origin(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRayWrap:$_g_get_origin223(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRayWrap::_g_get_direction(nint)" newName="$_g_get_direction224" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRayWrap:_g_get_direction(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRayWrap:$_g_get_direction224(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRayWrap::_s_set_origin(nint)" newName="$_s_set_origin225" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRayWrap:_s_set_origin(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRayWrap:$_s_set_origin225(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRayWrap::_s_set_direction(nint)" newName="$_s_set_direction226" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRayWrap:_s_set_direction(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRayWrap:$_s_set_direction226(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.UnityEngineRendererWrap" newFullName="$XLua.CSObjectWrap.$UnityEngineRendererWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.UnityEngineRendererWrap::__Register(nint)" newName="$__Register227" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$__Register227(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::__CreateInstance(nint)" newName="$__CreateInstance228" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$__CreateInstance228(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_m_ResetBounds(nint)" newName="$_m_ResetBounds" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_m_ResetBounds(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_m_ResetBounds(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_m_ResetLocalBounds(nint)" newName="$_m_ResetLocalBounds" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_m_ResetLocalBounds(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_m_ResetLocalBounds(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_m_HasPropertyBlock(nint)" newName="$_m_HasPropertyBlock" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_m_HasPropertyBlock(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_m_HasPropertyBlock(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_m_SetPropertyBlock(nint)" newName="$_m_SetPropertyBlock" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_m_SetPropertyBlock(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_m_SetPropertyBlock(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_m_GetPropertyBlock(nint)" newName="$_m_GetPropertyBlock" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_m_GetPropertyBlock(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_m_GetPropertyBlock(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_m_GetMaterials(nint)" newName="$_m_GetMaterials" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_m_GetMaterials(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_m_GetMaterials(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_m_SetSharedMaterials(nint)" newName="$_m_SetSharedMaterials" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_m_SetSharedMaterials(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_m_SetSharedMaterials(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_m_SetMaterials(nint)" newName="$_m_SetMaterials" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_m_SetMaterials(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_m_SetMaterials(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_m_GetSharedMaterials(nint)" newName="$_m_GetSharedMaterials" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_m_GetSharedMaterials(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_m_GetSharedMaterials(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_m_GetClosestReflectionProbes(nint)" newName="$_m_GetClosestReflectionProbes" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_m_GetClosestReflectionProbes(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_m_GetClosestReflectionProbes(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_bounds(nint)" newName="$_g_get_bounds" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_bounds(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_bounds(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_localBounds(nint)" newName="$_g_get_localBounds229" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_localBounds(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_localBounds229(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_enabled(nint)" newName="$_g_get_enabled230" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_enabled(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_enabled230(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_isVisible(nint)" newName="$_g_get_isVisible" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_isVisible(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_isVisible(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_shadowCastingMode(nint)" newName="$_g_get_shadowCastingMode" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_shadowCastingMode(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_shadowCastingMode(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_receiveShadows(nint)" newName="$_g_get_receiveShadows" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_receiveShadows(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_receiveShadows(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_forceRenderingOff(nint)" newName="$_g_get_forceRenderingOff" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_forceRenderingOff(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_forceRenderingOff(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_staticShadowCaster(nint)" newName="$_g_get_staticShadowCaster" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_staticShadowCaster(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_staticShadowCaster(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_motionVectorGenerationMode(nint)" newName="$_g_get_motionVectorGenerationMode" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_motionVectorGenerationMode(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_motionVectorGenerationMode(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_lightProbeUsage(nint)" newName="$_g_get_lightProbeUsage" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_lightProbeUsage(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_lightProbeUsage(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_reflectionProbeUsage(nint)" newName="$_g_get_reflectionProbeUsage" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_reflectionProbeUsage(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_reflectionProbeUsage(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_renderingLayerMask(nint)" newName="$_g_get_renderingLayerMask" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_renderingLayerMask(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_renderingLayerMask(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_rendererPriority(nint)" newName="$_g_get_rendererPriority" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_rendererPriority(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_rendererPriority(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_rayTracingMode(nint)" newName="$_g_get_rayTracingMode" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_rayTracingMode(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_rayTracingMode(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_sortingLayerName(nint)" newName="$_g_get_sortingLayerName" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_sortingLayerName(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_sortingLayerName(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_sortingLayerID(nint)" newName="$_g_get_sortingLayerID" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_sortingLayerID(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_sortingLayerID(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_sortingOrder(nint)" newName="$_g_get_sortingOrder" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_sortingOrder(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_sortingOrder(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_allowOcclusionWhenDynamic(nint)" newName="$_g_get_allowOcclusionWhenDynamic" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_allowOcclusionWhenDynamic(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_allowOcclusionWhenDynamic(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_isPartOfStaticBatch(nint)" newName="$_g_get_isPartOfStaticBatch" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_isPartOfStaticBatch(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_isPartOfStaticBatch(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_worldToLocalMatrix(nint)" newName="$_g_get_worldToLocalMatrix" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_worldToLocalMatrix(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_worldToLocalMatrix(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_localToWorldMatrix(nint)" newName="$_g_get_localToWorldMatrix" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_localToWorldMatrix(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_localToWorldMatrix(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_lightProbeProxyVolumeOverride(nint)" newName="$_g_get_lightProbeProxyVolumeOverride" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_lightProbeProxyVolumeOverride(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_lightProbeProxyVolumeOverride(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_probeAnchor(nint)" newName="$_g_get_probeAnchor" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_probeAnchor(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_probeAnchor(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_lightmapIndex(nint)" newName="$_g_get_lightmapIndex" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_lightmapIndex(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_lightmapIndex(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_realtimeLightmapIndex(nint)" newName="$_g_get_realtimeLightmapIndex" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_realtimeLightmapIndex(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_realtimeLightmapIndex(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_lightmapScaleOffset(nint)" newName="$_g_get_lightmapScaleOffset" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_lightmapScaleOffset(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_lightmapScaleOffset(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_realtimeLightmapScaleOffset(nint)" newName="$_g_get_realtimeLightmapScaleOffset" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_realtimeLightmapScaleOffset(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_realtimeLightmapScaleOffset(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_materials(nint)" newName="$_g_get_materials" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_materials(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_materials(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_material(nint)" newName="$_g_get_material" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_material(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_material(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_sharedMaterial(nint)" newName="$_g_get_sharedMaterial" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_sharedMaterial(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_sharedMaterial(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_g_get_sharedMaterials(nint)" newName="$_g_get_sharedMaterials" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_g_get_sharedMaterials(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_g_get_sharedMaterials(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_s_set_bounds(nint)" newName="$_s_set_bounds" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_s_set_bounds(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_s_set_bounds(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_s_set_localBounds(nint)" newName="$_s_set_localBounds231" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_s_set_localBounds(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_s_set_localBounds231(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_s_set_enabled(nint)" newName="$_s_set_enabled232" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_s_set_enabled(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_s_set_enabled232(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_s_set_shadowCastingMode(nint)" newName="$_s_set_shadowCastingMode" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_s_set_shadowCastingMode(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_s_set_shadowCastingMode(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_s_set_receiveShadows(nint)" newName="$_s_set_receiveShadows" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_s_set_receiveShadows(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_s_set_receiveShadows(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_s_set_forceRenderingOff(nint)" newName="$_s_set_forceRenderingOff" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_s_set_forceRenderingOff(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_s_set_forceRenderingOff(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_s_set_staticShadowCaster(nint)" newName="$_s_set_staticShadowCaster" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_s_set_staticShadowCaster(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_s_set_staticShadowCaster(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_s_set_motionVectorGenerationMode(nint)" newName="$_s_set_motionVectorGenerationMode" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_s_set_motionVectorGenerationMode(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_s_set_motionVectorGenerationMode(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_s_set_lightProbeUsage(nint)" newName="$_s_set_lightProbeUsage" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_s_set_lightProbeUsage(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_s_set_lightProbeUsage(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_s_set_reflectionProbeUsage(nint)" newName="$_s_set_reflectionProbeUsage" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_s_set_reflectionProbeUsage(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_s_set_reflectionProbeUsage(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_s_set_renderingLayerMask(nint)" newName="$_s_set_renderingLayerMask" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_s_set_renderingLayerMask(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_s_set_renderingLayerMask(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_s_set_rendererPriority(nint)" newName="$_s_set_rendererPriority" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_s_set_rendererPriority(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_s_set_rendererPriority(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_s_set_rayTracingMode(nint)" newName="$_s_set_rayTracingMode" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_s_set_rayTracingMode(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_s_set_rayTracingMode(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_s_set_sortingLayerName(nint)" newName="$_s_set_sortingLayerName" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_s_set_sortingLayerName(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_s_set_sortingLayerName(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_s_set_sortingLayerID(nint)" newName="$_s_set_sortingLayerID" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_s_set_sortingLayerID(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_s_set_sortingLayerID(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_s_set_sortingOrder(nint)" newName="$_s_set_sortingOrder" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_s_set_sortingOrder(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_s_set_sortingOrder(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_s_set_allowOcclusionWhenDynamic(nint)" newName="$_s_set_allowOcclusionWhenDynamic" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_s_set_allowOcclusionWhenDynamic(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_s_set_allowOcclusionWhenDynamic(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_s_set_lightProbeProxyVolumeOverride(nint)" newName="$_s_set_lightProbeProxyVolumeOverride" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_s_set_lightProbeProxyVolumeOverride(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_s_set_lightProbeProxyVolumeOverride(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_s_set_probeAnchor(nint)" newName="$_s_set_probeAnchor" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_s_set_probeAnchor(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_s_set_probeAnchor(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_s_set_lightmapIndex(nint)" newName="$_s_set_lightmapIndex" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_s_set_lightmapIndex(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_s_set_lightmapIndex(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_s_set_realtimeLightmapIndex(nint)" newName="$_s_set_realtimeLightmapIndex" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_s_set_realtimeLightmapIndex(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_s_set_realtimeLightmapIndex(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_s_set_lightmapScaleOffset(nint)" newName="$_s_set_lightmapScaleOffset" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_s_set_lightmapScaleOffset(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_s_set_lightmapScaleOffset(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_s_set_realtimeLightmapScaleOffset(nint)" newName="$_s_set_realtimeLightmapScaleOffset" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_s_set_realtimeLightmapScaleOffset(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_s_set_realtimeLightmapScaleOffset(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_s_set_materials(nint)" newName="$_s_set_materials" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_s_set_materials(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_s_set_materials(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_s_set_material(nint)" newName="$_s_set_material" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_s_set_material(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_s_set_material(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_s_set_sharedMaterial(nint)" newName="$_s_set_sharedMaterial" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_s_set_sharedMaterial(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_s_set_sharedMaterial(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineRendererWrap::_s_set_sharedMaterials(nint)" newName="$_s_set_sharedMaterials" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineRendererWrap:_s_set_sharedMaterials(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineRendererWrap:$_s_set_sharedMaterials(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.UnityEngineResourcesWrap" newFullName="$XLua.CSObjectWrap.$UnityEngineResourcesWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.UnityEngineResourcesWrap::__Register(nint)" newName="$__Register233" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineResourcesWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineResourcesWrap:$__Register233(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineResourcesWrap::__CreateInstance(nint)" newName="$__CreateInstance234" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineResourcesWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineResourcesWrap:$__CreateInstance234(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineResourcesWrap::_m_FindObjectsOfTypeAll_xlua_st_(nint)" newName="$_m_FindObjectsOfTypeAll_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineResourcesWrap:_m_FindObjectsOfTypeAll_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineResourcesWrap:$_m_FindObjectsOfTypeAll_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineResourcesWrap::_m_Load_xlua_st_(nint)" newName="$_m_Load_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineResourcesWrap:_m_Load_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineResourcesWrap:$_m_Load_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineResourcesWrap::_m_LoadAsync_xlua_st_(nint)" newName="$_m_LoadAsync_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineResourcesWrap:_m_LoadAsync_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineResourcesWrap:$_m_LoadAsync_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineResourcesWrap::_m_LoadAll_xlua_st_(nint)" newName="$_m_LoadAll_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineResourcesWrap:_m_LoadAll_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineResourcesWrap:$_m_LoadAll_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineResourcesWrap::_m_GetBuiltinResource_xlua_st_(nint)" newName="$_m_GetBuiltinResource_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineResourcesWrap:_m_GetBuiltinResource_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineResourcesWrap:$_m_GetBuiltinResource_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineResourcesWrap::_m_UnloadAsset_xlua_st_(nint)" newName="$_m_UnloadAsset_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineResourcesWrap:_m_UnloadAsset_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineResourcesWrap:$_m_UnloadAsset_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineResourcesWrap::_m_UnloadUnusedAssets_xlua_st_(nint)" newName="$_m_UnloadUnusedAssets_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineResourcesWrap:_m_UnloadUnusedAssets_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineResourcesWrap:$_m_UnloadUnusedAssets_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineResourcesWrap::_m_InstanceIDToObject_xlua_st_(nint)" newName="$_m_InstanceIDToObject_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineResourcesWrap:_m_InstanceIDToObject_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineResourcesWrap:$_m_InstanceIDToObject_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineResourcesWrap::_m_InstanceIDToObjectList_xlua_st_(nint)" newName="$_m_InstanceIDToObjectList_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineResourcesWrap:_m_InstanceIDToObjectList_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineResourcesWrap:$_m_InstanceIDToObjectList_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineResourcesWrap::_m_InstanceIDIsValid_xlua_st_(nint)" newName="$_m_InstanceIDIsValid_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineResourcesWrap:_m_InstanceIDIsValid_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineResourcesWrap:$_m_InstanceIDIsValid_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineResourcesWrap::_m_InstanceIDsToValidArray_xlua_st_(nint)" newName="$_m_InstanceIDsToValidArray_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineResourcesWrap:_m_InstanceIDsToValidArray_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineResourcesWrap:$_m_InstanceIDsToValidArray_xlua_st_(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap" newFullName="$XLua.CSObjectWrap.$UnityEngineSkinnedMeshRendererWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap::__Register(nint)" newName="$__Register235" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineSkinnedMeshRendererWrap:$__Register235(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap::__CreateInstance(nint)" newName="$__CreateInstance236" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineSkinnedMeshRendererWrap:$__CreateInstance236(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap::_m_GetBlendShapeWeight(nint)" newName="$_m_GetBlendShapeWeight" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap:_m_GetBlendShapeWeight(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineSkinnedMeshRendererWrap:$_m_GetBlendShapeWeight(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap::_m_SetBlendShapeWeight(nint)" newName="$_m_SetBlendShapeWeight" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap:_m_SetBlendShapeWeight(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineSkinnedMeshRendererWrap:$_m_SetBlendShapeWeight(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap::_m_BakeMesh(nint)" newName="$_m_BakeMesh" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap:_m_BakeMesh(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineSkinnedMeshRendererWrap:$_m_BakeMesh(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap::_m_GetVertexBuffer(nint)" newName="$_m_GetVertexBuffer" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap:_m_GetVertexBuffer(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineSkinnedMeshRendererWrap:$_m_GetVertexBuffer(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap::_m_GetPreviousVertexBuffer(nint)" newName="$_m_GetPreviousVertexBuffer" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap:_m_GetPreviousVertexBuffer(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineSkinnedMeshRendererWrap:$_m_GetPreviousVertexBuffer(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap::_g_get_quality(nint)" newName="$_g_get_quality" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap:_g_get_quality(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineSkinnedMeshRendererWrap:$_g_get_quality(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap::_g_get_updateWhenOffscreen(nint)" newName="$_g_get_updateWhenOffscreen" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap:_g_get_updateWhenOffscreen(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineSkinnedMeshRendererWrap:$_g_get_updateWhenOffscreen(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap::_g_get_forceMatrixRecalculationPerRender(nint)" newName="$_g_get_forceMatrixRecalculationPerRender" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap:_g_get_forceMatrixRecalculationPerRender(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineSkinnedMeshRendererWrap:$_g_get_forceMatrixRecalculationPerRender(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap::_g_get_rootBone(nint)" newName="$_g_get_rootBone" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap:_g_get_rootBone(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineSkinnedMeshRendererWrap:$_g_get_rootBone(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap::_g_get_bones(nint)" newName="$_g_get_bones" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap:_g_get_bones(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineSkinnedMeshRendererWrap:$_g_get_bones(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap::_g_get_sharedMesh(nint)" newName="$_g_get_sharedMesh" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap:_g_get_sharedMesh(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineSkinnedMeshRendererWrap:$_g_get_sharedMesh(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap::_g_get_skinnedMotionVectors(nint)" newName="$_g_get_skinnedMotionVectors" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap:_g_get_skinnedMotionVectors(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineSkinnedMeshRendererWrap:$_g_get_skinnedMotionVectors(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap::_g_get_vertexBufferTarget(nint)" newName="$_g_get_vertexBufferTarget" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap:_g_get_vertexBufferTarget(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineSkinnedMeshRendererWrap:$_g_get_vertexBufferTarget(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap::_s_set_quality(nint)" newName="$_s_set_quality" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap:_s_set_quality(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineSkinnedMeshRendererWrap:$_s_set_quality(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap::_s_set_updateWhenOffscreen(nint)" newName="$_s_set_updateWhenOffscreen" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap:_s_set_updateWhenOffscreen(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineSkinnedMeshRendererWrap:$_s_set_updateWhenOffscreen(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap::_s_set_forceMatrixRecalculationPerRender(nint)" newName="$_s_set_forceMatrixRecalculationPerRender" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap:_s_set_forceMatrixRecalculationPerRender(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineSkinnedMeshRendererWrap:$_s_set_forceMatrixRecalculationPerRender(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap::_s_set_rootBone(nint)" newName="$_s_set_rootBone" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap:_s_set_rootBone(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineSkinnedMeshRendererWrap:$_s_set_rootBone(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap::_s_set_bones(nint)" newName="$_s_set_bones" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap:_s_set_bones(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineSkinnedMeshRendererWrap:$_s_set_bones(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap::_s_set_sharedMesh(nint)" newName="$_s_set_sharedMesh" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap:_s_set_sharedMesh(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineSkinnedMeshRendererWrap:$_s_set_sharedMesh(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap::_s_set_skinnedMotionVectors(nint)" newName="$_s_set_skinnedMotionVectors" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap:_s_set_skinnedMotionVectors(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineSkinnedMeshRendererWrap:$_s_set_skinnedMotionVectors(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap::_s_set_vertexBufferTarget(nint)" newName="$_s_set_vertexBufferTarget" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineSkinnedMeshRendererWrap:_s_set_vertexBufferTarget(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineSkinnedMeshRendererWrap:$_s_set_vertexBufferTarget(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.UnityEngineTextAssetWrap" newFullName="$XLua.CSObjectWrap.$UnityEngineTextAssetWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.UnityEngineTextAssetWrap::__Register(nint)" newName="$__Register237" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTextAssetWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTextAssetWrap:$__Register237(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTextAssetWrap::__CreateInstance(nint)" newName="$__CreateInstance238" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTextAssetWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTextAssetWrap:$__CreateInstance238(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTextAssetWrap::_m_ToString(nint)" newName="$_m_ToString239" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTextAssetWrap:_m_ToString(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTextAssetWrap:$_m_ToString239(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTextAssetWrap::_g_get_bytes(nint)" newName="$_g_get_bytes" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTextAssetWrap:_g_get_bytes(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTextAssetWrap:$_g_get_bytes(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTextAssetWrap::_g_get_text(nint)" newName="$_g_get_text" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTextAssetWrap:_g_get_text(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTextAssetWrap:$_g_get_text(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTextAssetWrap::_g_get_dataSize(nint)" newName="$_g_get_dataSize" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTextAssetWrap:_g_get_dataSize(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTextAssetWrap:$_g_get_dataSize(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.UnityEngineTimeWrap" newFullName="$XLua.CSObjectWrap.$UnityEngineTimeWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.UnityEngineTimeWrap::__Register(nint)" newName="$__Register240" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$__Register240(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::__CreateInstance(nint)" newName="$__CreateInstance241" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$__CreateInstance241(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_g_get_time(nint)" newName="$_g_get_time242" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_g_get_time(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_g_get_time242(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_g_get_timeAsDouble(nint)" newName="$_g_get_timeAsDouble" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_g_get_timeAsDouble(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_g_get_timeAsDouble(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_g_get_timeSinceLevelLoad(nint)" newName="$_g_get_timeSinceLevelLoad" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_g_get_timeSinceLevelLoad(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_g_get_timeSinceLevelLoad(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_g_get_timeSinceLevelLoadAsDouble(nint)" newName="$_g_get_timeSinceLevelLoadAsDouble" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_g_get_timeSinceLevelLoadAsDouble(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_g_get_timeSinceLevelLoadAsDouble(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_g_get_deltaTime(nint)" newName="$_g_get_deltaTime" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_g_get_deltaTime(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_g_get_deltaTime(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_g_get_fixedTime(nint)" newName="$_g_get_fixedTime" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_g_get_fixedTime(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_g_get_fixedTime(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_g_get_fixedTimeAsDouble(nint)" newName="$_g_get_fixedTimeAsDouble" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_g_get_fixedTimeAsDouble(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_g_get_fixedTimeAsDouble(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_g_get_unscaledTime(nint)" newName="$_g_get_unscaledTime" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_g_get_unscaledTime(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_g_get_unscaledTime(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_g_get_unscaledTimeAsDouble(nint)" newName="$_g_get_unscaledTimeAsDouble" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_g_get_unscaledTimeAsDouble(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_g_get_unscaledTimeAsDouble(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_g_get_fixedUnscaledTime(nint)" newName="$_g_get_fixedUnscaledTime" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_g_get_fixedUnscaledTime(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_g_get_fixedUnscaledTime(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_g_get_fixedUnscaledTimeAsDouble(nint)" newName="$_g_get_fixedUnscaledTimeAsDouble" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_g_get_fixedUnscaledTimeAsDouble(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_g_get_fixedUnscaledTimeAsDouble(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_g_get_unscaledDeltaTime(nint)" newName="$_g_get_unscaledDeltaTime" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_g_get_unscaledDeltaTime(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_g_get_unscaledDeltaTime(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_g_get_fixedUnscaledDeltaTime(nint)" newName="$_g_get_fixedUnscaledDeltaTime" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_g_get_fixedUnscaledDeltaTime(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_g_get_fixedUnscaledDeltaTime(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_g_get_fixedDeltaTime(nint)" newName="$_g_get_fixedDeltaTime" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_g_get_fixedDeltaTime(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_g_get_fixedDeltaTime(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_g_get_maximumDeltaTime(nint)" newName="$_g_get_maximumDeltaTime" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_g_get_maximumDeltaTime(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_g_get_maximumDeltaTime(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_g_get_smoothDeltaTime(nint)" newName="$_g_get_smoothDeltaTime" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_g_get_smoothDeltaTime(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_g_get_smoothDeltaTime(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_g_get_maximumParticleDeltaTime(nint)" newName="$_g_get_maximumParticleDeltaTime" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_g_get_maximumParticleDeltaTime(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_g_get_maximumParticleDeltaTime(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_g_get_timeScale(nint)" newName="$_g_get_timeScale" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_g_get_timeScale(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_g_get_timeScale(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_g_get_frameCount(nint)" newName="$_g_get_frameCount" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_g_get_frameCount(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_g_get_frameCount(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_g_get_renderedFrameCount(nint)" newName="$_g_get_renderedFrameCount" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_g_get_renderedFrameCount(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_g_get_renderedFrameCount(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_g_get_realtimeSinceStartup(nint)" newName="$_g_get_realtimeSinceStartup" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_g_get_realtimeSinceStartup(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_g_get_realtimeSinceStartup(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_g_get_realtimeSinceStartupAsDouble(nint)" newName="$_g_get_realtimeSinceStartupAsDouble" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_g_get_realtimeSinceStartupAsDouble(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_g_get_realtimeSinceStartupAsDouble(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_g_get_captureDeltaTime(nint)" newName="$_g_get_captureDeltaTime" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_g_get_captureDeltaTime(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_g_get_captureDeltaTime(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_g_get_captureFramerate(nint)" newName="$_g_get_captureFramerate" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_g_get_captureFramerate(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_g_get_captureFramerate(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_g_get_inFixedTimeStep(nint)" newName="$_g_get_inFixedTimeStep" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_g_get_inFixedTimeStep(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_g_get_inFixedTimeStep(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_s_set_fixedDeltaTime(nint)" newName="$_s_set_fixedDeltaTime" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_s_set_fixedDeltaTime(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_s_set_fixedDeltaTime(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_s_set_maximumDeltaTime(nint)" newName="$_s_set_maximumDeltaTime" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_s_set_maximumDeltaTime(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_s_set_maximumDeltaTime(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_s_set_maximumParticleDeltaTime(nint)" newName="$_s_set_maximumParticleDeltaTime" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_s_set_maximumParticleDeltaTime(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_s_set_maximumParticleDeltaTime(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_s_set_timeScale(nint)" newName="$_s_set_timeScale" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_s_set_timeScale(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_s_set_timeScale(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_s_set_captureDeltaTime(nint)" newName="$_s_set_captureDeltaTime" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_s_set_captureDeltaTime(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_s_set_captureDeltaTime(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTimeWrap::_s_set_captureFramerate(nint)" newName="$_s_set_captureFramerate" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTimeWrap:_s_set_captureFramerate(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTimeWrap:$_s_set_captureFramerate(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.UnityEngineTransformWrap" newFullName="$XLua.CSObjectWrap.$UnityEngineTransformWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.UnityEngineTransformWrap::__Register(nint)" newName="$__Register243" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$__Register243(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::__CreateInstance(nint)" newName="$__CreateInstance244" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$__CreateInstance244(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_m_SetParent(nint)" newName="$_m_SetParent" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_m_SetParent(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_m_SetParent(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_m_SetPositionAndRotation(nint)" newName="$_m_SetPositionAndRotation" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_m_SetPositionAndRotation(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_m_SetPositionAndRotation(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_m_SetLocalPositionAndRotation(nint)" newName="$_m_SetLocalPositionAndRotation" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_m_SetLocalPositionAndRotation(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_m_SetLocalPositionAndRotation(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_m_GetPositionAndRotation(nint)" newName="$_m_GetPositionAndRotation" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_m_GetPositionAndRotation(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_m_GetPositionAndRotation(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_m_GetLocalPositionAndRotation(nint)" newName="$_m_GetLocalPositionAndRotation" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_m_GetLocalPositionAndRotation(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_m_GetLocalPositionAndRotation(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_m_Translate(nint)" newName="$_m_Translate" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_m_Translate(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_m_Translate(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_m_Rotate(nint)" newName="$_m_Rotate" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_m_Rotate(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_m_Rotate(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_m_RotateAround(nint)" newName="$_m_RotateAround" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_m_RotateAround(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_m_RotateAround(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_m_LookAt(nint)" newName="$_m_LookAt" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_m_LookAt(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_m_LookAt(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_m_TransformDirection(nint)" newName="$_m_TransformDirection" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_m_TransformDirection(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_m_TransformDirection(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_m_InverseTransformDirection(nint)" newName="$_m_InverseTransformDirection" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_m_InverseTransformDirection(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_m_InverseTransformDirection(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_m_TransformVector(nint)" newName="$_m_TransformVector" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_m_TransformVector(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_m_TransformVector(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_m_InverseTransformVector(nint)" newName="$_m_InverseTransformVector" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_m_InverseTransformVector(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_m_InverseTransformVector(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_m_TransformPoint(nint)" newName="$_m_TransformPoint" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_m_TransformPoint(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_m_TransformPoint(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_m_InverseTransformPoint(nint)" newName="$_m_InverseTransformPoint" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_m_InverseTransformPoint(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_m_InverseTransformPoint(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_m_DetachChildren(nint)" newName="$_m_DetachChildren" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_m_DetachChildren(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_m_DetachChildren(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_m_SetAsFirstSibling(nint)" newName="$_m_SetAsFirstSibling" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_m_SetAsFirstSibling(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_m_SetAsFirstSibling(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_m_SetAsLastSibling(nint)" newName="$_m_SetAsLastSibling" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_m_SetAsLastSibling(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_m_SetAsLastSibling(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_m_SetSiblingIndex(nint)" newName="$_m_SetSiblingIndex" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_m_SetSiblingIndex(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_m_SetSiblingIndex(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_m_GetSiblingIndex(nint)" newName="$_m_GetSiblingIndex" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_m_GetSiblingIndex(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_m_GetSiblingIndex(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_m_Find(nint)" newName="$_m_Find245" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_m_Find(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_m_Find245(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_m_IsChildOf(nint)" newName="$_m_IsChildOf" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_m_IsChildOf(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_m_IsChildOf(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_m_GetEnumerator(nint)" newName="$_m_GetEnumerator246" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_m_GetEnumerator(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_m_GetEnumerator246(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_m_GetChild(nint)" newName="$_m_GetChild" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_m_GetChild(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_m_GetChild(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_g_get_position(nint)" newName="$_g_get_position" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_g_get_position(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_g_get_position(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_g_get_localPosition(nint)" newName="$_g_get_localPosition" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_g_get_localPosition(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_g_get_localPosition(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_g_get_eulerAngles(nint)" newName="$_g_get_eulerAngles247" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_g_get_eulerAngles(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_g_get_eulerAngles247(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_g_get_localEulerAngles(nint)" newName="$_g_get_localEulerAngles" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_g_get_localEulerAngles(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_g_get_localEulerAngles(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_g_get_right(nint)" newName="$_g_get_right" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_g_get_right(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_g_get_right(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_g_get_up(nint)" newName="$_g_get_up" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_g_get_up(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_g_get_up(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_g_get_forward(nint)" newName="$_g_get_forward" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_g_get_forward(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_g_get_forward(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_g_get_rotation(nint)" newName="$_g_get_rotation" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_g_get_rotation(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_g_get_rotation(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_g_get_localRotation(nint)" newName="$_g_get_localRotation" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_g_get_localRotation(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_g_get_localRotation(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_g_get_localScale(nint)" newName="$_g_get_localScale" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_g_get_localScale(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_g_get_localScale(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_g_get_parent(nint)" newName="$_g_get_parent" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_g_get_parent(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_g_get_parent(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_g_get_worldToLocalMatrix(nint)" newName="$_g_get_worldToLocalMatrix248" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_g_get_worldToLocalMatrix(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_g_get_worldToLocalMatrix248(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_g_get_localToWorldMatrix(nint)" newName="$_g_get_localToWorldMatrix249" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_g_get_localToWorldMatrix(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_g_get_localToWorldMatrix249(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_g_get_root(nint)" newName="$_g_get_root" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_g_get_root(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_g_get_root(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_g_get_childCount(nint)" newName="$_g_get_childCount" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_g_get_childCount(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_g_get_childCount(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_g_get_lossyScale(nint)" newName="$_g_get_lossyScale" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_g_get_lossyScale(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_g_get_lossyScale(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_g_get_hasChanged(nint)" newName="$_g_get_hasChanged" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_g_get_hasChanged(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_g_get_hasChanged(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_g_get_hierarchyCapacity(nint)" newName="$_g_get_hierarchyCapacity" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_g_get_hierarchyCapacity(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_g_get_hierarchyCapacity(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_g_get_hierarchyCount(nint)" newName="$_g_get_hierarchyCount" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_g_get_hierarchyCount(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_g_get_hierarchyCount(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_s_set_position(nint)" newName="$_s_set_position" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_s_set_position(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_s_set_position(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_s_set_localPosition(nint)" newName="$_s_set_localPosition" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_s_set_localPosition(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_s_set_localPosition(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_s_set_eulerAngles(nint)" newName="$_s_set_eulerAngles250" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_s_set_eulerAngles(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_s_set_eulerAngles250(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_s_set_localEulerAngles(nint)" newName="$_s_set_localEulerAngles" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_s_set_localEulerAngles(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_s_set_localEulerAngles(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_s_set_right(nint)" newName="$_s_set_right" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_s_set_right(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_s_set_right(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_s_set_up(nint)" newName="$_s_set_up" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_s_set_up(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_s_set_up(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_s_set_forward(nint)" newName="$_s_set_forward" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_s_set_forward(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_s_set_forward(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_s_set_rotation(nint)" newName="$_s_set_rotation" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_s_set_rotation(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_s_set_rotation(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_s_set_localRotation(nint)" newName="$_s_set_localRotation" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_s_set_localRotation(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_s_set_localRotation(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_s_set_localScale(nint)" newName="$_s_set_localScale" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_s_set_localScale(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_s_set_localScale(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_s_set_parent(nint)" newName="$_s_set_parent" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_s_set_parent(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_s_set_parent(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_s_set_hasChanged(nint)" newName="$_s_set_hasChanged" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_s_set_hasChanged(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_s_set_hasChanged(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineTransformWrap::_s_set_hierarchyCapacity(nint)" newName="$_s_set_hierarchyCapacity" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineTransformWrap:_s_set_hierarchyCapacity(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineTransformWrap:$_s_set_hierarchyCapacity(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.UnityEngineVector2Wrap" newFullName="$XLua.CSObjectWrap.$UnityEngineVector2Wrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.UnityEngineVector2Wrap::__Register(nint)" newName="$__Register251" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$__Register251(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::__CreateInstance(nint)" newName="$__CreateInstance252" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$__CreateInstance252(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::__CSIndexer(nint)" newName="$__CSIndexer253" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:__CSIndexer(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$__CSIndexer253(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::__NewIndexer(nint)" newName="$__NewIndexer254" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:__NewIndexer(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$__NewIndexer254(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::__AddMeta(nint)" newName="$__AddMeta255" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:__AddMeta(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$__AddMeta255(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::__SubMeta(nint)" newName="$__SubMeta256" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:__SubMeta(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$__SubMeta256(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::__MulMeta(nint)" newName="$__MulMeta257" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:__MulMeta(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$__MulMeta257(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::__DivMeta(nint)" newName="$__DivMeta258" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:__DivMeta(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$__DivMeta258(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::__UnmMeta(nint)" newName="$__UnmMeta" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:__UnmMeta(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$__UnmMeta(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::__EqMeta(nint)" newName="$__EqMeta259" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:__EqMeta(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$__EqMeta259(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_m_Set(nint)" newName="$_m_Set260" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_m_Set(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_m_Set260(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_m_Lerp_xlua_st_(nint)" newName="$_m_Lerp_xlua_st_261" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_m_Lerp_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_m_Lerp_xlua_st_261(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_m_LerpUnclamped_xlua_st_(nint)" newName="$_m_LerpUnclamped_xlua_st_262" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_m_LerpUnclamped_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_m_LerpUnclamped_xlua_st_262(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_m_MoveTowards_xlua_st_(nint)" newName="$_m_MoveTowards_xlua_st_263" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_m_MoveTowards_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_m_MoveTowards_xlua_st_263(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_m_Scale_xlua_st_(nint)" newName="$_m_Scale_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_m_Scale_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_m_Scale_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_m_Scale(nint)" newName="$_m_Scale" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_m_Scale(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_m_Scale(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_m_Normalize(nint)" newName="$_m_Normalize264" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_m_Normalize(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_m_Normalize264(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_m_ToString(nint)" newName="$_m_ToString265" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_m_ToString(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_m_ToString265(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_m_GetHashCode(nint)" newName="$_m_GetHashCode266" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_m_GetHashCode(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_m_GetHashCode266(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_m_Equals(nint)" newName="$_m_Equals267" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_m_Equals(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_m_Equals267(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_m_Reflect_xlua_st_(nint)" newName="$_m_Reflect_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_m_Reflect_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_m_Reflect_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_m_Perpendicular_xlua_st_(nint)" newName="$_m_Perpendicular_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_m_Perpendicular_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_m_Perpendicular_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_m_Dot_xlua_st_(nint)" newName="$_m_Dot_xlua_st_268" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_m_Dot_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_m_Dot_xlua_st_268(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_m_Angle_xlua_st_(nint)" newName="$_m_Angle_xlua_st_269" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_m_Angle_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_m_Angle_xlua_st_269(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_m_SignedAngle_xlua_st_(nint)" newName="$_m_SignedAngle_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_m_SignedAngle_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_m_SignedAngle_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_m_Distance_xlua_st_(nint)" newName="$_m_Distance_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_m_Distance_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_m_Distance_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_m_ClampMagnitude_xlua_st_(nint)" newName="$_m_ClampMagnitude_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_m_ClampMagnitude_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_m_ClampMagnitude_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_m_SqrMagnitude_xlua_st_(nint)" newName="$_m_SqrMagnitude_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_m_SqrMagnitude_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_m_SqrMagnitude_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_m_SqrMagnitude(nint)" newName="$_m_SqrMagnitude" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_m_SqrMagnitude(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_m_SqrMagnitude(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_m_Min_xlua_st_(nint)" newName="$_m_Min_xlua_st_270" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_m_Min_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_m_Min_xlua_st_270(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_m_Max_xlua_st_(nint)" newName="$_m_Max_xlua_st_271" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_m_Max_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_m_Max_xlua_st_271(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_m_SmoothDamp_xlua_st_(nint)" newName="$_m_SmoothDamp_xlua_st_272" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_m_SmoothDamp_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_m_SmoothDamp_xlua_st_272(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_g_get_normalized(nint)" newName="$_g_get_normalized273" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_g_get_normalized(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_g_get_normalized273(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_g_get_magnitude(nint)" newName="$_g_get_magnitude" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_g_get_magnitude(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_g_get_magnitude(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_g_get_sqrMagnitude(nint)" newName="$_g_get_sqrMagnitude" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_g_get_sqrMagnitude(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_g_get_sqrMagnitude(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_g_get_zero(nint)" newName="$_g_get_zero" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_g_get_zero(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_g_get_zero(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_g_get_one(nint)" newName="$_g_get_one" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_g_get_one(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_g_get_one(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_g_get_up(nint)" newName="$_g_get_up274" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_g_get_up(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_g_get_up274(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_g_get_down(nint)" newName="$_g_get_down" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_g_get_down(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_g_get_down(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_g_get_left(nint)" newName="$_g_get_left" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_g_get_left(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_g_get_left(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_g_get_right(nint)" newName="$_g_get_right275" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_g_get_right(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_g_get_right275(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_g_get_positiveInfinity(nint)" newName="$_g_get_positiveInfinity" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_g_get_positiveInfinity(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_g_get_positiveInfinity(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_g_get_negativeInfinity(nint)" newName="$_g_get_negativeInfinity" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_g_get_negativeInfinity(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_g_get_negativeInfinity(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_g_get_x(nint)" newName="$_g_get_x276" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_g_get_x(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_g_get_x276(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_g_get_y(nint)" newName="$_g_get_y277" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_g_get_y(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_g_get_y277(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_s_set_x(nint)" newName="$_s_set_x278" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_s_set_x(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_s_set_x278(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector2Wrap::_s_set_y(nint)" newName="$_s_set_y279" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector2Wrap:_s_set_y(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector2Wrap:$_s_set_y279(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.UnityEngineVector3Wrap" newFullName="$XLua.CSObjectWrap.$UnityEngineVector3Wrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.UnityEngineVector3Wrap::__Register(nint)" newName="$__Register280" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$__Register280(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::__CreateInstance(nint)" newName="$__CreateInstance281" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$__CreateInstance281(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::__CSIndexer(nint)" newName="$__CSIndexer282" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:__CSIndexer(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$__CSIndexer282(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::__NewIndexer(nint)" newName="$__NewIndexer283" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:__NewIndexer(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$__NewIndexer283(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::__AddMeta(nint)" newName="$__AddMeta284" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:__AddMeta(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$__AddMeta284(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::__SubMeta(nint)" newName="$__SubMeta285" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:__SubMeta(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$__SubMeta285(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::__UnmMeta(nint)" newName="$__UnmMeta286" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:__UnmMeta(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$__UnmMeta286(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::__MulMeta(nint)" newName="$__MulMeta287" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:__MulMeta(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$__MulMeta287(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::__DivMeta(nint)" newName="$__DivMeta288" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:__DivMeta(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$__DivMeta288(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::__EqMeta(nint)" newName="$__EqMeta289" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:__EqMeta(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$__EqMeta289(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_m_Slerp_xlua_st_(nint)" newName="$_m_Slerp_xlua_st_290" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_m_Slerp_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_m_Slerp_xlua_st_290(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_m_SlerpUnclamped_xlua_st_(nint)" newName="$_m_SlerpUnclamped_xlua_st_291" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_m_SlerpUnclamped_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_m_SlerpUnclamped_xlua_st_291(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_m_OrthoNormalize_xlua_st_(nint)" newName="$_m_OrthoNormalize_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_m_OrthoNormalize_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_m_OrthoNormalize_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_m_RotateTowards_xlua_st_(nint)" newName="$_m_RotateTowards_xlua_st_292" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_m_RotateTowards_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_m_RotateTowards_xlua_st_292(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_m_Lerp_xlua_st_(nint)" newName="$_m_Lerp_xlua_st_293" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_m_Lerp_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_m_Lerp_xlua_st_293(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_m_LerpUnclamped_xlua_st_(nint)" newName="$_m_LerpUnclamped_xlua_st_294" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_m_LerpUnclamped_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_m_LerpUnclamped_xlua_st_294(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_m_MoveTowards_xlua_st_(nint)" newName="$_m_MoveTowards_xlua_st_295" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_m_MoveTowards_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_m_MoveTowards_xlua_st_295(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_m_SmoothDamp_xlua_st_(nint)" newName="$_m_SmoothDamp_xlua_st_296" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_m_SmoothDamp_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_m_SmoothDamp_xlua_st_296(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_m_Set(nint)" newName="$_m_Set297" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_m_Set(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_m_Set297(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_m_Scale_xlua_st_(nint)" newName="$_m_Scale_xlua_st_298" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_m_Scale_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_m_Scale_xlua_st_298(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_m_Scale(nint)" newName="$_m_Scale299" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_m_Scale(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_m_Scale299(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_m_Cross_xlua_st_(nint)" newName="$_m_Cross_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_m_Cross_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_m_Cross_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_m_GetHashCode(nint)" newName="$_m_GetHashCode300" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_m_GetHashCode(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_m_GetHashCode300(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_m_Equals(nint)" newName="$_m_Equals301" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_m_Equals(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_m_Equals301(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_m_Reflect_xlua_st_(nint)" newName="$_m_Reflect_xlua_st_302" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_m_Reflect_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_m_Reflect_xlua_st_302(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_m_Normalize_xlua_st_(nint)" newName="$_m_Normalize_xlua_st_303" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_m_Normalize_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_m_Normalize_xlua_st_303(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_m_Normalize(nint)" newName="$_m_Normalize304" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_m_Normalize(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_m_Normalize304(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_m_Dot_xlua_st_(nint)" newName="$_m_Dot_xlua_st_305" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_m_Dot_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_m_Dot_xlua_st_305(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_m_Project_xlua_st_(nint)" newName="$_m_Project_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_m_Project_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_m_Project_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_m_ProjectOnPlane_xlua_st_(nint)" newName="$_m_ProjectOnPlane_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_m_ProjectOnPlane_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_m_ProjectOnPlane_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_m_Angle_xlua_st_(nint)" newName="$_m_Angle_xlua_st_306" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_m_Angle_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_m_Angle_xlua_st_306(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_m_SignedAngle_xlua_st_(nint)" newName="$_m_SignedAngle_xlua_st_307" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_m_SignedAngle_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_m_SignedAngle_xlua_st_307(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_m_Distance_xlua_st_(nint)" newName="$_m_Distance_xlua_st_308" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_m_Distance_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_m_Distance_xlua_st_308(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_m_ClampMagnitude_xlua_st_(nint)" newName="$_m_ClampMagnitude_xlua_st_309" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_m_ClampMagnitude_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_m_ClampMagnitude_xlua_st_309(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_m_Magnitude_xlua_st_(nint)" newName="$_m_Magnitude_xlua_st_" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_m_Magnitude_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_m_Magnitude_xlua_st_(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_m_SqrMagnitude_xlua_st_(nint)" newName="$_m_SqrMagnitude_xlua_st_310" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_m_SqrMagnitude_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_m_SqrMagnitude_xlua_st_310(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_m_Min_xlua_st_(nint)" newName="$_m_Min_xlua_st_311" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_m_Min_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_m_Min_xlua_st_311(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_m_Max_xlua_st_(nint)" newName="$_m_Max_xlua_st_312" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_m_Max_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_m_Max_xlua_st_312(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_m_ToString(nint)" newName="$_m_ToString313" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_m_ToString(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_m_ToString313(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_g_get_normalized(nint)" newName="$_g_get_normalized314" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_g_get_normalized(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_g_get_normalized314(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_g_get_magnitude(nint)" newName="$_g_get_magnitude315" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_g_get_magnitude(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_g_get_magnitude315(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_g_get_sqrMagnitude(nint)" newName="$_g_get_sqrMagnitude316" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_g_get_sqrMagnitude(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_g_get_sqrMagnitude316(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_g_get_zero(nint)" newName="$_g_get_zero317" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_g_get_zero(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_g_get_zero317(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_g_get_one(nint)" newName="$_g_get_one318" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_g_get_one(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_g_get_one318(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_g_get_forward(nint)" newName="$_g_get_forward319" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_g_get_forward(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_g_get_forward319(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_g_get_back(nint)" newName="$_g_get_back" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_g_get_back(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_g_get_back(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_g_get_up(nint)" newName="$_g_get_up320" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_g_get_up(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_g_get_up320(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_g_get_down(nint)" newName="$_g_get_down321" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_g_get_down(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_g_get_down321(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_g_get_left(nint)" newName="$_g_get_left322" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_g_get_left(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_g_get_left322(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_g_get_right(nint)" newName="$_g_get_right323" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_g_get_right(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_g_get_right323(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_g_get_positiveInfinity(nint)" newName="$_g_get_positiveInfinity324" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_g_get_positiveInfinity(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_g_get_positiveInfinity324(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_g_get_negativeInfinity(nint)" newName="$_g_get_negativeInfinity325" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_g_get_negativeInfinity(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_g_get_negativeInfinity325(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_g_get_x(nint)" newName="$_g_get_x326" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_g_get_x(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_g_get_x326(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_g_get_y(nint)" newName="$_g_get_y327" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_g_get_y(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_g_get_y327(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_g_get_z(nint)" newName="$_g_get_z328" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_g_get_z(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_g_get_z328(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_s_set_x(nint)" newName="$_s_set_x329" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_s_set_x(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_s_set_x329(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_s_set_y(nint)" newName="$_s_set_y330" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_s_set_y(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_s_set_y330(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector3Wrap::_s_set_z(nint)" newName="$_s_set_z331" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector3Wrap:_s_set_z(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector3Wrap:$_s_set_z331(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.UnityEngineVector4Wrap" newFullName="$XLua.CSObjectWrap.$UnityEngineVector4Wrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.UnityEngineVector4Wrap::__Register(nint)" newName="$__Register332" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$__Register332(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::__CreateInstance(nint)" newName="$__CreateInstance333" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$__CreateInstance333(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::__CSIndexer(nint)" newName="$__CSIndexer334" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:__CSIndexer(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$__CSIndexer334(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::__NewIndexer(nint)" newName="$__NewIndexer335" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:__NewIndexer(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$__NewIndexer335(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::__AddMeta(nint)" newName="$__AddMeta336" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:__AddMeta(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$__AddMeta336(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::__SubMeta(nint)" newName="$__SubMeta337" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:__SubMeta(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$__SubMeta337(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::__UnmMeta(nint)" newName="$__UnmMeta338" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:__UnmMeta(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$__UnmMeta338(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::__MulMeta(nint)" newName="$__MulMeta339" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:__MulMeta(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$__MulMeta339(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::__DivMeta(nint)" newName="$__DivMeta340" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:__DivMeta(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$__DivMeta340(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::__EqMeta(nint)" newName="$__EqMeta341" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:__EqMeta(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$__EqMeta341(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_m_Set(nint)" newName="$_m_Set342" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_m_Set(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_m_Set342(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_m_Lerp_xlua_st_(nint)" newName="$_m_Lerp_xlua_st_343" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_m_Lerp_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_m_Lerp_xlua_st_343(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_m_LerpUnclamped_xlua_st_(nint)" newName="$_m_LerpUnclamped_xlua_st_344" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_m_LerpUnclamped_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_m_LerpUnclamped_xlua_st_344(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_m_MoveTowards_xlua_st_(nint)" newName="$_m_MoveTowards_xlua_st_345" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_m_MoveTowards_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_m_MoveTowards_xlua_st_345(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_m_Scale_xlua_st_(nint)" newName="$_m_Scale_xlua_st_346" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_m_Scale_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_m_Scale_xlua_st_346(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_m_Scale(nint)" newName="$_m_Scale347" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_m_Scale(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_m_Scale347(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_m_GetHashCode(nint)" newName="$_m_GetHashCode348" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_m_GetHashCode(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_m_GetHashCode348(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_m_Equals(nint)" newName="$_m_Equals349" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_m_Equals(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_m_Equals349(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_m_Normalize_xlua_st_(nint)" newName="$_m_Normalize_xlua_st_350" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_m_Normalize_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_m_Normalize_xlua_st_350(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_m_Normalize(nint)" newName="$_m_Normalize351" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_m_Normalize(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_m_Normalize351(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_m_Dot_xlua_st_(nint)" newName="$_m_Dot_xlua_st_352" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_m_Dot_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_m_Dot_xlua_st_352(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_m_Project_xlua_st_(nint)" newName="$_m_Project_xlua_st_353" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_m_Project_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_m_Project_xlua_st_353(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_m_Distance_xlua_st_(nint)" newName="$_m_Distance_xlua_st_354" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_m_Distance_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_m_Distance_xlua_st_354(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_m_Magnitude_xlua_st_(nint)" newName="$_m_Magnitude_xlua_st_355" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_m_Magnitude_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_m_Magnitude_xlua_st_355(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_m_Min_xlua_st_(nint)" newName="$_m_Min_xlua_st_356" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_m_Min_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_m_Min_xlua_st_356(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_m_Max_xlua_st_(nint)" newName="$_m_Max_xlua_st_357" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_m_Max_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_m_Max_xlua_st_357(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_m_ToString(nint)" newName="$_m_ToString358" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_m_ToString(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_m_ToString358(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_m_SqrMagnitude_xlua_st_(nint)" newName="$_m_SqrMagnitude_xlua_st_359" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_m_SqrMagnitude_xlua_st_(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_m_SqrMagnitude_xlua_st_359(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_m_SqrMagnitude(nint)" newName="$_m_SqrMagnitude360" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_m_SqrMagnitude(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_m_SqrMagnitude360(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_g_get_normalized(nint)" newName="$_g_get_normalized361" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_g_get_normalized(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_g_get_normalized361(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_g_get_magnitude(nint)" newName="$_g_get_magnitude362" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_g_get_magnitude(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_g_get_magnitude362(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_g_get_sqrMagnitude(nint)" newName="$_g_get_sqrMagnitude363" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_g_get_sqrMagnitude(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_g_get_sqrMagnitude363(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_g_get_zero(nint)" newName="$_g_get_zero364" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_g_get_zero(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_g_get_zero364(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_g_get_one(nint)" newName="$_g_get_one365" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_g_get_one(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_g_get_one365(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_g_get_positiveInfinity(nint)" newName="$_g_get_positiveInfinity366" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_g_get_positiveInfinity(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_g_get_positiveInfinity366(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_g_get_negativeInfinity(nint)" newName="$_g_get_negativeInfinity367" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_g_get_negativeInfinity(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_g_get_negativeInfinity367(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_g_get_x(nint)" newName="$_g_get_x368" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_g_get_x(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_g_get_x368(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_g_get_y(nint)" newName="$_g_get_y369" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_g_get_y(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_g_get_y369(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_g_get_z(nint)" newName="$_g_get_z370" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_g_get_z(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_g_get_z370(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_g_get_w(nint)" newName="$_g_get_w371" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_g_get_w(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_g_get_w371(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_s_set_x(nint)" newName="$_s_set_x372" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_s_set_x(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_s_set_x372(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_s_set_y(nint)" newName="$_s_set_y373" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_s_set_y(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_s_set_y373(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_s_set_z(nint)" newName="$_s_set_z374" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_s_set_z(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_s_set_z374(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineVector4Wrap::_s_set_w(nint)" newName="$_s_set_w375" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineVector4Wrap:_s_set_w(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineVector4Wrap:$_s_set_w375(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.UnityEngineWaitForSecondsWrap" newFullName="$XLua.CSObjectWrap.$UnityEngineWaitForSecondsWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.UnityEngineWaitForSecondsWrap::__Register(nint)" newName="$__Register376" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineWaitForSecondsWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineWaitForSecondsWrap:$__Register376(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.UnityEngineWaitForSecondsWrap::__CreateInstance(nint)" newName="$__CreateInstance377" oldStackTraceSignature="XLua.CSObjectWrap.UnityEngineWaitForSecondsWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$UnityEngineWaitForSecondsWrap:$__CreateInstance377(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.XLua_Gen_Initer_Register__" newFullName="$XLua.CSObjectWrap.$XLua_Gen_Initer_Register__" status="Renamed">
      <method signature="void XLua.CSObjectWrap.XLua_Gen_Initer_Register__::wrapInit0([Assembly-CSharp]XLua.LuaEnv, [Assembly-CSharp]XLua.ObjectTranslator)" newName="$wrapInit0" oldStackTraceSignature="XLua.CSObjectWrap.XLua_Gen_Initer_Register__:wrapInit0(LuaEnv, ObjectTranslator)" newStackTraceSignature="$XLua.CSObjectWrap.$XLua_Gen_Initer_Register__:$wrapInit0($LuaEnv, $ObjectTranslator)" />
      <method signature="void XLua.CSObjectWrap.XLua_Gen_Initer_Register__::Init([Assembly-CSharp]XLua.LuaEnv, [Assembly-CSharp]XLua.ObjectTranslator)" newName="$Init378" oldStackTraceSignature="XLua.CSObjectWrap.XLua_Gen_Initer_Register__:Init(LuaEnv, ObjectTranslator)" newStackTraceSignature="$XLua.CSObjectWrap.$XLua_Gen_Initer_Register__:$Init378($LuaEnv, $ObjectTranslator)" />
    </type>
    <type fullName="XLua.CSObjectWrap.XLuaTestBaseTestWrap" newFullName="$XLua.CSObjectWrap.$XLuaTestBaseTestWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.XLuaTestBaseTestWrap::__Register(nint)" newName="$__Register379" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestBaseTestWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestBaseTestWrap:$__Register379(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestBaseTestWrap::__CreateInstance(nint)" newName="$__CreateInstance380" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestBaseTestWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestBaseTestWrap:$__CreateInstance380(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestBaseTestWrap::_m_Foo(nint)" newName="$_m_Foo" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestBaseTestWrap:_m_Foo(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestBaseTestWrap:$_m_Foo(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestBaseTestWrap::_m_Proxy(nint)" newName="$_m_Proxy" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestBaseTestWrap:_m_Proxy(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestBaseTestWrap:$_m_Proxy(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestBaseTestWrap::_m_ToString(nint)" newName="$_m_ToString381" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestBaseTestWrap:_m_ToString(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestBaseTestWrap:$_m_ToString381(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.XLuaTestFoo1ChildWrap" newFullName="$XLua.CSObjectWrap.$XLuaTestFoo1ChildWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.XLuaTestFoo1ChildWrap::__Register(nint)" newName="$__Register382" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestFoo1ChildWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestFoo1ChildWrap:$__Register382(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestFoo1ChildWrap::__CreateInstance(nint)" newName="$__CreateInstance383" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestFoo1ChildWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestFoo1ChildWrap:$__CreateInstance383(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestFoo1ChildWrap::_m_Extension1(nint)" newName="$_m_Extension1" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestFoo1ChildWrap:_m_Extension1(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestFoo1ChildWrap:$_m_Extension1(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestFoo1ChildWrap::_m_Extension2(nint)" newName="$_m_Extension2" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestFoo1ChildWrap:_m_Extension2(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestFoo1ChildWrap:$_m_Extension2(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.XLuaTestFoo1ParentWrap" newFullName="$XLua.CSObjectWrap.$XLuaTestFoo1ParentWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.XLuaTestFoo1ParentWrap::__Register(nint)" newName="$__Register384" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestFoo1ParentWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestFoo1ParentWrap:$__Register384(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestFoo1ParentWrap::__CreateInstance(nint)" newName="$__CreateInstance385" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestFoo1ParentWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestFoo1ParentWrap:$__CreateInstance385(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestFoo1ParentWrap::_m_PlainExtension(nint)" newName="$_m_PlainExtension" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestFoo1ParentWrap:_m_PlainExtension(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestFoo1ParentWrap:$_m_PlainExtension(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestFoo1ParentWrap::_m_Extension1(nint)" newName="$_m_Extension1386" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestFoo1ParentWrap:_m_Extension1(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestFoo1ParentWrap:$_m_Extension1386(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestFoo1ParentWrap::_m_Extension2(nint)" newName="$_m_Extension2387" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestFoo1ParentWrap:_m_Extension2(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestFoo1ParentWrap:$_m_Extension2387(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.XLuaTestFoo2ChildWrap" newFullName="$XLua.CSObjectWrap.$XLuaTestFoo2ChildWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.XLuaTestFoo2ChildWrap::__Register(nint)" newName="$__Register388" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestFoo2ChildWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestFoo2ChildWrap:$__Register388(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestFoo2ChildWrap::__CreateInstance(nint)" newName="$__CreateInstance389" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestFoo2ChildWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestFoo2ChildWrap:$__CreateInstance389(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.XLuaTestFoo2ParentWrap" newFullName="$XLua.CSObjectWrap.$XLuaTestFoo2ParentWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.XLuaTestFoo2ParentWrap::__Register(nint)" newName="$__Register390" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestFoo2ParentWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestFoo2ParentWrap:$__Register390(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestFoo2ParentWrap::__CreateInstance(nint)" newName="$__CreateInstance391" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestFoo2ParentWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestFoo2ParentWrap:$__CreateInstance391(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.XLuaTestFooExtensionWrap" newFullName="$XLua.CSObjectWrap.$XLuaTestFooExtensionWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.XLuaTestFooExtensionWrap::__Register(nint)" newName="$__Register392" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestFooExtensionWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestFooExtensionWrap:$__Register392(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestFooExtensionWrap::__CreateInstance(nint)" newName="$__CreateInstance393" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestFooExtensionWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestFooExtensionWrap:$__CreateInstance393(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.XLuaTestFooWrap" newFullName="$XLua.CSObjectWrap.$XLuaTestFooWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.XLuaTestFooWrap::__Register(nint)" newName="$__Register394" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestFooWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestFooWrap:$__Register394(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestFooWrap::__CreateInstance(nint)" newName="$__CreateInstance395" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestFooWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestFooWrap:$__CreateInstance395(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestFooWrap::_m_Test1(nint)" newName="$_m_Test1" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestFooWrap:_m_Test1(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestFooWrap:$_m_Test1(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestFooWrap::_m_Test2(nint)" newName="$_m_Test2" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestFooWrap:_m_Test2(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestFooWrap:$_m_Test2(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.XLuaTestIExchangerBridge" newFullName="$XLua.CSObjectWrap.$XLuaTestIExchangerBridge" status="Renamed">
      <method signature="[Assembly-CSharp]XLua.LuaBase XLua.CSObjectWrap.XLuaTestIExchangerBridge::__Create(int, [Assembly-CSharp]XLua.LuaEnv)" newName="$__Create396" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestIExchangerBridge:__Create(Int32, LuaEnv)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestIExchangerBridge:$__Create396(Int32, $LuaEnv)" />
      <method signature="void XLua.CSObjectWrap.XLuaTestIExchangerBridge::XLuaTest.IExchanger.exchange([Assembly-CSharp]XLua.CSObjectWrap.XLuaTestIExchangerBridge, System.Array)" newName="$XLuaTest.IExchanger.exchange" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestIExchangerBridge:XLuaTest.IExchanger.exchange(Array)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestIExchangerBridge:$XLuaTest.IExchanger.exchange(Array)" />
    </type>
    <type fullName="XLua.CSObjectWrap.XLuaTestInvokeLuaICalcBridge" newFullName="$XLua.CSObjectWrap.$XLuaTestInvokeLuaICalcBridge" status="Renamed">
      <property signature="int XLuaTest.InvokeLua.ICalc.Mult" newName="$XLuaTest.InvokeLua.ICalc.Mult" />
      <property signature="object XLuaTest.InvokeLua.ICalc.Item(int)" newName="$XLuaTest.InvokeLua.ICalc.Item" />
      <event signature="System.EventHandler`1&lt;[Assembly-CSharp]XLuaTest.PropertyChangedEventArgs&gt; XLuaTest.InvokeLua.ICalc.PropertyChanged" newName="$XLuaTest.InvokeLua.ICalc.PropertyChanged" />
      <method signature="[Assembly-CSharp]XLua.LuaBase XLua.CSObjectWrap.XLuaTestInvokeLuaICalcBridge::__Create(int, [Assembly-CSharp]XLua.LuaEnv)" newName="$__Create397" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestInvokeLuaICalcBridge:__Create(Int32, LuaEnv)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestInvokeLuaICalcBridge:$__Create397(Int32, $LuaEnv)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestInvokeLuaICalcBridge::XLuaTest.InvokeLua.ICalc.Add([Assembly-CSharp]XLua.CSObjectWrap.XLuaTestInvokeLuaICalcBridge, int, int)" newName="$XLuaTest.InvokeLua.ICalc.Add" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestInvokeLuaICalcBridge:XLuaTest.InvokeLua.ICalc.Add(Int32, Int32)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestInvokeLuaICalcBridge:$XLuaTest.InvokeLua.ICalc.Add(Int32, Int32)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestInvokeLuaICalcBridge::XLuaTest.InvokeLua.ICalc.get_Mult([Assembly-CSharp]XLua.CSObjectWrap.XLuaTestInvokeLuaICalcBridge)" newName="$XLuaTest.InvokeLua.ICalc.get_Mult" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestInvokeLuaICalcBridge:XLuaTest.InvokeLua.ICalc.get_Mult()" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestInvokeLuaICalcBridge:$XLuaTest.InvokeLua.ICalc.get_Mult()" />
      <method signature="void XLua.CSObjectWrap.XLuaTestInvokeLuaICalcBridge::XLuaTest.InvokeLua.ICalc.set_Mult([Assembly-CSharp]XLua.CSObjectWrap.XLuaTestInvokeLuaICalcBridge, int)" newName="$XLuaTest.InvokeLua.ICalc.set_Mult" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestInvokeLuaICalcBridge:XLuaTest.InvokeLua.ICalc.set_Mult(Int32)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestInvokeLuaICalcBridge:$XLuaTest.InvokeLua.ICalc.set_Mult(Int32)" />
      <method signature="void XLua.CSObjectWrap.XLuaTestInvokeLuaICalcBridge::XLuaTest.InvokeLua.ICalc.add_PropertyChanged([Assembly-CSharp]XLua.CSObjectWrap.XLuaTestInvokeLuaICalcBridge, System.EventHandler`1&lt;[Assembly-CSharp]XLuaTest.PropertyChangedEventArgs&gt;)" newName="$XLuaTest.InvokeLua.ICalc.add_PropertyChanged" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestInvokeLuaICalcBridge:XLuaTest.InvokeLua.ICalc.add_PropertyChanged(EventHandler`1)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestInvokeLuaICalcBridge:$XLuaTest.InvokeLua.ICalc.add_PropertyChanged(EventHandler`1)" />
      <method signature="void XLua.CSObjectWrap.XLuaTestInvokeLuaICalcBridge::XLuaTest.InvokeLua.ICalc.remove_PropertyChanged([Assembly-CSharp]XLua.CSObjectWrap.XLuaTestInvokeLuaICalcBridge, System.EventHandler`1&lt;[Assembly-CSharp]XLuaTest.PropertyChangedEventArgs&gt;)" newName="$XLuaTest.InvokeLua.ICalc.remove_PropertyChanged" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestInvokeLuaICalcBridge:XLuaTest.InvokeLua.ICalc.remove_PropertyChanged(EventHandler`1)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestInvokeLuaICalcBridge:$XLuaTest.InvokeLua.ICalc.remove_PropertyChanged(EventHandler`1)" />
      <method signature="object XLua.CSObjectWrap.XLuaTestInvokeLuaICalcBridge::XLuaTest.InvokeLua.ICalc.get_Item([Assembly-CSharp]XLua.CSObjectWrap.XLuaTestInvokeLuaICalcBridge, int)" newName="$XLuaTest.InvokeLua.ICalc.get_Item" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestInvokeLuaICalcBridge:XLuaTest.InvokeLua.ICalc.get_Item(Int32)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestInvokeLuaICalcBridge:$XLuaTest.InvokeLua.ICalc.get_Item(Int32)" />
      <method signature="void XLua.CSObjectWrap.XLuaTestInvokeLuaICalcBridge::XLuaTest.InvokeLua.ICalc.set_Item([Assembly-CSharp]XLua.CSObjectWrap.XLuaTestInvokeLuaICalcBridge, int, object)" newName="$XLuaTest.InvokeLua.ICalc.set_Item" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestInvokeLuaICalcBridge:XLuaTest.InvokeLua.ICalc.set_Item(Int32, Object)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestInvokeLuaICalcBridge:$XLuaTest.InvokeLua.ICalc.set_Item(Int32, Object)" />
    </type>
    <type fullName="XLua.CSObjectWrap.XLuaTestLuaBehaviourWrap" newFullName="$XLua.CSObjectWrap.$XLuaTestLuaBehaviourWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.XLuaTestLuaBehaviourWrap::__Register(nint)" newName="$__Register398" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestLuaBehaviourWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestLuaBehaviourWrap:$__Register398(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestLuaBehaviourWrap::__CreateInstance(nint)" newName="$__CreateInstance399" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestLuaBehaviourWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestLuaBehaviourWrap:$__CreateInstance399(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestLuaBehaviourWrap::_g_get_luaScript(nint)" newName="$_g_get_luaScript" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestLuaBehaviourWrap:_g_get_luaScript(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestLuaBehaviourWrap:$_g_get_luaScript(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestLuaBehaviourWrap::_g_get_injections(nint)" newName="$_g_get_injections" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestLuaBehaviourWrap:_g_get_injections(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestLuaBehaviourWrap:$_g_get_injections(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestLuaBehaviourWrap::_s_set_luaScript(nint)" newName="$_s_set_luaScript" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestLuaBehaviourWrap:_s_set_luaScript(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestLuaBehaviourWrap:$_s_set_luaScript(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestLuaBehaviourWrap::_s_set_injections(nint)" newName="$_s_set_injections" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestLuaBehaviourWrap:_s_set_injections(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestLuaBehaviourWrap:$_s_set_injections(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.XLuaTestMyEnumWrap" newFullName="$XLua.CSObjectWrap.$XLuaTestMyEnumWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.XLuaTestMyEnumWrap::__Register(nint)" newName="$__Register122" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestMyEnumWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestMyEnumWrap:$__Register122(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestMyEnumWrap::__CastFrom(nint)" newName="$__CastFrom123" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestMyEnumWrap:__CastFrom(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestMyEnumWrap:$__CastFrom123(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.XLuaTestMyStructWrap" newFullName="$XLua.CSObjectWrap.$XLuaTestMyStructWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.XLuaTestMyStructWrap::__Register(nint)" newName="$__Register400" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestMyStructWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestMyStructWrap:$__Register400(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestMyStructWrap::__CreateInstance(nint)" newName="$__CreateInstance401" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestMyStructWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestMyStructWrap:$__CreateInstance401(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestMyStructWrap::_g_get_a(nint)" newName="$_g_get_a402" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestMyStructWrap:_g_get_a(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestMyStructWrap:$_g_get_a402(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestMyStructWrap::_g_get_b(nint)" newName="$_g_get_b403" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestMyStructWrap:_g_get_b(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestMyStructWrap:$_g_get_b403(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestMyStructWrap::_g_get_c(nint)" newName="$_g_get_c" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestMyStructWrap:_g_get_c(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestMyStructWrap:$_g_get_c(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestMyStructWrap::_g_get_e(nint)" newName="$_g_get_e" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestMyStructWrap:_g_get_e(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestMyStructWrap:$_g_get_e(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestMyStructWrap::_s_set_a(nint)" newName="$_s_set_a404" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestMyStructWrap:_s_set_a(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestMyStructWrap:$_s_set_a404(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestMyStructWrap::_s_set_b(nint)" newName="$_s_set_b405" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestMyStructWrap:_s_set_b(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestMyStructWrap:$_s_set_b405(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestMyStructWrap::_s_set_c(nint)" newName="$_s_set_c" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestMyStructWrap:_s_set_c(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestMyStructWrap:$_s_set_c(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestMyStructWrap::_s_set_e(nint)" newName="$_s_set_e" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestMyStructWrap:_s_set_e(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestMyStructWrap:$_s_set_e(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.XLuaTestNoGcWrap" newFullName="$XLua.CSObjectWrap.$XLuaTestNoGcWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.XLuaTestNoGcWrap::__Register(nint)" newName="$__Register406" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestNoGcWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestNoGcWrap:$__Register406(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestNoGcWrap::__CreateInstance(nint)" newName="$__CreateInstance407" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestNoGcWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestNoGcWrap:$__CreateInstance407(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestNoGcWrap::_m_FloatParamMethod(nint)" newName="$_m_FloatParamMethod" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestNoGcWrap:_m_FloatParamMethod(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestNoGcWrap:$_m_FloatParamMethod(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestNoGcWrap::_m_Vector3ParamMethod(nint)" newName="$_m_Vector3ParamMethod" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestNoGcWrap:_m_Vector3ParamMethod(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestNoGcWrap:$_m_Vector3ParamMethod(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestNoGcWrap::_m_StructParamMethod(nint)" newName="$_m_StructParamMethod" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestNoGcWrap:_m_StructParamMethod(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestNoGcWrap:$_m_StructParamMethod(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestNoGcWrap::_m_EnumParamMethod(nint)" newName="$_m_EnumParamMethod" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestNoGcWrap:_m_EnumParamMethod(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestNoGcWrap:$_m_EnumParamMethod(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestNoGcWrap::_m_DecimalParamMethod(nint)" newName="$_m_DecimalParamMethod" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestNoGcWrap:_m_DecimalParamMethod(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestNoGcWrap:$_m_DecimalParamMethod(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestNoGcWrap::_g_get_a1(nint)" newName="$_g_get_a1" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestNoGcWrap:_g_get_a1(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestNoGcWrap:$_g_get_a1(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestNoGcWrap::_g_get_a2(nint)" newName="$_g_get_a2" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestNoGcWrap:_g_get_a2(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestNoGcWrap:$_g_get_a2(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestNoGcWrap::_g_get_a3(nint)" newName="$_g_get_a3" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestNoGcWrap:_g_get_a3(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestNoGcWrap:$_g_get_a3(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestNoGcWrap::_g_get_a4(nint)" newName="$_g_get_a4" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestNoGcWrap:_g_get_a4(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestNoGcWrap:$_g_get_a4(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestNoGcWrap::_g_get_a5(nint)" newName="$_g_get_a5" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestNoGcWrap:_g_get_a5(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestNoGcWrap:$_g_get_a5(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestNoGcWrap::_s_set_a1(nint)" newName="$_s_set_a1" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestNoGcWrap:_s_set_a1(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestNoGcWrap:$_s_set_a1(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestNoGcWrap::_s_set_a2(nint)" newName="$_s_set_a2" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestNoGcWrap:_s_set_a2(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestNoGcWrap:$_s_set_a2(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestNoGcWrap::_s_set_a3(nint)" newName="$_s_set_a3" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestNoGcWrap:_s_set_a3(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestNoGcWrap:$_s_set_a3(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestNoGcWrap::_s_set_a4(nint)" newName="$_s_set_a4" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestNoGcWrap:_s_set_a4(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestNoGcWrap:$_s_set_a4(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestNoGcWrap::_s_set_a5(nint)" newName="$_s_set_a5" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestNoGcWrap:_s_set_a5(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestNoGcWrap:$_s_set_a5(IntPtr)" />
    </type>
    <type fullName="XLua.CSObjectWrap.XLuaTestPeddingWrap" newFullName="$XLua.CSObjectWrap.$XLuaTestPeddingWrap" status="Renamed">
      <method signature="void XLua.CSObjectWrap.XLuaTestPeddingWrap::__Register(nint)" newName="$__Register408" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestPeddingWrap:__Register(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestPeddingWrap:$__Register408(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestPeddingWrap::__CreateInstance(nint)" newName="$__CreateInstance409" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestPeddingWrap:__CreateInstance(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestPeddingWrap:$__CreateInstance409(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestPeddingWrap::_g_get_c(nint)" newName="$_g_get_c410" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestPeddingWrap:_g_get_c(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestPeddingWrap:$_g_get_c410(IntPtr)" />
      <method signature="int XLua.CSObjectWrap.XLuaTestPeddingWrap::_s_set_c(nint)" newName="$_s_set_c411" oldStackTraceSignature="XLua.CSObjectWrap.XLuaTestPeddingWrap:_s_set_c(IntPtr)" newStackTraceSignature="$XLua.CSObjectWrap.$XLuaTestPeddingWrap:$_s_set_c411(IntPtr)" />
    </type>
    <type fullName="XLua.DelegateBridge" newFullName="$XLua.$DelegateBridge" status="Renamed">
      <field signature="[Assembly-CSharp]XLua.DelegateBridge[] DelegateBridgeList" newName="$DelegateBridgeList" />
      <field signature="bool Gen_Flag" newName="$Gen_Flag" />
      <method signature="void XLua.DelegateBridge::__Gen_Delegate_Imp0([Assembly-CSharp]XLua.DelegateBridge)" newName="$__Gen_Delegate_Imp0" oldStackTraceSignature="XLua.DelegateBridge:__Gen_Delegate_Imp0()" newStackTraceSignature="$XLua.$DelegateBridge:$__Gen_Delegate_Imp0()" />
      <method signature="double XLua.DelegateBridge::__Gen_Delegate_Imp1([Assembly-CSharp]XLua.DelegateBridge, double, double)" newName="$__Gen_Delegate_Imp1" oldStackTraceSignature="XLua.DelegateBridge:__Gen_Delegate_Imp1(Double, Double)" newStackTraceSignature="$XLua.$DelegateBridge:$__Gen_Delegate_Imp1(Double, Double)" />
      <method signature="void XLua.DelegateBridge::__Gen_Delegate_Imp2([Assembly-CSharp]XLua.DelegateBridge, string)" newName="$__Gen_Delegate_Imp2" oldStackTraceSignature="XLua.DelegateBridge:__Gen_Delegate_Imp2(String)" newStackTraceSignature="$XLua.$DelegateBridge:$__Gen_Delegate_Imp2(String)" />
      <method signature="void XLua.DelegateBridge::__Gen_Delegate_Imp3([Assembly-CSharp]XLua.DelegateBridge, double)" newName="$__Gen_Delegate_Imp3" oldStackTraceSignature="XLua.DelegateBridge:__Gen_Delegate_Imp3(Double)" newStackTraceSignature="$XLua.$DelegateBridge:$__Gen_Delegate_Imp3(Double)" />
      <method signature="int XLua.DelegateBridge::__Gen_Delegate_Imp4([Assembly-CSharp]XLua.DelegateBridge, int)" newName="$__Gen_Delegate_Imp4" oldStackTraceSignature="XLua.DelegateBridge:__Gen_Delegate_Imp4(Int32)" newStackTraceSignature="$XLua.$DelegateBridge:$__Gen_Delegate_Imp4(Int32)" />
      <method signature="[UnityEngine.CoreModule]UnityEngine.Vector3 XLua.DelegateBridge::__Gen_Delegate_Imp5([Assembly-CSharp]XLua.DelegateBridge, [UnityEngine.CoreModule]UnityEngine.Vector3)" newName="$__Gen_Delegate_Imp5" oldStackTraceSignature="XLua.DelegateBridge:__Gen_Delegate_Imp5(Vector3)" newStackTraceSignature="$XLua.$DelegateBridge:$__Gen_Delegate_Imp5(Vector3)" />
      <method signature="[Assembly-CSharp]XLuaTest.MyStruct XLua.DelegateBridge::__Gen_Delegate_Imp6([Assembly-CSharp]XLua.DelegateBridge, [Assembly-CSharp]XLuaTest.MyStruct)" newName="$__Gen_Delegate_Imp6" oldStackTraceSignature="XLua.DelegateBridge:__Gen_Delegate_Imp6(MyStruct)" newStackTraceSignature="$XLua.$DelegateBridge:$__Gen_Delegate_Imp6($MyStruct)" />
      <method signature="[Assembly-CSharp]XLuaTest.MyEnum XLua.DelegateBridge::__Gen_Delegate_Imp7([Assembly-CSharp]XLua.DelegateBridge, [Assembly-CSharp]XLuaTest.MyEnum)" newName="$__Gen_Delegate_Imp7" oldStackTraceSignature="XLua.DelegateBridge:__Gen_Delegate_Imp7(MyEnum)" newStackTraceSignature="$XLua.$DelegateBridge:$__Gen_Delegate_Imp7($MyEnum)" />
      <method signature="System.Decimal XLua.DelegateBridge::__Gen_Delegate_Imp8([Assembly-CSharp]XLua.DelegateBridge, System.Decimal)" newName="$__Gen_Delegate_Imp8" oldStackTraceSignature="XLua.DelegateBridge:__Gen_Delegate_Imp8(Decimal)" newStackTraceSignature="$XLua.$DelegateBridge:$__Gen_Delegate_Imp8(Decimal)" />
      <method signature="void XLua.DelegateBridge::__Gen_Delegate_Imp9([Assembly-CSharp]XLua.DelegateBridge, System.Array)" newName="$__Gen_Delegate_Imp9" oldStackTraceSignature="XLua.DelegateBridge:__Gen_Delegate_Imp9(Array)" newStackTraceSignature="$XLua.$DelegateBridge:$__Gen_Delegate_Imp9(Array)" />
      <method signature="void XLua.DelegateBridge::__Gen_Delegate_Imp10([Assembly-CSharp]XLua.DelegateBridge, bool)" newName="$__Gen_Delegate_Imp10" oldStackTraceSignature="XLua.DelegateBridge:__Gen_Delegate_Imp10(Boolean)" newStackTraceSignature="$XLua.$DelegateBridge:$__Gen_Delegate_Imp10(Boolean)" />
      <method signature="int XLua.DelegateBridge::__Gen_Delegate_Imp11([Assembly-CSharp]XLua.DelegateBridge, int, string, [Assembly-CSharp]Tutorial.CSCallLua/DClass&amp;)" newName="$__Gen_Delegate_Imp11" oldStackTraceSignature="XLua.DelegateBridge:__Gen_Delegate_Imp11(Int32, String, DClass&amp;)" newStackTraceSignature="$XLua.$DelegateBridge:$__Gen_Delegate_Imp11(Int32, String, $DClass&amp;)" />
      <method signature="System.Action XLua.DelegateBridge::__Gen_Delegate_Imp12([Assembly-CSharp]XLua.DelegateBridge)" newName="$__Gen_Delegate_Imp12" oldStackTraceSignature="XLua.DelegateBridge:__Gen_Delegate_Imp12()" newStackTraceSignature="$XLua.$DelegateBridge:$__Gen_Delegate_Imp12()" />
      <method signature="[Assembly-CSharp]XLuaTest.InvokeLua/ICalc XLua.DelegateBridge::__Gen_Delegate_Imp13([Assembly-CSharp]XLua.DelegateBridge, int, string[])" newName="$__Gen_Delegate_Imp13" oldStackTraceSignature="XLua.DelegateBridge:__Gen_Delegate_Imp13(Int32, String[])" newStackTraceSignature="$XLua.$DelegateBridge:$__Gen_Delegate_Imp13(Int32, String[])" />
      <method signature="void XLua.DelegateBridge::__Gen_Delegate_Imp14([Assembly-CSharp]XLua.DelegateBridge, object)" newName="$__Gen_Delegate_Imp14" oldStackTraceSignature="XLua.DelegateBridge:__Gen_Delegate_Imp14(Object)" newStackTraceSignature="$XLua.$DelegateBridge:$__Gen_Delegate_Imp14(Object)" />
      <method signature="int XLua.DelegateBridge::__Gen_Delegate_Imp15([Assembly-CSharp]XLua.DelegateBridge, object, int, int)" newName="$__Gen_Delegate_Imp15" oldStackTraceSignature="XLua.DelegateBridge:__Gen_Delegate_Imp15(Object, Int32, Int32)" newStackTraceSignature="$XLua.$DelegateBridge:$__Gen_Delegate_Imp15(Object, Int32, Int32)" />
      <method signature="[UnityEngine.CoreModule]UnityEngine.Vector3 XLua.DelegateBridge::__Gen_Delegate_Imp16([Assembly-CSharp]XLua.DelegateBridge, object, [UnityEngine.CoreModule]UnityEngine.Vector3, [UnityEngine.CoreModule]UnityEngine.Vector3)" newName="$__Gen_Delegate_Imp16" oldStackTraceSignature="XLua.DelegateBridge:__Gen_Delegate_Imp16(Object, Vector3, Vector3)" newStackTraceSignature="$XLua.$DelegateBridge:$__Gen_Delegate_Imp16(Object, Vector3, Vector3)" />
      <method signature="int XLua.DelegateBridge::__Gen_Delegate_Imp17([Assembly-CSharp]XLua.DelegateBridge, object, int, double&amp;, string&amp;)" newName="$__Gen_Delegate_Imp17" oldStackTraceSignature="XLua.DelegateBridge:__Gen_Delegate_Imp17(Object, Int32, Double&amp;, String&amp;)" newStackTraceSignature="$XLua.$DelegateBridge:$__Gen_Delegate_Imp17(Object, Int32, Double&amp;, String&amp;)" />
      <method signature="int XLua.DelegateBridge::__Gen_Delegate_Imp18([Assembly-CSharp]XLua.DelegateBridge, object, int, double&amp;, string&amp;, object)" newName="$__Gen_Delegate_Imp18" oldStackTraceSignature="XLua.DelegateBridge:__Gen_Delegate_Imp18(Object, Int32, Double&amp;, String&amp;, Object)" newStackTraceSignature="$XLua.$DelegateBridge:$__Gen_Delegate_Imp18(Object, Int32, Double&amp;, String&amp;, Object)" />
      <method signature="void XLua.DelegateBridge::__Gen_Delegate_Imp19([Assembly-CSharp]XLua.DelegateBridge, object, int)" newName="$__Gen_Delegate_Imp19" oldStackTraceSignature="XLua.DelegateBridge:__Gen_Delegate_Imp19(Object, Int32)" newStackTraceSignature="$XLua.$DelegateBridge:$__Gen_Delegate_Imp19(Object, Int32)" />
      <method signature="string XLua.DelegateBridge::__Gen_Delegate_Imp20([Assembly-CSharp]XLua.DelegateBridge, object)" newName="$__Gen_Delegate_Imp20" oldStackTraceSignature="XLua.DelegateBridge:__Gen_Delegate_Imp20(Object)" newStackTraceSignature="$XLua.$DelegateBridge:$__Gen_Delegate_Imp20(Object)" />
      <method signature="[UnityEngine.CoreModule]UnityEngine.GameObject XLua.DelegateBridge::__Gen_Delegate_Imp21([Assembly-CSharp]XLua.DelegateBridge, [Assembly-CSharp]XLuaTest.StructTest, int, object)" newName="$__Gen_Delegate_Imp21" oldStackTraceSignature="XLua.DelegateBridge:__Gen_Delegate_Imp21(StructTest, Int32, Object)" newStackTraceSignature="$XLua.$DelegateBridge:$__Gen_Delegate_Imp21($StructTest, Int32, Object)" />
      <method signature="string XLua.DelegateBridge::__Gen_Delegate_Imp22([Assembly-CSharp]XLua.DelegateBridge, [Assembly-CSharp]XLuaTest.StructTest)" newName="$__Gen_Delegate_Imp22" oldStackTraceSignature="XLua.DelegateBridge:__Gen_Delegate_Imp22(StructTest)" newStackTraceSignature="$XLua.$DelegateBridge:$__Gen_Delegate_Imp22($StructTest)" />
      <method signature="void XLua.DelegateBridge::__Gen_Delegate_Imp23([Assembly-CSharp]XLua.DelegateBridge, [Assembly-CSharp]XLuaTest.StructTest, object)" newName="$__Gen_Delegate_Imp23" oldStackTraceSignature="XLua.DelegateBridge:__Gen_Delegate_Imp23(StructTest, Object)" newStackTraceSignature="$XLua.$DelegateBridge:$__Gen_Delegate_Imp23($StructTest, Object)" />
      <method signature="int XLua.DelegateBridge::__Gen_Delegate_Imp24([Assembly-CSharp]XLua.DelegateBridge, object)" newName="$__Gen_Delegate_Imp24" oldStackTraceSignature="XLua.DelegateBridge:__Gen_Delegate_Imp24(Object)" newStackTraceSignature="$XLua.$DelegateBridge:$__Gen_Delegate_Imp24(Object)" />
      <method signature="void XLua.DelegateBridge::__Gen_Delegate_Imp25([Assembly-CSharp]XLua.DelegateBridge, object, object)" newName="$__Gen_Delegate_Imp25" oldStackTraceSignature="XLua.DelegateBridge:__Gen_Delegate_Imp25(Object, Object)" newStackTraceSignature="$XLua.$DelegateBridge:$__Gen_Delegate_Imp25(Object, Object)" />
      <method signature="int XLua.DelegateBridge::__Gen_Delegate_Imp26([Assembly-CSharp]XLua.DelegateBridge, object, object)" newName="$__Gen_Delegate_Imp26" oldStackTraceSignature="XLua.DelegateBridge:__Gen_Delegate_Imp26(Object, Object)" newStackTraceSignature="$XLua.$DelegateBridge:$__Gen_Delegate_Imp26(Object, Object)" />
      <method signature="void XLua.DelegateBridge::__Gen_Delegate_Imp27([Assembly-CSharp]XLua.DelegateBridge, object, object, int)" newName="$__Gen_Delegate_Imp27" oldStackTraceSignature="XLua.DelegateBridge:__Gen_Delegate_Imp27(Object, Object, Int32)" newStackTraceSignature="$XLua.$DelegateBridge:$__Gen_Delegate_Imp27(Object, Object, Int32)" />
      <method signature="void XLua.DelegateBridge::__Gen_Delegate_Imp28([Assembly-CSharp]XLua.DelegateBridge, int, int)" newName="$__Gen_Delegate_Imp28" oldStackTraceSignature="XLua.DelegateBridge:__Gen_Delegate_Imp28(Int32, Int32)" newStackTraceSignature="$XLua.$DelegateBridge:$__Gen_Delegate_Imp28(Int32, Int32)" />
      <method signature="void XLua.DelegateBridge::__Gen_Delegate_Imp29([Assembly-CSharp]XLua.DelegateBridge, object, int, int)" newName="$__Gen_Delegate_Imp29" oldStackTraceSignature="XLua.DelegateBridge:__Gen_Delegate_Imp29(Object, Int32, Int32)" newStackTraceSignature="$XLua.$DelegateBridge:$__Gen_Delegate_Imp29(Object, Int32, Int32)" />
      <method signature="System.Delegate XLua.DelegateBridge::GetDelegateByType([Assembly-CSharp]XLua.DelegateBridge, System.Type)" newName="$GetDelegateByType" oldStackTraceSignature="XLua.DelegateBridge:GetDelegateByType(Type)" newStackTraceSignature="$XLua.$DelegateBridge:$GetDelegateByType(Type)" />
      <method signature="void XLua.DelegateBridge::PCall([Assembly-CSharp]XLua.DelegateBridge, nint, int, int, int)" newName="$PCall" oldStackTraceSignature="XLua.DelegateBridge:PCall(IntPtr, Int32, Int32, Int32)" newStackTraceSignature="$XLua.$DelegateBridge:$PCall(IntPtr, Int32, Int32, Int32)" />
      <method signature="void XLua.DelegateBridge::Action([Assembly-CSharp]XLua.DelegateBridge)" newName="$Action" oldStackTraceSignature="XLua.DelegateBridge:Action()" newStackTraceSignature="$XLua.$DelegateBridge:$Action()" />
      <method signature="void XLua.DelegateBridge::Action`1([Assembly-CSharp]XLua.DelegateBridge, !!0)" newName="$Action1" oldStackTraceSignature="XLua.DelegateBridge:Action(T1)" newStackTraceSignature="$XLua.$DelegateBridge:$Action1(T1)" />
      <method signature="void XLua.DelegateBridge::Action`2([Assembly-CSharp]XLua.DelegateBridge, !!0, !!1)" newName="$Action2" oldStackTraceSignature="XLua.DelegateBridge:Action(T1, T2)" newStackTraceSignature="$XLua.$DelegateBridge:$Action2(T1, T2)" />
      <method signature="void XLua.DelegateBridge::Action`3([Assembly-CSharp]XLua.DelegateBridge, !!0, !!1, !!2)" newName="$Action3" oldStackTraceSignature="XLua.DelegateBridge:Action(T1, T2, T3)" newStackTraceSignature="$XLua.$DelegateBridge:$Action3(T1, T2, T3)" />
      <method signature="void XLua.DelegateBridge::Action`4([Assembly-CSharp]XLua.DelegateBridge, !!0, !!1, !!2, !!3)" newName="$Action4" oldStackTraceSignature="XLua.DelegateBridge:Action(T1, T2, T3, T4)" newStackTraceSignature="$XLua.$DelegateBridge:$Action4(T1, T2, T3, T4)" />
      <method signature="!!0 XLua.DelegateBridge::Func`1([Assembly-CSharp]XLua.DelegateBridge)" newName="$Func" oldStackTraceSignature="XLua.DelegateBridge:Func()" newStackTraceSignature="$XLua.$DelegateBridge:$Func()" />
      <method signature="!!1 XLua.DelegateBridge::Func`2([Assembly-CSharp]XLua.DelegateBridge, !!0)" newName="$Func5" oldStackTraceSignature="XLua.DelegateBridge:Func(T1)" newStackTraceSignature="$XLua.$DelegateBridge:$Func5(T1)" />
      <method signature="!!2 XLua.DelegateBridge::Func`3([Assembly-CSharp]XLua.DelegateBridge, !!0, !!1)" newName="$Func6" oldStackTraceSignature="XLua.DelegateBridge:Func(T1, T2)" newStackTraceSignature="$XLua.$DelegateBridge:$Func6(T1, T2)" />
      <method signature="!!3 XLua.DelegateBridge::Func`4([Assembly-CSharp]XLua.DelegateBridge, !!0, !!1, !!2)" newName="$Func7" oldStackTraceSignature="XLua.DelegateBridge:Func(T1, T2, T3)" newStackTraceSignature="$XLua.$DelegateBridge:$Func7(T1, T2, T3)" />
      <method signature="!!4 XLua.DelegateBridge::Func`5([Assembly-CSharp]XLua.DelegateBridge, !!0, !!1, !!2, !!3)" newName="$Func8" oldStackTraceSignature="XLua.DelegateBridge:Func(T1, T2, T3, T4)" newStackTraceSignature="$XLua.$DelegateBridge:$Func8(T1, T2, T3, T4)" />
    </type>
    <type fullName="XLua.DelegateBridgeBase" newFullName="$XLua.$DelegateBridgeBase" status="Renamed">
      <field signature="System.Type firstKey" newName="$firstKey" />
      <field signature="System.Delegate firstValue" newName="$firstValue" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;System.Type,System.Delegate&gt; bindTo" newName="$bindTo" />
      <field signature="int errorFuncRef" newName="$errorFuncRef" />
      <method signature="bool XLua.DelegateBridgeBase::TryGetDelegate([Assembly-CSharp]XLua.DelegateBridgeBase, System.Type, System.Delegate&amp;)" newName="$TryGetDelegate" oldStackTraceSignature="XLua.DelegateBridgeBase:TryGetDelegate(Type, Delegate&amp;)" newStackTraceSignature="$XLua.$DelegateBridgeBase:$TryGetDelegate(Type, Delegate&amp;)" />
      <method signature="void XLua.DelegateBridgeBase::AddDelegate([Assembly-CSharp]XLua.DelegateBridgeBase, System.Type, System.Delegate)" newName="$AddDelegate" oldStackTraceSignature="XLua.DelegateBridgeBase:AddDelegate(Type, Delegate)" newStackTraceSignature="$XLua.$DelegateBridgeBase:$AddDelegate(Type, Delegate)" />
      <method signature="System.Delegate XLua.DelegateBridgeBase::GetDelegateByType([Assembly-CSharp]XLua.DelegateBridgeBase, System.Type)" newName="$GetDelegateByType" oldStackTraceSignature="XLua.DelegateBridgeBase:GetDelegateByType(Type)" newStackTraceSignature="$XLua.$DelegateBridgeBase:$GetDelegateByType(Type)" />
    </type>
    <type fullName="XLua.DoNotGenAttribute" newFullName="$XLua.$DoNotGenAttribute" status="Renamed" />
    <type fullName="XLua.GCOptimizeAttribute" newFullName="$XLua.$GCOptimizeAttribute" status="Renamed">
      <field signature="[Assembly-CSharp]XLua.OptimizeFlag flag" newName="$flag12" />
      <property signature="[Assembly-CSharp]XLua.OptimizeFlag Flag" newName="$Flag" />
      <method signature="[Assembly-CSharp]XLua.OptimizeFlag XLua.GCOptimizeAttribute::get_Flag([Assembly-CSharp]XLua.GCOptimizeAttribute)" newName="$get_Flag84" oldStackTraceSignature="XLua.GCOptimizeAttribute:get_Flag()" newStackTraceSignature="$XLua.$GCOptimizeAttribute:$get_Flag84()" />
    </type>
    <type fullName="XLua.GenFlag" newFullName="$XLua.$GenFlag" status="Renamed">
      <field signature="[Assembly-CSharp]XLua.GenFlag No" newName="$No" />
      <field signature="[Assembly-CSharp]XLua.GenFlag GCOptimize" newName="$GCOptimize" />
    </type>
    <type fullName="XLua.HotfixAttribute" newFullName="$XLua.$HotfixAttribute" status="Renamed">
      <field signature="[Assembly-CSharp]XLua.HotfixFlag flag" newName="$flag13" />
      <property signature="[Assembly-CSharp]XLua.HotfixFlag Flag" newName="$Flag" />
      <method signature="[Assembly-CSharp]XLua.HotfixFlag XLua.HotfixAttribute::get_Flag([Assembly-CSharp]XLua.HotfixAttribute)" newName="$get_Flag85" oldStackTraceSignature="XLua.HotfixAttribute:get_Flag()" newStackTraceSignature="$XLua.$HotfixAttribute:$get_Flag85()" />
    </type>
    <type fullName="XLua.HotfixDelegateAttribute" newFullName="$XLua.$HotfixDelegateAttribute" status="Renamed" />
    <type fullName="XLua.HotfixDelegateBridge" newFullName="$XLua.$HotfixDelegateBridge" status="Renamed">
      <method signature="bool XLua.HotfixDelegateBridge::xlua_get_hotfix_flag(int)" newName="$xlua_get_hotfix_flag" oldStackTraceSignature="XLua.HotfixDelegateBridge:xlua_get_hotfix_flag(Int32)" newStackTraceSignature="$XLua.$HotfixDelegateBridge:$xlua_get_hotfix_flag(Int32)" />
      <method signature="[Assembly-CSharp]XLua.DelegateBridge XLua.HotfixDelegateBridge::Get(int)" newName="$Get83" oldStackTraceSignature="XLua.HotfixDelegateBridge:Get(Int32)" newStackTraceSignature="$XLua.$HotfixDelegateBridge:$Get83(Int32)" />
      <method signature="void XLua.HotfixDelegateBridge::Set(int, [Assembly-CSharp]XLua.DelegateBridge)" newName="$Set" oldStackTraceSignature="XLua.HotfixDelegateBridge:Set(Int32, DelegateBridge)" newStackTraceSignature="$XLua.$HotfixDelegateBridge:$Set(Int32, $DelegateBridge)" />
    </type>
    <type fullName="XLua.HotfixFlag" newFullName="$XLua.$HotfixFlag" status="Renamed">
      <field signature="[Assembly-CSharp]XLua.HotfixFlag Stateless" newName="$Stateless" />
      <field signature="[Assembly-CSharp]XLua.HotfixFlag Stateful" newName="$Stateful" />
      <field signature="[Assembly-CSharp]XLua.HotfixFlag ValueTypeBoxing" newName="$ValueTypeBoxing" />
      <field signature="[Assembly-CSharp]XLua.HotfixFlag IgnoreProperty" newName="$IgnoreProperty" />
      <field signature="[Assembly-CSharp]XLua.HotfixFlag IgnoreNotPublic" newName="$IgnoreNotPublic" />
      <field signature="[Assembly-CSharp]XLua.HotfixFlag Inline" newName="$Inline" />
      <field signature="[Assembly-CSharp]XLua.HotfixFlag IntKey" newName="$IntKey" />
      <field signature="[Assembly-CSharp]XLua.HotfixFlag AdaptByDelegate" newName="$AdaptByDelegate" />
      <field signature="[Assembly-CSharp]XLua.HotfixFlag IgnoreCompilerGenerated" newName="$IgnoreCompilerGenerated" />
      <field signature="[Assembly-CSharp]XLua.HotfixFlag NoBaseProxy" newName="$NoBaseProxy" />
    </type>
    <type fullName="XLua.InternalGlobals" newFullName="$XLua.$InternalGlobals" status="Renamed">
      <field signature="byte[] strBuff" newName="$strBuff" />
      <field signature="[Assembly-CSharp]XLua.InternalGlobals/TryArrayGet genTryArrayGetPtr" newName="$genTryArrayGetPtr" />
      <field signature="[Assembly-CSharp]XLua.InternalGlobals/TryArraySet genTryArraySetPtr" newName="$genTryArraySetPtr" />
      <field signature="[Assembly-CSharp]XLua.ObjectTranslatorPool objectTranslatorPool" newName="$objectTranslatorPool" />
      <field signature="int LUA_REGISTRYINDEX" newName="$LUA_REGISTRYINDEX" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;string,string&gt; supportOp" newName="$supportOp" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;System.Type,System.Collections.Generic.IEnumerable`1&lt;System.Reflection.MethodInfo&gt;&gt; extensionMethodMap" newName="$extensionMethodMap" />
      <field signature="[Assembly-CSharp]XLua.LuaDLL.lua_CSFunction LazyReflectionWrap" newName="$LazyReflectionWrap" />
    </type>
    <type fullName="XLua.InternalGlobals/TryArrayGet" newFullName="$XLua.$InternalGlobals/$TryArrayGet" status="Renamed" />
    <type fullName="XLua.InternalGlobals/TryArraySet" newFullName="$XLua.$InternalGlobals/$TryArraySet" status="Renamed" />
    <type fullName="XLua.LazyMemberTypes" newFullName="$XLua.$LazyMemberTypes" status="Renamed">
      <field signature="[Assembly-CSharp]XLua.LazyMemberTypes Method" newName="$Method" />
      <field signature="[Assembly-CSharp]XLua.LazyMemberTypes FieldGet" newName="$FieldGet" />
      <field signature="[Assembly-CSharp]XLua.LazyMemberTypes FieldSet" newName="$FieldSet" />
      <field signature="[Assembly-CSharp]XLua.LazyMemberTypes PropertyGet" newName="$PropertyGet" />
      <field signature="[Assembly-CSharp]XLua.LazyMemberTypes PropertySet" newName="$PropertySet" />
      <field signature="[Assembly-CSharp]XLua.LazyMemberTypes Event" newName="$Event" />
    </type>
    <type fullName="XLua.LuaBase" newFullName="$XLua.$LuaBase" status="Renamed">
      <field signature="bool disposed" newName="$disposed" />
      <field signature="int luaReference" newName="$luaReference" />
      <field signature="[Assembly-CSharp]XLua.LuaEnv luaEnv" newName="$luaEnv14" />
      <method signature="void XLua.LuaBase::Dispose([Assembly-CSharp]XLua.LuaBase, bool)" newName="$Dispose" oldStackTraceSignature="XLua.LuaBase:Dispose(Boolean)" newStackTraceSignature="$XLua.$LuaBase:$Dispose(Boolean)" />
      <method signature="void XLua.LuaBase::push([Assembly-CSharp]XLua.LuaBase, nint)" newName="$push" oldStackTraceSignature="XLua.LuaBase:push(IntPtr)" newStackTraceSignature="$XLua.$LuaBase:$push(IntPtr)" />
    </type>
    <type fullName="XLua.LuaCallCSharpAttribute" newFullName="$XLua.$LuaCallCSharpAttribute" status="Renamed">
      <field signature="[Assembly-CSharp]XLua.GenFlag flag" newName="$flag" />
      <property signature="[Assembly-CSharp]XLua.GenFlag Flag" newName="$Flag" />
      <method signature="[Assembly-CSharp]XLua.GenFlag XLua.LuaCallCSharpAttribute::get_Flag([Assembly-CSharp]XLua.LuaCallCSharpAttribute)" newName="$get_Flag" oldStackTraceSignature="XLua.LuaCallCSharpAttribute:get_Flag()" newStackTraceSignature="$XLua.$LuaCallCSharpAttribute:$get_Flag()" />
    </type>
    <type fullName="XLua.LuaDLL.Lua" newFullName="$XLua.LuaDLL.$Lua" status="Renamed">
      <field signature="string LUADLL" newName="$LUADLL" />
      <method signature="nint XLua.LuaDLL.Lua::lua_tothread(nint, int)" newName="$lua_tothread" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_tothread(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_tothread(IntPtr, Int32)" />
      <method signature="int XLua.LuaDLL.Lua::xlua_get_lib_version()" newName="$xlua_get_lib_version" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_get_lib_version()" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_get_lib_version()" />
      <method signature="int XLua.LuaDLL.Lua::lua_gc(nint, [Assembly-CSharp]XLua.LuaGCOptions, int)" newName="$lua_gc" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_gc(IntPtr, LuaGCOptions, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_gc(IntPtr, $LuaGCOptions, Int32)" />
      <method signature="nint XLua.LuaDLL.Lua::lua_getupvalue(nint, int, int)" newName="$lua_getupvalue" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_getupvalue(IntPtr, Int32, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_getupvalue(IntPtr, Int32, Int32)" />
      <method signature="nint XLua.LuaDLL.Lua::lua_setupvalue(nint, int, int)" newName="$lua_setupvalue" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_setupvalue(IntPtr, Int32, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_setupvalue(IntPtr, Int32, Int32)" />
      <method signature="int XLua.LuaDLL.Lua::lua_pushthread(nint)" newName="$lua_pushthread" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_pushthread(IntPtr)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_pushthread(IntPtr)" />
      <method signature="bool XLua.LuaDLL.Lua::lua_isfunction(nint, int)" newName="$lua_isfunction" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_isfunction(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_isfunction(IntPtr, Int32)" />
      <method signature="bool XLua.LuaDLL.Lua::lua_islightuserdata(nint, int)" newName="$lua_islightuserdata" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_islightuserdata(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_islightuserdata(IntPtr, Int32)" />
      <method signature="bool XLua.LuaDLL.Lua::lua_istable(nint, int)" newName="$lua_istable" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_istable(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_istable(IntPtr, Int32)" />
      <method signature="bool XLua.LuaDLL.Lua::lua_isthread(nint, int)" newName="$lua_isthread" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_isthread(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_isthread(IntPtr, Int32)" />
      <method signature="int XLua.LuaDLL.Lua::luaL_error(nint, string)" newName="$luaL_error" oldStackTraceSignature="XLua.LuaDLL.Lua:luaL_error(IntPtr, String)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$luaL_error(IntPtr, String)" />
      <method signature="int XLua.LuaDLL.Lua::lua_setfenv(nint, int)" newName="$lua_setfenv" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_setfenv(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_setfenv(IntPtr, Int32)" />
      <method signature="nint XLua.LuaDLL.Lua::luaL_newstate()" newName="$luaL_newstate" oldStackTraceSignature="XLua.LuaDLL.Lua:luaL_newstate()" newStackTraceSignature="$XLua.LuaDLL.$Lua:$luaL_newstate()" />
      <method signature="void XLua.LuaDLL.Lua::lua_close(nint)" newName="$lua_close" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_close(IntPtr)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_close(IntPtr)" />
      <method signature="void XLua.LuaDLL.Lua::luaopen_xlua(nint)" newName="$luaopen_xlua" oldStackTraceSignature="XLua.LuaDLL.Lua:luaopen_xlua(IntPtr)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$luaopen_xlua(IntPtr)" />
      <method signature="void XLua.LuaDLL.Lua::luaL_openlibs(nint)" newName="$luaL_openlibs" oldStackTraceSignature="XLua.LuaDLL.Lua:luaL_openlibs(IntPtr)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$luaL_openlibs(IntPtr)" />
      <method signature="uint XLua.LuaDLL.Lua::xlua_objlen(nint, int)" newName="$xlua_objlen" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_objlen(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_objlen(IntPtr, Int32)" />
      <method signature="void XLua.LuaDLL.Lua::lua_createtable(nint, int, int)" newName="$lua_createtable" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_createtable(IntPtr, Int32, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_createtable(IntPtr, Int32, Int32)" />
      <method signature="void XLua.LuaDLL.Lua::lua_newtable(nint)" newName="$lua_newtable" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_newtable(IntPtr)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_newtable(IntPtr)" />
      <method signature="int XLua.LuaDLL.Lua::xlua_getglobal(nint, string)" newName="$xlua_getglobal" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_getglobal(IntPtr, String)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_getglobal(IntPtr, String)" />
      <method signature="int XLua.LuaDLL.Lua::xlua_setglobal(nint, string)" newName="$xlua_setglobal" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_setglobal(IntPtr, String)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_setglobal(IntPtr, String)" />
      <method signature="void XLua.LuaDLL.Lua::xlua_getloaders(nint)" newName="$xlua_getloaders" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_getloaders(IntPtr)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_getloaders(IntPtr)" />
      <method signature="void XLua.LuaDLL.Lua::lua_settop(nint, int)" newName="$lua_settop" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_settop(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_settop(IntPtr, Int32)" />
      <method signature="void XLua.LuaDLL.Lua::lua_pop(nint, int)" newName="$lua_pop" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_pop(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_pop(IntPtr, Int32)" />
      <method signature="void XLua.LuaDLL.Lua::lua_insert(nint, int)" newName="$lua_insert" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_insert(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_insert(IntPtr, Int32)" />
      <method signature="void XLua.LuaDLL.Lua::lua_remove(nint, int)" newName="$lua_remove" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_remove(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_remove(IntPtr, Int32)" />
      <method signature="int XLua.LuaDLL.Lua::lua_rawget(nint, int)" newName="$lua_rawget" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_rawget(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_rawget(IntPtr, Int32)" />
      <method signature="void XLua.LuaDLL.Lua::lua_rawset(nint, int)" newName="$lua_rawset" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_rawset(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_rawset(IntPtr, Int32)" />
      <method signature="int XLua.LuaDLL.Lua::lua_setmetatable(nint, int)" newName="$lua_setmetatable" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_setmetatable(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_setmetatable(IntPtr, Int32)" />
      <method signature="int XLua.LuaDLL.Lua::lua_rawequal(nint, int, int)" newName="$lua_rawequal" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_rawequal(IntPtr, Int32, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_rawequal(IntPtr, Int32, Int32)" />
      <method signature="void XLua.LuaDLL.Lua::lua_pushvalue(nint, int)" newName="$lua_pushvalue" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_pushvalue(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_pushvalue(IntPtr, Int32)" />
      <method signature="void XLua.LuaDLL.Lua::lua_pushcclosure(nint, nint, int)" newName="$lua_pushcclosure" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_pushcclosure(IntPtr, IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_pushcclosure(IntPtr, IntPtr, Int32)" />
      <method signature="void XLua.LuaDLL.Lua::lua_replace(nint, int)" newName="$lua_replace" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_replace(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_replace(IntPtr, Int32)" />
      <method signature="int XLua.LuaDLL.Lua::lua_gettop(nint)" newName="$lua_gettop" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_gettop(IntPtr)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_gettop(IntPtr)" />
      <method signature="[Assembly-CSharp]XLua.LuaTypes XLua.LuaDLL.Lua::lua_type(nint, int)" newName="$lua_type" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_type(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_type(IntPtr, Int32)" />
      <method signature="bool XLua.LuaDLL.Lua::lua_isnil(nint, int)" newName="$lua_isnil" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_isnil(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_isnil(IntPtr, Int32)" />
      <method signature="bool XLua.LuaDLL.Lua::lua_isnumber(nint, int)" newName="$lua_isnumber" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_isnumber(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_isnumber(IntPtr, Int32)" />
      <method signature="bool XLua.LuaDLL.Lua::lua_isboolean(nint, int)" newName="$lua_isboolean" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_isboolean(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_isboolean(IntPtr, Int32)" />
      <method signature="int XLua.LuaDLL.Lua::luaL_ref(nint, int)" newName="$luaL_ref" oldStackTraceSignature="XLua.LuaDLL.Lua:luaL_ref(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$luaL_ref(IntPtr, Int32)" />
      <method signature="int XLua.LuaDLL.Lua::luaL_ref(nint)" newName="$luaL_ref119" oldStackTraceSignature="XLua.LuaDLL.Lua:luaL_ref(IntPtr)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$luaL_ref119(IntPtr)" />
      <method signature="void XLua.LuaDLL.Lua::xlua_rawgeti(nint, int, long)" newName="$xlua_rawgeti" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_rawgeti(IntPtr, Int32, Int64)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_rawgeti(IntPtr, Int32, Int64)" />
      <method signature="void XLua.LuaDLL.Lua::xlua_rawseti(nint, int, long)" newName="$xlua_rawseti" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_rawseti(IntPtr, Int32, Int64)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_rawseti(IntPtr, Int32, Int64)" />
      <method signature="void XLua.LuaDLL.Lua::lua_getref(nint, int)" newName="$lua_getref" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_getref(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_getref(IntPtr, Int32)" />
      <method signature="int XLua.LuaDLL.Lua::pcall_prepare(nint, int, int)" newName="$pcall_prepare" oldStackTraceSignature="XLua.LuaDLL.Lua:pcall_prepare(IntPtr, Int32, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$pcall_prepare(IntPtr, Int32, Int32)" />
      <method signature="void XLua.LuaDLL.Lua::luaL_unref(nint, int, int)" newName="$luaL_unref" oldStackTraceSignature="XLua.LuaDLL.Lua:luaL_unref(IntPtr, Int32, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$luaL_unref(IntPtr, Int32, Int32)" />
      <method signature="void XLua.LuaDLL.Lua::lua_unref(nint, int)" newName="$lua_unref" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_unref(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_unref(IntPtr, Int32)" />
      <method signature="bool XLua.LuaDLL.Lua::lua_isstring(nint, int)" newName="$lua_isstring" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_isstring(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_isstring(IntPtr, Int32)" />
      <method signature="bool XLua.LuaDLL.Lua::lua_isinteger(nint, int)" newName="$lua_isinteger" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_isinteger(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_isinteger(IntPtr, Int32)" />
      <method signature="void XLua.LuaDLL.Lua::lua_pushnil(nint)" newName="$lua_pushnil" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_pushnil(IntPtr)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_pushnil(IntPtr)" />
      <method signature="void XLua.LuaDLL.Lua::lua_pushstdcallcfunction(nint, [Assembly-CSharp]XLua.LuaDLL.lua_CSFunction, int)" newName="$lua_pushstdcallcfunction" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_pushstdcallcfunction(IntPtr, lua_CSFunction, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_pushstdcallcfunction(IntPtr, $lua_CSFunction, Int32)" />
      <method signature="int XLua.LuaDLL.Lua::xlua_upvalueindex(int)" newName="$xlua_upvalueindex" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_upvalueindex(Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_upvalueindex(Int32)" />
      <method signature="int XLua.LuaDLL.Lua::lua_pcall(nint, int, int, int)" newName="$lua_pcall" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_pcall(IntPtr, Int32, Int32, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_pcall(IntPtr, Int32, Int32, Int32)" />
      <method signature="double XLua.LuaDLL.Lua::lua_tonumber(nint, int)" newName="$lua_tonumber" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_tonumber(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_tonumber(IntPtr, Int32)" />
      <method signature="int XLua.LuaDLL.Lua::xlua_tointeger(nint, int)" newName="$xlua_tointeger" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_tointeger(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_tointeger(IntPtr, Int32)" />
      <method signature="uint XLua.LuaDLL.Lua::xlua_touint(nint, int)" newName="$xlua_touint" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_touint(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_touint(IntPtr, Int32)" />
      <method signature="bool XLua.LuaDLL.Lua::lua_toboolean(nint, int)" newName="$lua_toboolean" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_toboolean(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_toboolean(IntPtr, Int32)" />
      <method signature="nint XLua.LuaDLL.Lua::lua_topointer(nint, int)" newName="$lua_topointer" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_topointer(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_topointer(IntPtr, Int32)" />
      <method signature="nint XLua.LuaDLL.Lua::lua_tolstring(nint, int, nint&amp;)" newName="$lua_tolstring" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_tolstring(IntPtr, Int32, IntPtr&amp;)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_tolstring(IntPtr, Int32, IntPtr&amp;)" />
      <method signature="string XLua.LuaDLL.Lua::lua_tostring(nint, int)" newName="$lua_tostring" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_tostring(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_tostring(IntPtr, Int32)" />
      <method signature="nint XLua.LuaDLL.Lua::lua_atpanic(nint, [Assembly-CSharp]XLua.LuaDLL.lua_CSFunction)" newName="$lua_atpanic" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_atpanic(IntPtr, lua_CSFunction)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_atpanic(IntPtr, $lua_CSFunction)" />
      <method signature="void XLua.LuaDLL.Lua::lua_pushnumber(nint, double)" newName="$lua_pushnumber" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_pushnumber(IntPtr, Double)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_pushnumber(IntPtr, Double)" />
      <method signature="void XLua.LuaDLL.Lua::lua_pushboolean(nint, bool)" newName="$lua_pushboolean" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_pushboolean(IntPtr, Boolean)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_pushboolean(IntPtr, Boolean)" />
      <method signature="void XLua.LuaDLL.Lua::xlua_pushinteger(nint, int)" newName="$xlua_pushinteger" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_pushinteger(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_pushinteger(IntPtr, Int32)" />
      <method signature="void XLua.LuaDLL.Lua::xlua_pushuint(nint, uint)" newName="$xlua_pushuint" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_pushuint(IntPtr, UInt32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_pushuint(IntPtr, UInt32)" />
      <method signature="void XLua.LuaDLL.Lua::lua_pushstring(nint, string)" newName="$lua_pushstring" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_pushstring(IntPtr, String)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_pushstring(IntPtr, String)" />
      <method signature="void XLua.LuaDLL.Lua::xlua_pushlstring(nint, byte[], int)" newName="$xlua_pushlstring" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_pushlstring(IntPtr, Byte[], Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_pushlstring(IntPtr, Byte[], Int32)" />
      <method signature="void XLua.LuaDLL.Lua::xlua_pushasciistring(nint, string)" newName="$xlua_pushasciistring" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_pushasciistring(IntPtr, String)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_pushasciistring(IntPtr, String)" />
      <method signature="void XLua.LuaDLL.Lua::lua_pushstring(nint, byte[])" newName="$lua_pushstring120" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_pushstring(IntPtr, Byte[])" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_pushstring120(IntPtr, Byte[])" />
      <method signature="byte[] XLua.LuaDLL.Lua::lua_tobytes(nint, int)" newName="$lua_tobytes" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_tobytes(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_tobytes(IntPtr, Int32)" />
      <method signature="int XLua.LuaDLL.Lua::luaL_newmetatable(nint, string)" newName="$luaL_newmetatable" oldStackTraceSignature="XLua.LuaDLL.Lua:luaL_newmetatable(IntPtr, String)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$luaL_newmetatable(IntPtr, String)" />
      <method signature="int XLua.LuaDLL.Lua::xlua_pgettable(nint, int)" newName="$xlua_pgettable" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_pgettable(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_pgettable(IntPtr, Int32)" />
      <method signature="int XLua.LuaDLL.Lua::xlua_psettable(nint, int)" newName="$xlua_psettable" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_psettable(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_psettable(IntPtr, Int32)" />
      <method signature="void XLua.LuaDLL.Lua::luaL_getmetatable(nint, string)" newName="$luaL_getmetatable" oldStackTraceSignature="XLua.LuaDLL.Lua:luaL_getmetatable(IntPtr, String)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$luaL_getmetatable(IntPtr, String)" />
      <method signature="int XLua.LuaDLL.Lua::xluaL_loadbuffer(nint, byte[], int, string)" newName="$xluaL_loadbuffer" oldStackTraceSignature="XLua.LuaDLL.Lua:xluaL_loadbuffer(IntPtr, Byte[], Int32, String)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xluaL_loadbuffer(IntPtr, Byte[], Int32, String)" />
      <method signature="int XLua.LuaDLL.Lua::luaL_loadbuffer(nint, string, string)" newName="$luaL_loadbuffer" oldStackTraceSignature="XLua.LuaDLL.Lua:luaL_loadbuffer(IntPtr, String, String)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$luaL_loadbuffer(IntPtr, String, String)" />
      <method signature="int XLua.LuaDLL.Lua::xlua_tocsobj_safe(nint, int)" newName="$xlua_tocsobj_safe" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_tocsobj_safe(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_tocsobj_safe(IntPtr, Int32)" />
      <method signature="int XLua.LuaDLL.Lua::xlua_tocsobj_fast(nint, int)" newName="$xlua_tocsobj_fast" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_tocsobj_fast(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_tocsobj_fast(IntPtr, Int32)" />
      <method signature="int XLua.LuaDLL.Lua::lua_error(nint)" newName="$lua_error" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_error(IntPtr)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_error(IntPtr)" />
      <method signature="bool XLua.LuaDLL.Lua::lua_checkstack(nint, int)" newName="$lua_checkstack" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_checkstack(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_checkstack(IntPtr, Int32)" />
      <method signature="int XLua.LuaDLL.Lua::lua_next(nint, int)" newName="$lua_next" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_next(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_next(IntPtr, Int32)" />
      <method signature="void XLua.LuaDLL.Lua::lua_pushlightuserdata(nint, nint)" newName="$lua_pushlightuserdata" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_pushlightuserdata(IntPtr, IntPtr)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_pushlightuserdata(IntPtr, IntPtr)" />
      <method signature="nint XLua.LuaDLL.Lua::xlua_tag()" newName="$xlua_tag" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_tag()" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_tag()" />
      <method signature="void XLua.LuaDLL.Lua::luaL_where(nint, int)" newName="$luaL_where" oldStackTraceSignature="XLua.LuaDLL.Lua:luaL_where(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$luaL_where(IntPtr, Int32)" />
      <method signature="int XLua.LuaDLL.Lua::xlua_tryget_cachedud(nint, int, int)" newName="$xlua_tryget_cachedud" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_tryget_cachedud(IntPtr, Int32, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_tryget_cachedud(IntPtr, Int32, Int32)" />
      <method signature="void XLua.LuaDLL.Lua::xlua_pushcsobj(nint, int, int, bool, int)" newName="$xlua_pushcsobj" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_pushcsobj(IntPtr, Int32, Int32, Boolean, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_pushcsobj(IntPtr, Int32, Int32, Boolean, Int32)" />
      <method signature="int XLua.LuaDLL.Lua::gen_obj_indexer(nint)" newName="$gen_obj_indexer" oldStackTraceSignature="XLua.LuaDLL.Lua:gen_obj_indexer(IntPtr)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$gen_obj_indexer(IntPtr)" />
      <method signature="int XLua.LuaDLL.Lua::gen_obj_newindexer(nint)" newName="$gen_obj_newindexer" oldStackTraceSignature="XLua.LuaDLL.Lua:gen_obj_newindexer(IntPtr)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$gen_obj_newindexer(IntPtr)" />
      <method signature="int XLua.LuaDLL.Lua::gen_cls_indexer(nint)" newName="$gen_cls_indexer" oldStackTraceSignature="XLua.LuaDLL.Lua:gen_cls_indexer(IntPtr)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$gen_cls_indexer(IntPtr)" />
      <method signature="int XLua.LuaDLL.Lua::gen_cls_newindexer(nint)" newName="$gen_cls_newindexer" oldStackTraceSignature="XLua.LuaDLL.Lua:gen_cls_newindexer(IntPtr)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$gen_cls_newindexer(IntPtr)" />
      <method signature="int XLua.LuaDLL.Lua::get_error_func_ref(nint)" newName="$get_error_func_ref" oldStackTraceSignature="XLua.LuaDLL.Lua:get_error_func_ref(IntPtr)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$get_error_func_ref(IntPtr)" />
      <method signature="int XLua.LuaDLL.Lua::load_error_func(nint, int)" newName="$load_error_func" oldStackTraceSignature="XLua.LuaDLL.Lua:load_error_func(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$load_error_func(IntPtr, Int32)" />
      <method signature="int XLua.LuaDLL.Lua::luaopen_i64lib(nint)" newName="$luaopen_i64lib" oldStackTraceSignature="XLua.LuaDLL.Lua:luaopen_i64lib(IntPtr)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$luaopen_i64lib(IntPtr)" />
      <method signature="int XLua.LuaDLL.Lua::luaopen_socket_core(nint)" newName="$luaopen_socket_core" oldStackTraceSignature="XLua.LuaDLL.Lua:luaopen_socket_core(IntPtr)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$luaopen_socket_core(IntPtr)" />
      <method signature="void XLua.LuaDLL.Lua::lua_pushint64(nint, long)" newName="$lua_pushint64" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_pushint64(IntPtr, Int64)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_pushint64(IntPtr, Int64)" />
      <method signature="void XLua.LuaDLL.Lua::lua_pushuint64(nint, ulong)" newName="$lua_pushuint64" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_pushuint64(IntPtr, UInt64)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_pushuint64(IntPtr, UInt64)" />
      <method signature="bool XLua.LuaDLL.Lua::lua_isint64(nint, int)" newName="$lua_isint64" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_isint64(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_isint64(IntPtr, Int32)" />
      <method signature="bool XLua.LuaDLL.Lua::lua_isuint64(nint, int)" newName="$lua_isuint64" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_isuint64(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_isuint64(IntPtr, Int32)" />
      <method signature="long XLua.LuaDLL.Lua::lua_toint64(nint, int)" newName="$lua_toint64" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_toint64(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_toint64(IntPtr, Int32)" />
      <method signature="ulong XLua.LuaDLL.Lua::lua_touint64(nint, int)" newName="$lua_touint64" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_touint64(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_touint64(IntPtr, Int32)" />
      <method signature="void XLua.LuaDLL.Lua::xlua_push_csharp_function(nint, nint, int)" newName="$xlua_push_csharp_function" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_push_csharp_function(IntPtr, IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_push_csharp_function(IntPtr, IntPtr, Int32)" />
      <method signature="int XLua.LuaDLL.Lua::xlua_csharp_str_error(nint, string)" newName="$xlua_csharp_str_error" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_csharp_str_error(IntPtr, String)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_csharp_str_error(IntPtr, String)" />
      <method signature="int XLua.LuaDLL.Lua::xlua_csharp_error(nint)" newName="$xlua_csharp_error" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_csharp_error(IntPtr)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_csharp_error(IntPtr)" />
      <method signature="bool XLua.LuaDLL.Lua::xlua_pack_int8_t(nint, int, byte)" newName="$xlua_pack_int8_t" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_pack_int8_t(IntPtr, Int32, Byte)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_pack_int8_t(IntPtr, Int32, Byte)" />
      <method signature="bool XLua.LuaDLL.Lua::xlua_unpack_int8_t(nint, int, byte&amp;)" newName="$xlua_unpack_int8_t" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_unpack_int8_t(IntPtr, Int32, Byte&amp;)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_unpack_int8_t(IntPtr, Int32, Byte&amp;)" />
      <method signature="bool XLua.LuaDLL.Lua::xlua_pack_int16_t(nint, int, short)" newName="$xlua_pack_int16_t" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_pack_int16_t(IntPtr, Int32, Int16)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_pack_int16_t(IntPtr, Int32, Int16)" />
      <method signature="bool XLua.LuaDLL.Lua::xlua_unpack_int16_t(nint, int, short&amp;)" newName="$xlua_unpack_int16_t" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_unpack_int16_t(IntPtr, Int32, Int16&amp;)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_unpack_int16_t(IntPtr, Int32, Int16&amp;)" />
      <method signature="bool XLua.LuaDLL.Lua::xlua_pack_int32_t(nint, int, int)" newName="$xlua_pack_int32_t" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_pack_int32_t(IntPtr, Int32, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_pack_int32_t(IntPtr, Int32, Int32)" />
      <method signature="bool XLua.LuaDLL.Lua::xlua_unpack_int32_t(nint, int, int&amp;)" newName="$xlua_unpack_int32_t" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_unpack_int32_t(IntPtr, Int32, Int32&amp;)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_unpack_int32_t(IntPtr, Int32, Int32&amp;)" />
      <method signature="bool XLua.LuaDLL.Lua::xlua_pack_int64_t(nint, int, long)" newName="$xlua_pack_int64_t" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_pack_int64_t(IntPtr, Int32, Int64)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_pack_int64_t(IntPtr, Int32, Int64)" />
      <method signature="bool XLua.LuaDLL.Lua::xlua_unpack_int64_t(nint, int, long&amp;)" newName="$xlua_unpack_int64_t" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_unpack_int64_t(IntPtr, Int32, Int64&amp;)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_unpack_int64_t(IntPtr, Int32, Int64&amp;)" />
      <method signature="bool XLua.LuaDLL.Lua::xlua_pack_float(nint, int, float)" newName="$xlua_pack_float" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_pack_float(IntPtr, Int32, Single)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_pack_float(IntPtr, Int32, Single)" />
      <method signature="bool XLua.LuaDLL.Lua::xlua_unpack_float(nint, int, float&amp;)" newName="$xlua_unpack_float" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_unpack_float(IntPtr, Int32, Single&amp;)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_unpack_float(IntPtr, Int32, Single&amp;)" />
      <method signature="bool XLua.LuaDLL.Lua::xlua_pack_double(nint, int, double)" newName="$xlua_pack_double" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_pack_double(IntPtr, Int32, Double)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_pack_double(IntPtr, Int32, Double)" />
      <method signature="bool XLua.LuaDLL.Lua::xlua_unpack_double(nint, int, double&amp;)" newName="$xlua_unpack_double" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_unpack_double(IntPtr, Int32, Double&amp;)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_unpack_double(IntPtr, Int32, Double&amp;)" />
      <method signature="nint XLua.LuaDLL.Lua::xlua_pushstruct(nint, uint, int)" newName="$xlua_pushstruct" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_pushstruct(IntPtr, UInt32, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_pushstruct(IntPtr, UInt32, Int32)" />
      <method signature="void XLua.LuaDLL.Lua::xlua_pushcstable(nint, uint, int)" newName="$xlua_pushcstable" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_pushcstable(IntPtr, UInt32, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_pushcstable(IntPtr, UInt32, Int32)" />
      <method signature="nint XLua.LuaDLL.Lua::lua_touserdata(nint, int)" newName="$lua_touserdata" oldStackTraceSignature="XLua.LuaDLL.Lua:lua_touserdata(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$lua_touserdata(IntPtr, Int32)" />
      <method signature="int XLua.LuaDLL.Lua::xlua_gettypeid(nint, int)" newName="$xlua_gettypeid" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_gettypeid(IntPtr, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_gettypeid(IntPtr, Int32)" />
      <method signature="int XLua.LuaDLL.Lua::xlua_get_registry_index()" newName="$xlua_get_registry_index" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_get_registry_index()" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_get_registry_index()" />
      <method signature="int XLua.LuaDLL.Lua::xlua_pgettable_bypath(nint, int, string)" newName="$xlua_pgettable_bypath" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_pgettable_bypath(IntPtr, Int32, String)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_pgettable_bypath(IntPtr, Int32, String)" />
      <method signature="int XLua.LuaDLL.Lua::xlua_psettable_bypath(nint, int, string)" newName="$xlua_psettable_bypath" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_psettable_bypath(IntPtr, Int32, String)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_psettable_bypath(IntPtr, Int32, String)" />
      <method signature="bool XLua.LuaDLL.Lua::xlua_pack_float2(nint, int, float, float)" newName="$xlua_pack_float2" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_pack_float2(IntPtr, Int32, Single, Single)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_pack_float2(IntPtr, Int32, Single, Single)" />
      <method signature="bool XLua.LuaDLL.Lua::xlua_unpack_float2(nint, int, float&amp;, float&amp;)" newName="$xlua_unpack_float2" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_unpack_float2(IntPtr, Int32, Single&amp;, Single&amp;)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_unpack_float2(IntPtr, Int32, Single&amp;, Single&amp;)" />
      <method signature="bool XLua.LuaDLL.Lua::xlua_pack_float3(nint, int, float, float, float)" newName="$xlua_pack_float3" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_pack_float3(IntPtr, Int32, Single, Single, Single)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_pack_float3(IntPtr, Int32, Single, Single, Single)" />
      <method signature="bool XLua.LuaDLL.Lua::xlua_unpack_float3(nint, int, float&amp;, float&amp;, float&amp;)" newName="$xlua_unpack_float3" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_unpack_float3(IntPtr, Int32, Single&amp;, Single&amp;, Single&amp;)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_unpack_float3(IntPtr, Int32, Single&amp;, Single&amp;, Single&amp;)" />
      <method signature="bool XLua.LuaDLL.Lua::xlua_pack_float4(nint, int, float, float, float, float)" newName="$xlua_pack_float4" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_pack_float4(IntPtr, Int32, Single, Single, Single, Single)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_pack_float4(IntPtr, Int32, Single, Single, Single, Single)" />
      <method signature="bool XLua.LuaDLL.Lua::xlua_unpack_float4(nint, int, float&amp;, float&amp;, float&amp;, float&amp;)" newName="$xlua_unpack_float4" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_unpack_float4(IntPtr, Int32, Single&amp;, Single&amp;, Single&amp;, Single&amp;)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_unpack_float4(IntPtr, Int32, Single&amp;, Single&amp;, Single&amp;, Single&amp;)" />
      <method signature="bool XLua.LuaDLL.Lua::xlua_pack_float5(nint, int, float, float, float, float, float)" newName="$xlua_pack_float5" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_pack_float5(IntPtr, Int32, Single, Single, Single, Single, Single)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_pack_float5(IntPtr, Int32, Single, Single, Single, Single, Single)" />
      <method signature="bool XLua.LuaDLL.Lua::xlua_unpack_float5(nint, int, float&amp;, float&amp;, float&amp;, float&amp;, float&amp;)" newName="$xlua_unpack_float5" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_unpack_float5(IntPtr, Int32, Single&amp;, Single&amp;, Single&amp;, Single&amp;, Single&amp;)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_unpack_float5(IntPtr, Int32, Single&amp;, Single&amp;, Single&amp;, Single&amp;, Single&amp;)" />
      <method signature="bool XLua.LuaDLL.Lua::xlua_pack_float6(nint, int, float, float, float, float, float, float)" newName="$xlua_pack_float6" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_pack_float6(IntPtr, Int32, Single, Single, Single, Single, Single, Single)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_pack_float6(IntPtr, Int32, Single, Single, Single, Single, Single, Single)" />
      <method signature="bool XLua.LuaDLL.Lua::xlua_unpack_float6(nint, int, float&amp;, float&amp;, float&amp;, float&amp;, float&amp;, float&amp;)" newName="$xlua_unpack_float6" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_unpack_float6(IntPtr, Int32, Single&amp;, Single&amp;, Single&amp;, Single&amp;, Single&amp;, Single&amp;)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_unpack_float6(IntPtr, Int32, Single&amp;, Single&amp;, Single&amp;, Single&amp;, Single&amp;, Single&amp;)" />
      <method signature="bool XLua.LuaDLL.Lua::xlua_pack_decimal(nint, int, System.Decimal&amp;)" newName="$xlua_pack_decimal" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_pack_decimal(IntPtr, Int32, Decimal&amp;)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_pack_decimal(IntPtr, Int32, Decimal&amp;)" />
      <method signature="bool XLua.LuaDLL.Lua::xlua_unpack_decimal(nint, int, byte&amp;, byte&amp;, int&amp;, ulong&amp;)" newName="$xlua_unpack_decimal" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_unpack_decimal(IntPtr, Int32, Byte&amp;, Byte&amp;, Int32&amp;, UInt64&amp;)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_unpack_decimal(IntPtr, Int32, Byte&amp;, Byte&amp;, Int32&amp;, UInt64&amp;)" />
      <method signature="bool XLua.LuaDLL.Lua::xlua_is_eq_str(nint, int, string)" newName="$xlua_is_eq_str" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_is_eq_str(IntPtr, Int32, String)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_is_eq_str(IntPtr, Int32, String)" />
      <method signature="bool XLua.LuaDLL.Lua::xlua_is_eq_str(nint, int, string, int)" newName="$xlua_is_eq_str121" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_is_eq_str(IntPtr, Int32, String, Int32)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_is_eq_str121(IntPtr, Int32, String, Int32)" />
      <method signature="nint XLua.LuaDLL.Lua::xlua_gl(nint)" newName="$xlua_gl" oldStackTraceSignature="XLua.LuaDLL.Lua:xlua_gl(IntPtr)" newStackTraceSignature="$XLua.LuaDLL.$Lua:$xlua_gl(IntPtr)" />
    </type>
    <type fullName="XLua.LuaDLL.lua_CSFunction" newFullName="$XLua.LuaDLL.$lua_CSFunction" status="Renamed" />
    <type fullName="XLua.LuaEnv" newFullName="$XLua.$LuaEnv" status="Renamed">
      <field signature="string CSHARP_NAMESPACE" newName="$CSHARP_NAMESPACE" />
      <field signature="string MAIN_SHREAD" newName="$MAIN_SHREAD" />
      <field signature="nint rawL" newName="$rawL" />
      <field signature="[Assembly-CSharp]XLua.LuaTable _G" newName="$_G" />
      <field signature="[Assembly-CSharp]XLua.ObjectTranslator translator" newName="$translator" />
      <field signature="int errorFuncRef" newName="$errorFuncRef15" />
      <field signature="int LIB_VERSION_EXPECT" newName="$LIB_VERSION_EXPECT" />
      <field signature="System.Collections.Generic.List`1&lt;System.Action`2&lt;[Assembly-CSharp]XLua.LuaEnv,[Assembly-CSharp]XLua.ObjectTranslator&gt;&gt; initers" newName="$initers" />
      <field signature="int last_check_point" newName="$last_check_point" />
      <field signature="int max_check_per_tick" newName="$max_check_per_tick" />
      <field signature="System.Func`2&lt;object,bool&gt; object_valid_checker" newName="$object_valid_checker" />
      <field signature="bool disposed" newName="$disposed16" />
      <field signature="System.Collections.Generic.Queue`1&lt;[Assembly-CSharp]XLua.LuaEnv/GCAction&gt; refQueue" newName="$refQueue" />
      <field signature="string init_xlua" newName="$init_xlua" />
      <field signature="System.Collections.Generic.List`1&lt;[Assembly-CSharp]XLua.LuaEnv/CustomLoader&gt; customLoaders" newName="$customLoaders" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;string,[Assembly-CSharp]XLua.LuaDLL.lua_CSFunction&gt; buildin_initer" newName="$buildin_initer" />
      <property signature="nint L" newName="$L" />
      <property signature="[Assembly-CSharp]XLua.LuaTable Global" newName="$Global" />
      <property signature="int GcPause" newName="$GcPause" />
      <property signature="int GcStepmul" newName="$GcStepmul" />
      <property signature="int Memroy" newName="$Memroy" />
      <method signature="nint XLua.LuaEnv::get_L([Assembly-CSharp]XLua.LuaEnv)" newName="$get_L" oldStackTraceSignature="XLua.LuaEnv:get_L()" newStackTraceSignature="$XLua.$LuaEnv:$get_L()" />
      <method signature="void XLua.LuaEnv::AddIniter(System.Action`2&lt;[Assembly-CSharp]XLua.LuaEnv,[Assembly-CSharp]XLua.ObjectTranslator&gt;)" newName="$AddIniter" oldStackTraceSignature="XLua.LuaEnv:AddIniter(Action`2)" newStackTraceSignature="$XLua.$LuaEnv:$AddIniter(Action`2)" />
      <method signature="[Assembly-CSharp]XLua.LuaTable XLua.LuaEnv::get_Global([Assembly-CSharp]XLua.LuaEnv)" newName="$get_Global" oldStackTraceSignature="XLua.LuaEnv:get_Global()" newStackTraceSignature="$XLua.$LuaEnv:$get_Global()" />
      <method signature="!!0 XLua.LuaEnv::LoadString`1([Assembly-CSharp]XLua.LuaEnv, byte[], string, [Assembly-CSharp]XLua.LuaTable)" newName="$LoadString" oldStackTraceSignature="XLua.LuaEnv:LoadString(Byte[], String, LuaTable)" newStackTraceSignature="$XLua.$LuaEnv:$LoadString(Byte[], String, $LuaTable)" />
      <method signature="!!0 XLua.LuaEnv::LoadString`1([Assembly-CSharp]XLua.LuaEnv, string, string, [Assembly-CSharp]XLua.LuaTable)" newName="$LoadString86" oldStackTraceSignature="XLua.LuaEnv:LoadString(String, String, LuaTable)" newStackTraceSignature="$XLua.$LuaEnv:$LoadString86(String, String, $LuaTable)" />
      <method signature="[Assembly-CSharp]XLua.LuaFunction XLua.LuaEnv::LoadString([Assembly-CSharp]XLua.LuaEnv, string, string, [Assembly-CSharp]XLua.LuaTable)" newName="$LoadString87" oldStackTraceSignature="XLua.LuaEnv:LoadString(String, String, LuaTable)" newStackTraceSignature="$XLua.$LuaEnv:$LoadString87(String, String, $LuaTable)" />
      <method signature="object[] XLua.LuaEnv::DoString([Assembly-CSharp]XLua.LuaEnv, byte[], string, [Assembly-CSharp]XLua.LuaTable)" newName="$DoString" oldStackTraceSignature="XLua.LuaEnv:DoString(Byte[], String, LuaTable)" newStackTraceSignature="$XLua.$LuaEnv:$DoString(Byte[], String, $LuaTable)" />
      <method signature="object[] XLua.LuaEnv::DoString([Assembly-CSharp]XLua.LuaEnv, string, string, [Assembly-CSharp]XLua.LuaTable)" newName="$DoString88" oldStackTraceSignature="XLua.LuaEnv:DoString(String, String, LuaTable)" newStackTraceSignature="$XLua.$LuaEnv:$DoString88(String, String, $LuaTable)" />
      <method signature="void XLua.LuaEnv::AddSearcher([Assembly-CSharp]XLua.LuaEnv, [Assembly-CSharp]XLua.LuaDLL.lua_CSFunction, int)" newName="$AddSearcher" oldStackTraceSignature="XLua.LuaEnv:AddSearcher(lua_CSFunction, Int32)" newStackTraceSignature="$XLua.$LuaEnv:$AddSearcher($lua_CSFunction, Int32)" />
      <method signature="void XLua.LuaEnv::Alias([Assembly-CSharp]XLua.LuaEnv, System.Type, string)" newName="$Alias89" oldStackTraceSignature="XLua.LuaEnv:Alias(Type, String)" newStackTraceSignature="$XLua.$LuaEnv:$Alias89(Type, String)" />
      <method signature="bool XLua.LuaEnv::ObjectValidCheck(object)" newName="$ObjectValidCheck" oldStackTraceSignature="XLua.LuaEnv:ObjectValidCheck(Object)" newStackTraceSignature="$XLua.$LuaEnv:$ObjectValidCheck(Object)" />
      <method signature="void XLua.LuaEnv::Tick([Assembly-CSharp]XLua.LuaEnv)" newName="$Tick" oldStackTraceSignature="XLua.LuaEnv:Tick()" newStackTraceSignature="$XLua.$LuaEnv:$Tick()" />
      <method signature="void XLua.LuaEnv::GC([Assembly-CSharp]XLua.LuaEnv)" newName="$GC" oldStackTraceSignature="XLua.LuaEnv:GC()" newStackTraceSignature="$XLua.$LuaEnv:$GC()" />
      <method signature="[Assembly-CSharp]XLua.LuaTable XLua.LuaEnv::NewTable([Assembly-CSharp]XLua.LuaEnv)" newName="$NewTable" oldStackTraceSignature="XLua.LuaEnv:NewTable()" newStackTraceSignature="$XLua.$LuaEnv:$NewTable()" />
      <method signature="void XLua.LuaEnv::Dispose([Assembly-CSharp]XLua.LuaEnv, bool)" newName="$Dispose439" oldStackTraceSignature="XLua.LuaEnv:Dispose(Boolean)" newStackTraceSignature="$XLua.$LuaEnv:$Dispose439(Boolean)" />
      <method signature="void XLua.LuaEnv::ThrowExceptionFromError([Assembly-CSharp]XLua.LuaEnv, int)" newName="$ThrowExceptionFromError" oldStackTraceSignature="XLua.LuaEnv:ThrowExceptionFromError(Int32)" newStackTraceSignature="$XLua.$LuaEnv:$ThrowExceptionFromError(Int32)" />
      <method signature="void XLua.LuaEnv::equeueGCAction([Assembly-CSharp]XLua.LuaEnv, [Assembly-CSharp]XLua.LuaEnv/GCAction)" newName="$equeueGCAction" oldStackTraceSignature="XLua.LuaEnv:equeueGCAction(GCAction)" newStackTraceSignature="$XLua.$LuaEnv:$equeueGCAction($GCAction)" />
      <method signature="void XLua.LuaEnv::AddLoader([Assembly-CSharp]XLua.LuaEnv, [Assembly-CSharp]XLua.LuaEnv/CustomLoader)" newName="$AddLoader" oldStackTraceSignature="XLua.LuaEnv:AddLoader(CustomLoader)" newStackTraceSignature="$XLua.$LuaEnv:$AddLoader($CustomLoader)" />
      <method signature="void XLua.LuaEnv::AddBuildin([Assembly-CSharp]XLua.LuaEnv, string, [Assembly-CSharp]XLua.LuaDLL.lua_CSFunction)" newName="$AddBuildin" oldStackTraceSignature="XLua.LuaEnv:AddBuildin(String, lua_CSFunction)" newStackTraceSignature="$XLua.$LuaEnv:$AddBuildin(String, $lua_CSFunction)" />
      <method signature="int XLua.LuaEnv::get_GcPause([Assembly-CSharp]XLua.LuaEnv)" newName="$get_GcPause" oldStackTraceSignature="XLua.LuaEnv:get_GcPause()" newStackTraceSignature="$XLua.$LuaEnv:$get_GcPause()" />
      <method signature="void XLua.LuaEnv::set_GcPause([Assembly-CSharp]XLua.LuaEnv, int)" newName="$set_GcPause" oldStackTraceSignature="XLua.LuaEnv:set_GcPause(Int32)" newStackTraceSignature="$XLua.$LuaEnv:$set_GcPause(Int32)" />
      <method signature="int XLua.LuaEnv::get_GcStepmul([Assembly-CSharp]XLua.LuaEnv)" newName="$get_GcStepmul" oldStackTraceSignature="XLua.LuaEnv:get_GcStepmul()" newStackTraceSignature="$XLua.$LuaEnv:$get_GcStepmul()" />
      <method signature="void XLua.LuaEnv::set_GcStepmul([Assembly-CSharp]XLua.LuaEnv, int)" newName="$set_GcStepmul" oldStackTraceSignature="XLua.LuaEnv:set_GcStepmul(Int32)" newStackTraceSignature="$XLua.$LuaEnv:$set_GcStepmul(Int32)" />
      <method signature="void XLua.LuaEnv::FullGc([Assembly-CSharp]XLua.LuaEnv)" newName="$FullGc" oldStackTraceSignature="XLua.LuaEnv:FullGc()" newStackTraceSignature="$XLua.$LuaEnv:$FullGc()" />
      <method signature="void XLua.LuaEnv::StopGc([Assembly-CSharp]XLua.LuaEnv)" newName="$StopGc" oldStackTraceSignature="XLua.LuaEnv:StopGc()" newStackTraceSignature="$XLua.$LuaEnv:$StopGc()" />
      <method signature="void XLua.LuaEnv::RestartGc([Assembly-CSharp]XLua.LuaEnv)" newName="$RestartGc" oldStackTraceSignature="XLua.LuaEnv:RestartGc()" newStackTraceSignature="$XLua.$LuaEnv:$RestartGc()" />
      <method signature="bool XLua.LuaEnv::GcStep([Assembly-CSharp]XLua.LuaEnv, int)" newName="$GcStep" oldStackTraceSignature="XLua.LuaEnv:GcStep(Int32)" newStackTraceSignature="$XLua.$LuaEnv:$GcStep(Int32)" />
      <method signature="int XLua.LuaEnv::get_Memroy([Assembly-CSharp]XLua.LuaEnv)" newName="$get_Memroy" oldStackTraceSignature="XLua.LuaEnv:get_Memroy()" newStackTraceSignature="$XLua.$LuaEnv:$get_Memroy()" />
    </type>
    <type fullName="XLua.LuaEnv/CustomLoader" newFullName="$XLua.$LuaEnv/$CustomLoader" status="Renamed" />
    <type fullName="XLua.LuaEnv/GCAction" newFullName="$XLua.$LuaEnv/$GCAction" status="Renamed">
      <field signature="int Reference" newName="$Reference" />
      <field signature="bool IsDelegate" newName="$IsDelegate" />
    </type>
    <type fullName="XLua.LuaFunction" newFullName="$XLua.$LuaFunction" status="Renamed">
      <method signature="void XLua.LuaFunction::Action`1([Assembly-CSharp]XLua.LuaFunction, !!0)" newName="$Action90" oldStackTraceSignature="XLua.LuaFunction:Action(T)" newStackTraceSignature="$XLua.$LuaFunction:$Action90(T)" />
      <method signature="!!1 XLua.LuaFunction::Func`2([Assembly-CSharp]XLua.LuaFunction, !!0)" newName="$Func91" oldStackTraceSignature="XLua.LuaFunction:Func(T)" newStackTraceSignature="$XLua.$LuaFunction:$Func91(T)" />
      <method signature="void XLua.LuaFunction::Action`2([Assembly-CSharp]XLua.LuaFunction, !!0, !!1)" newName="$Action92" oldStackTraceSignature="XLua.LuaFunction:Action(T1, T2)" newStackTraceSignature="$XLua.$LuaFunction:$Action92(T1, T2)" />
      <method signature="!!2 XLua.LuaFunction::Func`3([Assembly-CSharp]XLua.LuaFunction, !!0, !!1)" newName="$Func93" oldStackTraceSignature="XLua.LuaFunction:Func(T1, T2)" newStackTraceSignature="$XLua.$LuaFunction:$Func93(T1, T2)" />
      <method signature="object[] XLua.LuaFunction::Call([Assembly-CSharp]XLua.LuaFunction, object[], System.Type[])" newName="$Call" oldStackTraceSignature="XLua.LuaFunction:Call(Object[], Type[])" newStackTraceSignature="$XLua.$LuaFunction:$Call(Object[], Type[])" />
      <method signature="object[] XLua.LuaFunction::Call([Assembly-CSharp]XLua.LuaFunction, object[])" newName="$Call94" oldStackTraceSignature="XLua.LuaFunction:Call(Object[])" newStackTraceSignature="$XLua.$LuaFunction:$Call94(Object[])" />
      <method signature="!!0 XLua.LuaFunction::Cast`1([Assembly-CSharp]XLua.LuaFunction)" newName="$Cast95" oldStackTraceSignature="XLua.LuaFunction:Cast()" newStackTraceSignature="$XLua.$LuaFunction:$Cast95()" />
      <method signature="void XLua.LuaFunction::SetEnv([Assembly-CSharp]XLua.LuaFunction, [Assembly-CSharp]XLua.LuaTable)" newName="$SetEnv" oldStackTraceSignature="XLua.LuaFunction:SetEnv(LuaTable)" newStackTraceSignature="$XLua.$LuaFunction:$SetEnv($LuaTable)" />
      <method signature="void XLua.LuaFunction::push([Assembly-CSharp]XLua.LuaFunction, nint)" newName="$push" oldStackTraceSignature="XLua.LuaFunction:push(IntPtr)" newStackTraceSignature="$XLua.$LuaFunction:$push(IntPtr)" />
    </type>
    <type fullName="XLua.LuaGCOptions" newFullName="$XLua.$LuaGCOptions" status="Renamed">
      <field signature="[Assembly-CSharp]XLua.LuaGCOptions LUA_GCSTOP" newName="$LUA_GCSTOP" />
      <field signature="[Assembly-CSharp]XLua.LuaGCOptions LUA_GCRESTART" newName="$LUA_GCRESTART" />
      <field signature="[Assembly-CSharp]XLua.LuaGCOptions LUA_GCCOLLECT" newName="$LUA_GCCOLLECT" />
      <field signature="[Assembly-CSharp]XLua.LuaGCOptions LUA_GCCOUNT" newName="$LUA_GCCOUNT" />
      <field signature="[Assembly-CSharp]XLua.LuaGCOptions LUA_GCCOUNTB" newName="$LUA_GCCOUNTB" />
      <field signature="[Assembly-CSharp]XLua.LuaGCOptions LUA_GCSTEP" newName="$LUA_GCSTEP" />
      <field signature="[Assembly-CSharp]XLua.LuaGCOptions LUA_GCSETPAUSE" newName="$LUA_GCSETPAUSE" />
      <field signature="[Assembly-CSharp]XLua.LuaGCOptions LUA_GCSETSTEPMUL" newName="$LUA_GCSETSTEPMUL" />
    </type>
    <type fullName="XLua.LuaIndexes" newFullName="$XLua.$LuaIndexes" status="Renamed">
      <property signature="int LUA_REGISTRYINDEX" newName="$LUA_REGISTRYINDEX" />
      <method signature="int XLua.LuaIndexes::get_LUA_REGISTRYINDEX()" newName="$get_LUA_REGISTRYINDEX" oldStackTraceSignature="XLua.LuaIndexes:get_LUA_REGISTRYINDEX()" newStackTraceSignature="$XLua.$LuaIndexes:$get_LUA_REGISTRYINDEX()" />
      <method signature="void XLua.LuaIndexes::set_LUA_REGISTRYINDEX(int)" newName="$set_LUA_REGISTRYINDEX" oldStackTraceSignature="XLua.LuaIndexes:set_LUA_REGISTRYINDEX(Int32)" newStackTraceSignature="$XLua.$LuaIndexes:$set_LUA_REGISTRYINDEX(Int32)" />
    </type>
    <type fullName="XLua.LuaTable" newFullName="$XLua.$LuaTable" status="Renamed">
      <property signature="object Item(string)" newName="$Item" />
      <property signature="object Item(object)" newName="$Item0" />
      <property signature="int Length" newName="$Length" />
      <method signature="void XLua.LuaTable::Get`2([Assembly-CSharp]XLua.LuaTable, !!0, !!1&amp;)" newName="$Get96" oldStackTraceSignature="XLua.LuaTable:Get(TKey, TValue&amp;)" newStackTraceSignature="$XLua.$LuaTable:$Get96(TKey, TValue&amp;)" />
      <method signature="bool XLua.LuaTable::ContainsKey`1([Assembly-CSharp]XLua.LuaTable, !!0)" newName="$ContainsKey" oldStackTraceSignature="XLua.LuaTable:ContainsKey(TKey)" newStackTraceSignature="$XLua.$LuaTable:$ContainsKey(TKey)" />
      <method signature="void XLua.LuaTable::Set`2([Assembly-CSharp]XLua.LuaTable, !!0, !!1)" newName="$Set97" oldStackTraceSignature="XLua.LuaTable:Set(TKey, TValue)" newStackTraceSignature="$XLua.$LuaTable:$Set97(TKey, TValue)" />
      <method signature="!!0 XLua.LuaTable::GetInPath`1([Assembly-CSharp]XLua.LuaTable, string)" newName="$GetInPath" oldStackTraceSignature="XLua.LuaTable:GetInPath(String)" newStackTraceSignature="$XLua.$LuaTable:$GetInPath(String)" />
      <method signature="void XLua.LuaTable::SetInPath`1([Assembly-CSharp]XLua.LuaTable, string, !!0)" newName="$SetInPath" oldStackTraceSignature="XLua.LuaTable:SetInPath(String, T)" newStackTraceSignature="$XLua.$LuaTable:$SetInPath(String, T)" />
      <method signature="object XLua.LuaTable::get_Item([Assembly-CSharp]XLua.LuaTable, string)" newName="$get_Item" oldStackTraceSignature="XLua.LuaTable:get_Item(String)" newStackTraceSignature="$XLua.$LuaTable:$get_Item(String)" />
      <method signature="void XLua.LuaTable::set_Item([Assembly-CSharp]XLua.LuaTable, string, object)" newName="$set_Item" oldStackTraceSignature="XLua.LuaTable:set_Item(String, Object)" newStackTraceSignature="$XLua.$LuaTable:$set_Item(String, Object)" />
      <method signature="object XLua.LuaTable::get_Item([Assembly-CSharp]XLua.LuaTable, object)" newName="$get_Item98" oldStackTraceSignature="XLua.LuaTable:get_Item(Object)" newStackTraceSignature="$XLua.$LuaTable:$get_Item98(Object)" />
      <method signature="void XLua.LuaTable::set_Item([Assembly-CSharp]XLua.LuaTable, object, object)" newName="$set_Item99" oldStackTraceSignature="XLua.LuaTable:set_Item(Object, Object)" newStackTraceSignature="$XLua.$LuaTable:$set_Item99(Object, Object)" />
      <method signature="void XLua.LuaTable::ForEach`2([Assembly-CSharp]XLua.LuaTable, System.Action`2&lt;!!0,!!1&gt;)" newName="$ForEach" oldStackTraceSignature="XLua.LuaTable:ForEach(Action`2)" newStackTraceSignature="$XLua.$LuaTable:$ForEach(Action`2)" />
      <method signature="int XLua.LuaTable::get_Length([Assembly-CSharp]XLua.LuaTable)" newName="$get_Length" oldStackTraceSignature="XLua.LuaTable:get_Length()" newStackTraceSignature="$XLua.$LuaTable:$get_Length()" />
      <method signature="System.Collections.IEnumerable XLua.LuaTable::GetKeys([Assembly-CSharp]XLua.LuaTable)" newName="$GetKeys" oldStackTraceSignature="XLua.LuaTable:GetKeys()" newStackTraceSignature="$XLua.$LuaTable:$GetKeys()" />
      <method signature="System.Collections.Generic.IEnumerable`1&lt;!!0&gt; XLua.LuaTable::GetKeys`1([Assembly-CSharp]XLua.LuaTable)" newName="$GetKeys100" oldStackTraceSignature="XLua.LuaTable:GetKeys()" newStackTraceSignature="$XLua.$LuaTable:$GetKeys100()" />
      <method signature="!!0 XLua.LuaTable::Get`1([Assembly-CSharp]XLua.LuaTable, object)" newName="$Get101" oldStackTraceSignature="XLua.LuaTable:Get(Object)" newStackTraceSignature="$XLua.$LuaTable:$Get101(Object)" />
      <method signature="!!1 XLua.LuaTable::Get`2([Assembly-CSharp]XLua.LuaTable, !!0)" newName="$Get102" oldStackTraceSignature="XLua.LuaTable:Get(TKey)" newStackTraceSignature="$XLua.$LuaTable:$Get102(TKey)" />
      <method signature="!!0 XLua.LuaTable::Get`1([Assembly-CSharp]XLua.LuaTable, string)" newName="$Get103" oldStackTraceSignature="XLua.LuaTable:Get(String)" newStackTraceSignature="$XLua.$LuaTable:$Get103(String)" />
      <method signature="void XLua.LuaTable::SetMetaTable([Assembly-CSharp]XLua.LuaTable, [Assembly-CSharp]XLua.LuaTable)" newName="$SetMetaTable" oldStackTraceSignature="XLua.LuaTable:SetMetaTable(LuaTable)" newStackTraceSignature="$XLua.$LuaTable:$SetMetaTable($LuaTable)" />
      <method signature="!!0 XLua.LuaTable::Cast`1([Assembly-CSharp]XLua.LuaTable)" newName="$Cast104" oldStackTraceSignature="XLua.LuaTable:Cast()" newStackTraceSignature="$XLua.$LuaTable:$Cast104()" />
      <method signature="void XLua.LuaTable::push([Assembly-CSharp]XLua.LuaTable, nint)" newName="$push" oldStackTraceSignature="XLua.LuaTable:push(IntPtr)" newStackTraceSignature="$XLua.$LuaTable:$push(IntPtr)" />
    </type>
    <type fullName="XLua.LuaTable/&lt;GetKeys&gt;d__15" newFullName="$XLua.$LuaTable/$&lt;GetKeys&gt;d__15" status="Renamed">
      <field signature="int &lt;&gt;1__state" newName="$&lt;&gt;1__state" />
      <field signature="object &lt;&gt;2__current" newName="$&lt;&gt;2__current" />
      <field signature="int &lt;&gt;l__initialThreadId" newName="$&lt;&gt;l__initialThreadId" />
      <field signature="[Assembly-CSharp]XLua.LuaTable &lt;&gt;4__this" newName="$&lt;&gt;4__this" />
      <field signature="nint &lt;L&gt;5__2" newName="$&lt;L&gt;5__2" />
      <field signature="[Assembly-CSharp]XLua.ObjectTranslator &lt;translator&gt;5__3" newName="$&lt;translator&gt;5__3" />
      <field signature="int &lt;oldTop&gt;5__4" newName="$&lt;oldTop&gt;5__4" />
      <property signature="object System.Collections.Generic.IEnumerator&lt;System.Object&gt;.Current" newName="$System.Collections.Generic.IEnumerator&lt;System.Object&gt;.Current" />
      <property signature="object System.Collections.IEnumerator.Current" newName="$System.Collections.IEnumerator.Current" />
      <method signature="void XLua.LuaTable/&lt;GetKeys&gt;d__15::System.IDisposable.Dispose([Assembly-CSharp]XLua.LuaTable/&lt;GetKeys&gt;d__15)" newName="$System.IDisposable.Dispose" oldStackTraceSignature="XLua.&lt;GetKeys&gt;d__15:System.IDisposable.Dispose()" newStackTraceSignature="$XLua.$&lt;GetKeys&gt;d__15:$System.IDisposable.Dispose()" />
      <method signature="object XLua.LuaTable/&lt;GetKeys&gt;d__15::System.Collections.Generic.IEnumerator&lt;System.Object&gt;.get_Current([Assembly-CSharp]XLua.LuaTable/&lt;GetKeys&gt;d__15)" newName="$System.Collections.Generic.IEnumerator&lt;System.Object&gt;.get_Current" oldStackTraceSignature="XLua.&lt;GetKeys&gt;d__15:System.Collections.Generic.IEnumerator&lt;System.Object&gt;.get_Current()" newStackTraceSignature="$XLua.$&lt;GetKeys&gt;d__15:$System.Collections.Generic.IEnumerator&lt;System.Object&gt;.get_Current()" />
      <method signature="void XLua.LuaTable/&lt;GetKeys&gt;d__15::System.Collections.IEnumerator.Reset([Assembly-CSharp]XLua.LuaTable/&lt;GetKeys&gt;d__15)" newName="$System.Collections.IEnumerator.Reset" oldStackTraceSignature="XLua.&lt;GetKeys&gt;d__15:System.Collections.IEnumerator.Reset()" newStackTraceSignature="$XLua.$&lt;GetKeys&gt;d__15:$System.Collections.IEnumerator.Reset()" />
      <method signature="object XLua.LuaTable/&lt;GetKeys&gt;d__15::System.Collections.IEnumerator.get_Current([Assembly-CSharp]XLua.LuaTable/&lt;GetKeys&gt;d__15)" newName="$System.Collections.IEnumerator.get_Current" oldStackTraceSignature="XLua.&lt;GetKeys&gt;d__15:System.Collections.IEnumerator.get_Current()" newStackTraceSignature="$XLua.$&lt;GetKeys&gt;d__15:$System.Collections.IEnumerator.get_Current()" />
      <method signature="System.Collections.Generic.IEnumerator`1&lt;object&gt; XLua.LuaTable/&lt;GetKeys&gt;d__15::System.Collections.Generic.IEnumerable&lt;System.Object&gt;.GetEnumerator([Assembly-CSharp]XLua.LuaTable/&lt;GetKeys&gt;d__15)" newName="$System.Collections.Generic.IEnumerable&lt;System.Object&gt;.GetEnumerator" oldStackTraceSignature="XLua.&lt;GetKeys&gt;d__15:System.Collections.Generic.IEnumerable&lt;System.Object&gt;.GetEnumerator()" newStackTraceSignature="$XLua.$&lt;GetKeys&gt;d__15:$System.Collections.Generic.IEnumerable&lt;System.Object&gt;.GetEnumerator()" />
      <method signature="System.Collections.IEnumerator XLua.LuaTable/&lt;GetKeys&gt;d__15::System.Collections.IEnumerable.GetEnumerator([Assembly-CSharp]XLua.LuaTable/&lt;GetKeys&gt;d__15)" newName="$System.Collections.IEnumerable.GetEnumerator" oldStackTraceSignature="XLua.&lt;GetKeys&gt;d__15:System.Collections.IEnumerable.GetEnumerator()" newStackTraceSignature="$XLua.$&lt;GetKeys&gt;d__15:$System.Collections.IEnumerable.GetEnumerator()" />
    </type>
    <type fullName="XLua.LuaTable/&lt;GetKeys&gt;d__16`1" newFullName="$XLua.$LuaTable/$&lt;GetKeys&gt;d__16`1" status="Renamed">
      <field signature="int &lt;&gt;1__state" newName="$&lt;&gt;1__state17" />
      <field signature="!0 &lt;&gt;2__current" newName="$&lt;&gt;2__current18" />
      <field signature="int &lt;&gt;l__initialThreadId" newName="$&lt;&gt;l__initialThreadId19" />
      <field signature="[Assembly-CSharp]XLua.LuaTable &lt;&gt;4__this" newName="$&lt;&gt;4__this20" />
      <field signature="nint &lt;L&gt;5__2" newName="$&lt;L&gt;5__221" />
      <field signature="[Assembly-CSharp]XLua.ObjectTranslator &lt;translator&gt;5__3" newName="$&lt;translator&gt;5__322" />
      <field signature="int &lt;oldTop&gt;5__4" newName="$&lt;oldTop&gt;5__423" />
      <property signature="!0 System.Collections.Generic.IEnumerator&lt;T&gt;.Current" newName="$System.Collections.Generic.IEnumerator&lt;T&gt;.Current" />
      <property signature="object System.Collections.IEnumerator.Current" newName="$System.Collections.IEnumerator.Current" />
      <method signature="void XLua.LuaTable/&lt;GetKeys&gt;d__16`1::System.IDisposable.Dispose([Assembly-CSharp]XLua.LuaTable/&lt;GetKeys&gt;d__16`1&lt;!0&gt;)" newName="$System.IDisposable.Dispose440" oldStackTraceSignature="XLua.&lt;GetKeys&gt;d__16`1:System.IDisposable.Dispose()" newStackTraceSignature="$XLua.$&lt;GetKeys&gt;d__16`1:$System.IDisposable.Dispose440()" />
      <method signature="!0 XLua.LuaTable/&lt;GetKeys&gt;d__16`1::System.Collections.Generic.IEnumerator&lt;T&gt;.get_Current([Assembly-CSharp]XLua.LuaTable/&lt;GetKeys&gt;d__16`1&lt;!0&gt;)" newName="$System.Collections.Generic.IEnumerator&lt;T&gt;.get_Current" oldStackTraceSignature="XLua.&lt;GetKeys&gt;d__16`1:System.Collections.Generic.IEnumerator&lt;T&gt;.get_Current()" newStackTraceSignature="$XLua.$&lt;GetKeys&gt;d__16`1:$System.Collections.Generic.IEnumerator&lt;T&gt;.get_Current()" />
      <method signature="void XLua.LuaTable/&lt;GetKeys&gt;d__16`1::System.Collections.IEnumerator.Reset([Assembly-CSharp]XLua.LuaTable/&lt;GetKeys&gt;d__16`1&lt;!0&gt;)" newName="$System.Collections.IEnumerator.Reset441" oldStackTraceSignature="XLua.&lt;GetKeys&gt;d__16`1:System.Collections.IEnumerator.Reset()" newStackTraceSignature="$XLua.$&lt;GetKeys&gt;d__16`1:$System.Collections.IEnumerator.Reset441()" />
      <method signature="object XLua.LuaTable/&lt;GetKeys&gt;d__16`1::System.Collections.IEnumerator.get_Current([Assembly-CSharp]XLua.LuaTable/&lt;GetKeys&gt;d__16`1&lt;!0&gt;)" newName="$System.Collections.IEnumerator.get_Current442" oldStackTraceSignature="XLua.&lt;GetKeys&gt;d__16`1:System.Collections.IEnumerator.get_Current()" newStackTraceSignature="$XLua.$&lt;GetKeys&gt;d__16`1:$System.Collections.IEnumerator.get_Current442()" />
      <method signature="System.Collections.Generic.IEnumerator`1&lt;!0&gt; XLua.LuaTable/&lt;GetKeys&gt;d__16`1::System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator([Assembly-CSharp]XLua.LuaTable/&lt;GetKeys&gt;d__16`1&lt;!0&gt;)" newName="$System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator" oldStackTraceSignature="XLua.&lt;GetKeys&gt;d__16`1:System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()" newStackTraceSignature="$XLua.$&lt;GetKeys&gt;d__16`1:$System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()" />
      <method signature="System.Collections.IEnumerator XLua.LuaTable/&lt;GetKeys&gt;d__16`1::System.Collections.IEnumerable.GetEnumerator([Assembly-CSharp]XLua.LuaTable/&lt;GetKeys&gt;d__16`1&lt;!0&gt;)" newName="$System.Collections.IEnumerable.GetEnumerator443" oldStackTraceSignature="XLua.&lt;GetKeys&gt;d__16`1:System.Collections.IEnumerable.GetEnumerator()" newStackTraceSignature="$XLua.$&lt;GetKeys&gt;d__16`1:$System.Collections.IEnumerable.GetEnumerator443()" />
    </type>
    <type fullName="XLua.LuaThreadStatus" newFullName="$XLua.$LuaThreadStatus" status="Renamed">
      <field signature="[Assembly-CSharp]XLua.LuaThreadStatus LUA_RESUME_ERROR" newName="$LUA_RESUME_ERROR" />
      <field signature="[Assembly-CSharp]XLua.LuaThreadStatus LUA_OK" newName="$LUA_OK" />
      <field signature="[Assembly-CSharp]XLua.LuaThreadStatus LUA_YIELD" newName="$LUA_YIELD" />
      <field signature="[Assembly-CSharp]XLua.LuaThreadStatus LUA_ERRRUN" newName="$LUA_ERRRUN" />
      <field signature="[Assembly-CSharp]XLua.LuaThreadStatus LUA_ERRSYNTAX" newName="$LUA_ERRSYNTAX" />
      <field signature="[Assembly-CSharp]XLua.LuaThreadStatus LUA_ERRMEM" newName="$LUA_ERRMEM" />
      <field signature="[Assembly-CSharp]XLua.LuaThreadStatus LUA_ERRERR" newName="$LUA_ERRERR" />
    </type>
    <type fullName="XLua.LuaTypes" newFullName="$XLua.$LuaTypes" status="Renamed">
      <field signature="[Assembly-CSharp]XLua.LuaTypes LUA_TNONE" newName="$LUA_TNONE" />
      <field signature="[Assembly-CSharp]XLua.LuaTypes LUA_TNIL" newName="$LUA_TNIL" />
      <field signature="[Assembly-CSharp]XLua.LuaTypes LUA_TNUMBER" newName="$LUA_TNUMBER" />
      <field signature="[Assembly-CSharp]XLua.LuaTypes LUA_TSTRING" newName="$LUA_TSTRING" />
      <field signature="[Assembly-CSharp]XLua.LuaTypes LUA_TBOOLEAN" newName="$LUA_TBOOLEAN" />
      <field signature="[Assembly-CSharp]XLua.LuaTypes LUA_TTABLE" newName="$LUA_TTABLE" />
      <field signature="[Assembly-CSharp]XLua.LuaTypes LUA_TFUNCTION" newName="$LUA_TFUNCTION" />
      <field signature="[Assembly-CSharp]XLua.LuaTypes LUA_TUSERDATA" newName="$LUA_TUSERDATA" />
      <field signature="[Assembly-CSharp]XLua.LuaTypes LUA_TTHREAD" newName="$LUA_TTHREAD" />
      <field signature="[Assembly-CSharp]XLua.LuaTypes LUA_TLIGHTUSERDATA" newName="$LUA_TLIGHTUSERDATA" />
    </type>
    <type fullName="XLua.MethodWrap" newFullName="$XLua.$MethodWrap" status="Renamed">
      <field signature="string methodName" newName="$methodName" />
      <field signature="System.Collections.Generic.List`1&lt;[Assembly-CSharp]XLua.OverloadMethodWrap&gt; overloads" newName="$overloads" />
      <field signature="bool forceCheck" newName="$forceCheck" />
      <method signature="int XLua.MethodWrap::Call([Assembly-CSharp]XLua.MethodWrap, nint)" newName="$Call107" oldStackTraceSignature="XLua.MethodWrap:Call(IntPtr)" newStackTraceSignature="$XLua.$MethodWrap:$Call107(IntPtr)" />
    </type>
    <type fullName="XLua.MethodWrapsCache" newFullName="$XLua.$MethodWrapsCache" status="Renamed">
      <field signature="[Assembly-CSharp]XLua.ObjectTranslator translator" newName="$translator25" />
      <field signature="[Assembly-CSharp]XLua.ObjectCheckers objCheckers" newName="$objCheckers" />
      <field signature="[Assembly-CSharp]XLua.ObjectCasters objCasters" newName="$objCasters" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;System.Type,[Assembly-CSharp]XLua.LuaDLL.lua_CSFunction&gt; constructorCache" newName="$constructorCache" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;System.Type,System.Collections.Generic.Dictionary`2&lt;string,[Assembly-CSharp]XLua.LuaDLL.lua_CSFunction&gt;&gt; methodsCache" newName="$methodsCache" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;System.Type,[Assembly-CSharp]XLua.LuaDLL.lua_CSFunction&gt; delegateCache" newName="$delegateCache" />
      <method signature="[Assembly-CSharp]XLua.LuaDLL.lua_CSFunction XLua.MethodWrapsCache::GetConstructorWrap([Assembly-CSharp]XLua.MethodWrapsCache, System.Type)" newName="$GetConstructorWrap" oldStackTraceSignature="XLua.MethodWrapsCache:GetConstructorWrap(Type)" newStackTraceSignature="$XLua.$MethodWrapsCache:$GetConstructorWrap(Type)" />
      <method signature="[Assembly-CSharp]XLua.LuaDLL.lua_CSFunction XLua.MethodWrapsCache::GetMethodWrap([Assembly-CSharp]XLua.MethodWrapsCache, System.Type, string)" newName="$GetMethodWrap" oldStackTraceSignature="XLua.MethodWrapsCache:GetMethodWrap(Type, String)" newStackTraceSignature="$XLua.$MethodWrapsCache:$GetMethodWrap(Type, String)" />
      <method signature="[Assembly-CSharp]XLua.LuaDLL.lua_CSFunction XLua.MethodWrapsCache::GetMethodWrapInCache([Assembly-CSharp]XLua.MethodWrapsCache, System.Type, string)" newName="$GetMethodWrapInCache" oldStackTraceSignature="XLua.MethodWrapsCache:GetMethodWrapInCache(Type, String)" newStackTraceSignature="$XLua.$MethodWrapsCache:$GetMethodWrapInCache(Type, String)" />
      <method signature="[Assembly-CSharp]XLua.LuaDLL.lua_CSFunction XLua.MethodWrapsCache::GetDelegateWrap([Assembly-CSharp]XLua.MethodWrapsCache, System.Type)" newName="$GetDelegateWrap" oldStackTraceSignature="XLua.MethodWrapsCache:GetDelegateWrap(Type)" newStackTraceSignature="$XLua.$MethodWrapsCache:$GetDelegateWrap(Type)" />
      <method signature="[Assembly-CSharp]XLua.LuaDLL.lua_CSFunction XLua.MethodWrapsCache::GetEventWrap([Assembly-CSharp]XLua.MethodWrapsCache, System.Type, string)" newName="$GetEventWrap" oldStackTraceSignature="XLua.MethodWrapsCache:GetEventWrap(Type, String)" newStackTraceSignature="$XLua.$MethodWrapsCache:$GetEventWrap(Type, String)" />
      <method signature="[Assembly-CSharp]XLua.MethodWrap XLua.MethodWrapsCache::_GenMethodWrap([Assembly-CSharp]XLua.MethodWrapsCache, System.Type, string, System.Collections.Generic.IEnumerable`1&lt;System.Reflection.MemberInfo&gt;, bool)" newName="$_GenMethodWrap" oldStackTraceSignature="XLua.MethodWrapsCache:_GenMethodWrap(Type, String, IEnumerable`1, Boolean)" newStackTraceSignature="$XLua.$MethodWrapsCache:$_GenMethodWrap(Type, String, IEnumerable`1, Boolean)" />
      <method signature="bool XLua.MethodWrapsCache::tryMakeGenericMethod(System.Reflection.MethodBase&amp;)" newName="$tryMakeGenericMethod" oldStackTraceSignature="XLua.MethodWrapsCache:tryMakeGenericMethod(MethodBase&amp;)" newStackTraceSignature="$XLua.$MethodWrapsCache:$tryMakeGenericMethod(MethodBase&amp;)" />
    </type>
    <type fullName="XLua.MethodWrapsCache/&lt;&gt;c__DisplayClass11_0" newFullName="$XLua.$MethodWrapsCache/$&lt;&gt;c__DisplayClass11_0" status="Renamed">
      <field signature="[Assembly-CSharp]XLua.MethodWrapsCache &lt;&gt;4__this" newName="$&lt;&gt;4__this26" />
      <field signature="System.Type type" newName="$type" />
      <field signature="string eventName" newName="$eventName" />
      <field signature="bool is_static" newName="$is_static" />
      <field signature="System.Reflection.EventInfo eventInfo" newName="$eventInfo" />
      <field signature="int start_idx" newName="$start_idx" />
      <field signature="System.Reflection.MethodInfo add" newName="$add" />
      <field signature="System.Reflection.MethodInfo remove" newName="$remove" />
      <method signature="int XLua.MethodWrapsCache/&lt;&gt;c__DisplayClass11_0::&lt;GetEventWrap&gt;b__0([Assembly-CSharp]XLua.MethodWrapsCache/&lt;&gt;c__DisplayClass11_0, nint)" newName="$&lt;GetEventWrap&gt;b__0" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass11_0:&lt;GetEventWrap&gt;b__0(IntPtr)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass11_0:$&lt;GetEventWrap&gt;b__0(IntPtr)" />
    </type>
    <type fullName="XLua.MethodWrapsCache/&lt;&gt;c__DisplayClass7_0" newFullName="$XLua.$MethodWrapsCache/$&lt;&gt;c__DisplayClass7_0" status="Renamed">
      <field signature="[Assembly-CSharp]XLua.MethodWrapsCache &lt;&gt;4__this" newName="$&lt;&gt;4__this27" />
      <field signature="System.Type type" newName="$type28" />
      <method signature="int XLua.MethodWrapsCache/&lt;&gt;c__DisplayClass7_0::&lt;GetConstructorWrap&gt;b__0([Assembly-CSharp]XLua.MethodWrapsCache/&lt;&gt;c__DisplayClass7_0, nint)" newName="$&lt;GetConstructorWrap&gt;b__0" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass7_0:&lt;GetConstructorWrap&gt;b__0(IntPtr)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass7_0:$&lt;GetConstructorWrap&gt;b__0(IntPtr)" />
    </type>
    <type fullName="XLua.MethodWrapsCache/&lt;&gt;c__DisplayClass7_1" newFullName="$XLua.$MethodWrapsCache/$&lt;&gt;c__DisplayClass7_1" status="Renamed">
      <field signature="[Assembly-CSharp]XLua.LuaDLL.lua_CSFunction ctor" newName="$ctor" />
      <field signature="[Assembly-CSharp]XLua.MethodWrapsCache/&lt;&gt;c__DisplayClass7_0 CS$&lt;&gt;8__locals1" newName="$CS$&lt;&gt;8__locals129" />
      <method signature="int XLua.MethodWrapsCache/&lt;&gt;c__DisplayClass7_1::&lt;GetConstructorWrap&gt;b__1([Assembly-CSharp]XLua.MethodWrapsCache/&lt;&gt;c__DisplayClass7_1, nint)" newName="$&lt;GetConstructorWrap&gt;b__1" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass7_1:&lt;GetConstructorWrap&gt;b__1(IntPtr)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass7_1:$&lt;GetConstructorWrap&gt;b__1(IntPtr)" />
    </type>
    <type fullName="XLua.ObjectCast" newFullName="$XLua.$ObjectCast" status="Renamed" />
    <type fullName="XLua.ObjectCasters" newFullName="$XLua.$ObjectCasters" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;System.Type,[Assembly-CSharp]XLua.ObjectCast&gt; castersMap" newName="$castersMap" />
      <field signature="[Assembly-CSharp]XLua.ObjectTranslator translator" newName="$translator33" />
      <method signature="object XLua.ObjectCasters::charCaster(nint, int, object)" newName="$charCaster" oldStackTraceSignature="XLua.ObjectCasters:charCaster(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$ObjectCasters:$charCaster(IntPtr, Int32, Object)" />
      <method signature="object XLua.ObjectCasters::sbyteCaster(nint, int, object)" newName="$sbyteCaster" oldStackTraceSignature="XLua.ObjectCasters:sbyteCaster(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$ObjectCasters:$sbyteCaster(IntPtr, Int32, Object)" />
      <method signature="object XLua.ObjectCasters::byteCaster(nint, int, object)" newName="$byteCaster" oldStackTraceSignature="XLua.ObjectCasters:byteCaster(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$ObjectCasters:$byteCaster(IntPtr, Int32, Object)" />
      <method signature="object XLua.ObjectCasters::shortCaster(nint, int, object)" newName="$shortCaster" oldStackTraceSignature="XLua.ObjectCasters:shortCaster(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$ObjectCasters:$shortCaster(IntPtr, Int32, Object)" />
      <method signature="object XLua.ObjectCasters::ushortCaster(nint, int, object)" newName="$ushortCaster" oldStackTraceSignature="XLua.ObjectCasters:ushortCaster(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$ObjectCasters:$ushortCaster(IntPtr, Int32, Object)" />
      <method signature="object XLua.ObjectCasters::intCaster(nint, int, object)" newName="$intCaster" oldStackTraceSignature="XLua.ObjectCasters:intCaster(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$ObjectCasters:$intCaster(IntPtr, Int32, Object)" />
      <method signature="object XLua.ObjectCasters::uintCaster(nint, int, object)" newName="$uintCaster" oldStackTraceSignature="XLua.ObjectCasters:uintCaster(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$ObjectCasters:$uintCaster(IntPtr, Int32, Object)" />
      <method signature="object XLua.ObjectCasters::longCaster(nint, int, object)" newName="$longCaster" oldStackTraceSignature="XLua.ObjectCasters:longCaster(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$ObjectCasters:$longCaster(IntPtr, Int32, Object)" />
      <method signature="object XLua.ObjectCasters::ulongCaster(nint, int, object)" newName="$ulongCaster" oldStackTraceSignature="XLua.ObjectCasters:ulongCaster(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$ObjectCasters:$ulongCaster(IntPtr, Int32, Object)" />
      <method signature="object XLua.ObjectCasters::getDouble(nint, int, object)" newName="$getDouble" oldStackTraceSignature="XLua.ObjectCasters:getDouble(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$ObjectCasters:$getDouble(IntPtr, Int32, Object)" />
      <method signature="object XLua.ObjectCasters::floatCaster(nint, int, object)" newName="$floatCaster" oldStackTraceSignature="XLua.ObjectCasters:floatCaster(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$ObjectCasters:$floatCaster(IntPtr, Int32, Object)" />
      <method signature="object XLua.ObjectCasters::decimalCaster([Assembly-CSharp]XLua.ObjectCasters, nint, int, object)" newName="$decimalCaster" oldStackTraceSignature="XLua.ObjectCasters:decimalCaster(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$ObjectCasters:$decimalCaster(IntPtr, Int32, Object)" />
      <method signature="object XLua.ObjectCasters::getBoolean(nint, int, object)" newName="$getBoolean" oldStackTraceSignature="XLua.ObjectCasters:getBoolean(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$ObjectCasters:$getBoolean(IntPtr, Int32, Object)" />
      <method signature="object XLua.ObjectCasters::getString(nint, int, object)" newName="$getString" oldStackTraceSignature="XLua.ObjectCasters:getString(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$ObjectCasters:$getString(IntPtr, Int32, Object)" />
      <method signature="object XLua.ObjectCasters::getBytes([Assembly-CSharp]XLua.ObjectCasters, nint, int, object)" newName="$getBytes" oldStackTraceSignature="XLua.ObjectCasters:getBytes(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$ObjectCasters:$getBytes(IntPtr, Int32, Object)" />
      <method signature="object XLua.ObjectCasters::getIntptr([Assembly-CSharp]XLua.ObjectCasters, nint, int, object)" newName="$getIntptr" oldStackTraceSignature="XLua.ObjectCasters:getIntptr(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$ObjectCasters:$getIntptr(IntPtr, Int32, Object)" />
      <method signature="object XLua.ObjectCasters::getObject([Assembly-CSharp]XLua.ObjectCasters, nint, int, object)" newName="$getObject" oldStackTraceSignature="XLua.ObjectCasters:getObject(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$ObjectCasters:$getObject(IntPtr, Int32, Object)" />
      <method signature="object XLua.ObjectCasters::getLuaTable([Assembly-CSharp]XLua.ObjectCasters, nint, int, object)" newName="$getLuaTable" oldStackTraceSignature="XLua.ObjectCasters:getLuaTable(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$ObjectCasters:$getLuaTable(IntPtr, Int32, Object)" />
      <method signature="object XLua.ObjectCasters::getLuaFunction([Assembly-CSharp]XLua.ObjectCasters, nint, int, object)" newName="$getLuaFunction" oldStackTraceSignature="XLua.ObjectCasters:getLuaFunction(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$ObjectCasters:$getLuaFunction(IntPtr, Int32, Object)" />
      <method signature="void XLua.ObjectCasters::AddCaster([Assembly-CSharp]XLua.ObjectCasters, System.Type, [Assembly-CSharp]XLua.ObjectCast)" newName="$AddCaster" oldStackTraceSignature="XLua.ObjectCasters:AddCaster(Type, ObjectCast)" newStackTraceSignature="$XLua.$ObjectCasters:$AddCaster(Type, $ObjectCast)" />
      <method signature="[Assembly-CSharp]XLua.ObjectCast XLua.ObjectCasters::genCaster([Assembly-CSharp]XLua.ObjectCasters, System.Type)" newName="$genCaster" oldStackTraceSignature="XLua.ObjectCasters:genCaster(Type)" newStackTraceSignature="$XLua.$ObjectCasters:$genCaster(Type)" />
      <method signature="[Assembly-CSharp]XLua.ObjectCast XLua.ObjectCasters::genNullableCaster([Assembly-CSharp]XLua.ObjectCasters, [Assembly-CSharp]XLua.ObjectCast)" newName="$genNullableCaster" oldStackTraceSignature="XLua.ObjectCasters:genNullableCaster(ObjectCast)" newStackTraceSignature="$XLua.$ObjectCasters:$genNullableCaster($ObjectCast)" />
      <method signature="[Assembly-CSharp]XLua.ObjectCast XLua.ObjectCasters::GetCaster([Assembly-CSharp]XLua.ObjectCasters, System.Type)" newName="$GetCaster" oldStackTraceSignature="XLua.ObjectCasters:GetCaster(Type)" newStackTraceSignature="$XLua.$ObjectCasters:$GetCaster(Type)" />
    </type>
    <type fullName="XLua.ObjectCasters/&lt;&gt;c__DisplayClass23_0" newFullName="$XLua.$ObjectCasters/$&lt;&gt;c__DisplayClass23_0" status="Renamed">
      <field signature="[Assembly-CSharp]XLua.ObjectCasters &lt;&gt;4__this" newName="$&lt;&gt;4__this34" />
      <field signature="System.Type type" newName="$type35" />
      <field signature="[Assembly-CSharp]XLua.ObjectCast fixTypeGetter" newName="$fixTypeGetter" />
      <method signature="object XLua.ObjectCasters/&lt;&gt;c__DisplayClass23_0::&lt;genCaster&gt;b__0([Assembly-CSharp]XLua.ObjectCasters/&lt;&gt;c__DisplayClass23_0, nint, int, object)" newName="$&lt;genCaster&gt;b__0" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass23_0:&lt;genCaster&gt;b__0(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass23_0:$&lt;genCaster&gt;b__0(IntPtr, Int32, Object)" />
      <method signature="object XLua.ObjectCasters/&lt;&gt;c__DisplayClass23_0::&lt;genCaster&gt;b__1([Assembly-CSharp]XLua.ObjectCasters/&lt;&gt;c__DisplayClass23_0, nint, int, object)" newName="$&lt;genCaster&gt;b__1" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass23_0:&lt;genCaster&gt;b__1(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass23_0:$&lt;genCaster&gt;b__1(IntPtr, Int32, Object)" />
      <method signature="object XLua.ObjectCasters/&lt;&gt;c__DisplayClass23_0::&lt;genCaster&gt;b__2([Assembly-CSharp]XLua.ObjectCasters/&lt;&gt;c__DisplayClass23_0, nint, int, object)" newName="$&lt;genCaster&gt;b__2" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass23_0:&lt;genCaster&gt;b__2(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass23_0:$&lt;genCaster&gt;b__2(IntPtr, Int32, Object)" />
      <method signature="object XLua.ObjectCasters/&lt;&gt;c__DisplayClass23_0::&lt;genCaster&gt;b__3([Assembly-CSharp]XLua.ObjectCasters/&lt;&gt;c__DisplayClass23_0, nint, int, object)" newName="$&lt;genCaster&gt;b__3" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass23_0:&lt;genCaster&gt;b__3(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass23_0:$&lt;genCaster&gt;b__3(IntPtr, Int32, Object)" />
      <method signature="object XLua.ObjectCasters/&lt;&gt;c__DisplayClass23_0::&lt;genCaster&gt;b__4([Assembly-CSharp]XLua.ObjectCasters/&lt;&gt;c__DisplayClass23_0, nint, int, object)" newName="$&lt;genCaster&gt;b__4" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass23_0:&lt;genCaster&gt;b__4(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass23_0:$&lt;genCaster&gt;b__4(IntPtr, Int32, Object)" />
      <method signature="object XLua.ObjectCasters/&lt;&gt;c__DisplayClass23_0::&lt;genCaster&gt;b__5([Assembly-CSharp]XLua.ObjectCasters/&lt;&gt;c__DisplayClass23_0, nint, int, object)" newName="$&lt;genCaster&gt;b__5" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass23_0:&lt;genCaster&gt;b__5(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass23_0:$&lt;genCaster&gt;b__5(IntPtr, Int32, Object)" />
      <method signature="object XLua.ObjectCasters/&lt;&gt;c__DisplayClass23_0::&lt;genCaster&gt;b__6([Assembly-CSharp]XLua.ObjectCasters/&lt;&gt;c__DisplayClass23_0, nint, int, object)" newName="$&lt;genCaster&gt;b__6" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass23_0:&lt;genCaster&gt;b__6(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass23_0:$&lt;genCaster&gt;b__6(IntPtr, Int32, Object)" />
    </type>
    <type fullName="XLua.ObjectCasters/&lt;&gt;c__DisplayClass23_1" newFullName="$XLua.$ObjectCasters/$&lt;&gt;c__DisplayClass23_1" status="Renamed">
      <field signature="System.Type elementType" newName="$elementType" />
      <field signature="[Assembly-CSharp]XLua.ObjectCast elementCaster" newName="$elementCaster" />
      <field signature="[Assembly-CSharp]XLua.ObjectCasters/&lt;&gt;c__DisplayClass23_0 CS$&lt;&gt;8__locals1" newName="$CS$&lt;&gt;8__locals136" />
      <method signature="object XLua.ObjectCasters/&lt;&gt;c__DisplayClass23_1::&lt;genCaster&gt;b__7([Assembly-CSharp]XLua.ObjectCasters/&lt;&gt;c__DisplayClass23_1, nint, int, object)" newName="$&lt;genCaster&gt;b__7" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass23_1:&lt;genCaster&gt;b__7(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass23_1:$&lt;genCaster&gt;b__7(IntPtr, Int32, Object)" />
    </type>
    <type fullName="XLua.ObjectCasters/&lt;&gt;c__DisplayClass23_2" newFullName="$XLua.$ObjectCasters/$&lt;&gt;c__DisplayClass23_2" status="Renamed">
      <field signature="System.Type keyType" newName="$keyType" />
      <field signature="System.Type valueType" newName="$valueType" />
      <field signature="[Assembly-CSharp]XLua.ObjectCast keyCaster" newName="$keyCaster" />
      <field signature="[Assembly-CSharp]XLua.ObjectCast valueCaster" newName="$valueCaster" />
      <field signature="[Assembly-CSharp]XLua.ObjectCasters/&lt;&gt;c__DisplayClass23_0 CS$&lt;&gt;8__locals2" newName="$CS$&lt;&gt;8__locals2" />
      <method signature="object XLua.ObjectCasters/&lt;&gt;c__DisplayClass23_2::&lt;genCaster&gt;b__8([Assembly-CSharp]XLua.ObjectCasters/&lt;&gt;c__DisplayClass23_2, nint, int, object)" newName="$&lt;genCaster&gt;b__8" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass23_2:&lt;genCaster&gt;b__8(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass23_2:$&lt;genCaster&gt;b__8(IntPtr, Int32, Object)" />
    </type>
    <type fullName="XLua.ObjectCasters/&lt;&gt;c__DisplayClass24_0" newFullName="$XLua.$ObjectCasters/$&lt;&gt;c__DisplayClass24_0" status="Renamed">
      <field signature="[Assembly-CSharp]XLua.ObjectCast oc" newName="$oc37" />
      <method signature="object XLua.ObjectCasters/&lt;&gt;c__DisplayClass24_0::&lt;genNullableCaster&gt;b__0([Assembly-CSharp]XLua.ObjectCasters/&lt;&gt;c__DisplayClass24_0, nint, int, object)" newName="$&lt;genNullableCaster&gt;b__0" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass24_0:&lt;genNullableCaster&gt;b__0(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass24_0:$&lt;genNullableCaster&gt;b__0(IntPtr, Int32, Object)" />
    </type>
    <type fullName="XLua.ObjectCheck" newFullName="$XLua.$ObjectCheck" status="Renamed" />
    <type fullName="XLua.ObjectCheckers" newFullName="$XLua.$ObjectCheckers" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;System.Type,[Assembly-CSharp]XLua.ObjectCheck&gt; checkersMap" newName="$checkersMap" />
      <field signature="[Assembly-CSharp]XLua.ObjectTranslator translator" newName="$translator30" />
      <method signature="bool XLua.ObjectCheckers::objectCheck(nint, int)" newName="$objectCheck" oldStackTraceSignature="XLua.ObjectCheckers:objectCheck(IntPtr, Int32)" newStackTraceSignature="$XLua.$ObjectCheckers:$objectCheck(IntPtr, Int32)" />
      <method signature="bool XLua.ObjectCheckers::luaTableCheck([Assembly-CSharp]XLua.ObjectCheckers, nint, int)" newName="$luaTableCheck" oldStackTraceSignature="XLua.ObjectCheckers:luaTableCheck(IntPtr, Int32)" newStackTraceSignature="$XLua.$ObjectCheckers:$luaTableCheck(IntPtr, Int32)" />
      <method signature="bool XLua.ObjectCheckers::numberCheck([Assembly-CSharp]XLua.ObjectCheckers, nint, int)" newName="$numberCheck" oldStackTraceSignature="XLua.ObjectCheckers:numberCheck(IntPtr, Int32)" newStackTraceSignature="$XLua.$ObjectCheckers:$numberCheck(IntPtr, Int32)" />
      <method signature="bool XLua.ObjectCheckers::decimalCheck([Assembly-CSharp]XLua.ObjectCheckers, nint, int)" newName="$decimalCheck" oldStackTraceSignature="XLua.ObjectCheckers:decimalCheck(IntPtr, Int32)" newStackTraceSignature="$XLua.$ObjectCheckers:$decimalCheck(IntPtr, Int32)" />
      <method signature="bool XLua.ObjectCheckers::strCheck([Assembly-CSharp]XLua.ObjectCheckers, nint, int)" newName="$strCheck" oldStackTraceSignature="XLua.ObjectCheckers:strCheck(IntPtr, Int32)" newStackTraceSignature="$XLua.$ObjectCheckers:$strCheck(IntPtr, Int32)" />
      <method signature="bool XLua.ObjectCheckers::bytesCheck([Assembly-CSharp]XLua.ObjectCheckers, nint, int)" newName="$bytesCheck" oldStackTraceSignature="XLua.ObjectCheckers:bytesCheck(IntPtr, Int32)" newStackTraceSignature="$XLua.$ObjectCheckers:$bytesCheck(IntPtr, Int32)" />
      <method signature="bool XLua.ObjectCheckers::boolCheck([Assembly-CSharp]XLua.ObjectCheckers, nint, int)" newName="$boolCheck" oldStackTraceSignature="XLua.ObjectCheckers:boolCheck(IntPtr, Int32)" newStackTraceSignature="$XLua.$ObjectCheckers:$boolCheck(IntPtr, Int32)" />
      <method signature="bool XLua.ObjectCheckers::int64Check([Assembly-CSharp]XLua.ObjectCheckers, nint, int)" newName="$int64Check" oldStackTraceSignature="XLua.ObjectCheckers:int64Check(IntPtr, Int32)" newStackTraceSignature="$XLua.$ObjectCheckers:$int64Check(IntPtr, Int32)" />
      <method signature="bool XLua.ObjectCheckers::uint64Check([Assembly-CSharp]XLua.ObjectCheckers, nint, int)" newName="$uint64Check" oldStackTraceSignature="XLua.ObjectCheckers:uint64Check(IntPtr, Int32)" newStackTraceSignature="$XLua.$ObjectCheckers:$uint64Check(IntPtr, Int32)" />
      <method signature="bool XLua.ObjectCheckers::luaFunctionCheck([Assembly-CSharp]XLua.ObjectCheckers, nint, int)" newName="$luaFunctionCheck" oldStackTraceSignature="XLua.ObjectCheckers:luaFunctionCheck(IntPtr, Int32)" newStackTraceSignature="$XLua.$ObjectCheckers:$luaFunctionCheck(IntPtr, Int32)" />
      <method signature="bool XLua.ObjectCheckers::intptrCheck([Assembly-CSharp]XLua.ObjectCheckers, nint, int)" newName="$intptrCheck" oldStackTraceSignature="XLua.ObjectCheckers:intptrCheck(IntPtr, Int32)" newStackTraceSignature="$XLua.$ObjectCheckers:$intptrCheck(IntPtr, Int32)" />
      <method signature="[Assembly-CSharp]XLua.ObjectCheck XLua.ObjectCheckers::genChecker([Assembly-CSharp]XLua.ObjectCheckers, System.Type)" newName="$genChecker" oldStackTraceSignature="XLua.ObjectCheckers:genChecker(Type)" newStackTraceSignature="$XLua.$ObjectCheckers:$genChecker(Type)" />
      <method signature="[Assembly-CSharp]XLua.ObjectCheck XLua.ObjectCheckers::genNullableChecker([Assembly-CSharp]XLua.ObjectCheckers, [Assembly-CSharp]XLua.ObjectCheck)" newName="$genNullableChecker" oldStackTraceSignature="XLua.ObjectCheckers:genNullableChecker(ObjectCheck)" newStackTraceSignature="$XLua.$ObjectCheckers:$genNullableChecker($ObjectCheck)" />
      <method signature="void XLua.ObjectCheckers::AddChecker([Assembly-CSharp]XLua.ObjectCheckers, System.Type, [Assembly-CSharp]XLua.ObjectCheck)" newName="$AddChecker" oldStackTraceSignature="XLua.ObjectCheckers:AddChecker(Type, ObjectCheck)" newStackTraceSignature="$XLua.$ObjectCheckers:$AddChecker(Type, $ObjectCheck)" />
      <method signature="[Assembly-CSharp]XLua.ObjectCheck XLua.ObjectCheckers::GetChecker([Assembly-CSharp]XLua.ObjectCheckers, System.Type)" newName="$GetChecker" oldStackTraceSignature="XLua.ObjectCheckers:GetChecker(Type)" newStackTraceSignature="$XLua.$ObjectCheckers:$GetChecker(Type)" />
    </type>
    <type fullName="XLua.ObjectCheckers/&lt;&gt;c__DisplayClass14_0" newFullName="$XLua.$ObjectCheckers/$&lt;&gt;c__DisplayClass14_0" status="Renamed">
      <field signature="[Assembly-CSharp]XLua.ObjectCheckers &lt;&gt;4__this" newName="$&lt;&gt;4__this31" />
      <field signature="System.Type type" newName="$type32" />
      <field signature="[Assembly-CSharp]XLua.ObjectCheck fixTypeCheck" newName="$fixTypeCheck" />
      <method signature="bool XLua.ObjectCheckers/&lt;&gt;c__DisplayClass14_0::&lt;genChecker&gt;b__0([Assembly-CSharp]XLua.ObjectCheckers/&lt;&gt;c__DisplayClass14_0, nint, int)" newName="$&lt;genChecker&gt;b__0" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass14_0:&lt;genChecker&gt;b__0(IntPtr, Int32)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass14_0:$&lt;genChecker&gt;b__0(IntPtr, Int32)" />
      <method signature="bool XLua.ObjectCheckers/&lt;&gt;c__DisplayClass14_0::&lt;genChecker&gt;b__1([Assembly-CSharp]XLua.ObjectCheckers/&lt;&gt;c__DisplayClass14_0, nint, int)" newName="$&lt;genChecker&gt;b__1" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass14_0:&lt;genChecker&gt;b__1(IntPtr, Int32)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass14_0:$&lt;genChecker&gt;b__1(IntPtr, Int32)" />
      <method signature="bool XLua.ObjectCheckers/&lt;&gt;c__DisplayClass14_0::&lt;genChecker&gt;b__2([Assembly-CSharp]XLua.ObjectCheckers/&lt;&gt;c__DisplayClass14_0, nint, int)" newName="$&lt;genChecker&gt;b__2" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass14_0:&lt;genChecker&gt;b__2(IntPtr, Int32)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass14_0:$&lt;genChecker&gt;b__2(IntPtr, Int32)" />
      <method signature="bool XLua.ObjectCheckers/&lt;&gt;c__DisplayClass14_0::&lt;genChecker&gt;b__3([Assembly-CSharp]XLua.ObjectCheckers/&lt;&gt;c__DisplayClass14_0, nint, int)" newName="$&lt;genChecker&gt;b__3" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass14_0:&lt;genChecker&gt;b__3(IntPtr, Int32)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass14_0:$&lt;genChecker&gt;b__3(IntPtr, Int32)" />
      <method signature="bool XLua.ObjectCheckers/&lt;&gt;c__DisplayClass14_0::&lt;genChecker&gt;b__4([Assembly-CSharp]XLua.ObjectCheckers/&lt;&gt;c__DisplayClass14_0, nint, int)" newName="$&lt;genChecker&gt;b__4" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass14_0:&lt;genChecker&gt;b__4(IntPtr, Int32)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass14_0:$&lt;genChecker&gt;b__4(IntPtr, Int32)" />
      <method signature="bool XLua.ObjectCheckers/&lt;&gt;c__DisplayClass14_0::&lt;genChecker&gt;b__5([Assembly-CSharp]XLua.ObjectCheckers/&lt;&gt;c__DisplayClass14_0, nint, int)" newName="$&lt;genChecker&gt;b__5" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass14_0:&lt;genChecker&gt;b__5(IntPtr, Int32)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass14_0:$&lt;genChecker&gt;b__5(IntPtr, Int32)" />
      <method signature="bool XLua.ObjectCheckers/&lt;&gt;c__DisplayClass14_0::&lt;genChecker&gt;b__6([Assembly-CSharp]XLua.ObjectCheckers/&lt;&gt;c__DisplayClass14_0, nint, int)" newName="$&lt;genChecker&gt;b__6" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass14_0:&lt;genChecker&gt;b__6(IntPtr, Int32)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass14_0:$&lt;genChecker&gt;b__6(IntPtr, Int32)" />
    </type>
    <type fullName="XLua.ObjectCheckers/&lt;&gt;c__DisplayClass15_0" newFullName="$XLua.$ObjectCheckers/$&lt;&gt;c__DisplayClass15_0" status="Renamed">
      <field signature="[Assembly-CSharp]XLua.ObjectCheck oc" newName="$oc" />
      <method signature="bool XLua.ObjectCheckers/&lt;&gt;c__DisplayClass15_0::&lt;genNullableChecker&gt;b__0([Assembly-CSharp]XLua.ObjectCheckers/&lt;&gt;c__DisplayClass15_0, nint, int)" newName="$&lt;genNullableChecker&gt;b__0" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass15_0:&lt;genNullableChecker&gt;b__0(IntPtr, Int32)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass15_0:$&lt;genNullableChecker&gt;b__0(IntPtr, Int32)" />
    </type>
    <type fullName="XLua.ObjectPool" newFullName="$XLua.$ObjectPool" status="Renamed">
      <field signature="int LIST_END" newName="$LIST_END" />
      <field signature="int ALLOCED" newName="$ALLOCED" />
      <field signature="[Assembly-CSharp]XLua.ObjectPool/Slot[] list" newName="$list" />
      <field signature="int freelist" newName="$freelist" />
      <field signature="int count" newName="$count" />
      <property signature="object Item(int)" newName="$Item" />
      <method signature="object XLua.ObjectPool::get_Item([Assembly-CSharp]XLua.ObjectPool, int)" newName="$get_Item108" oldStackTraceSignature="XLua.ObjectPool:get_Item(Int32)" newStackTraceSignature="$XLua.$ObjectPool:$get_Item108(Int32)" />
      <method signature="void XLua.ObjectPool::Clear([Assembly-CSharp]XLua.ObjectPool)" newName="$Clear" oldStackTraceSignature="XLua.ObjectPool:Clear()" newStackTraceSignature="$XLua.$ObjectPool:$Clear()" />
      <method signature="void XLua.ObjectPool::extend_capacity([Assembly-CSharp]XLua.ObjectPool)" newName="$extend_capacity" oldStackTraceSignature="XLua.ObjectPool:extend_capacity()" newStackTraceSignature="$XLua.$ObjectPool:$extend_capacity()" />
      <method signature="int XLua.ObjectPool::Add([Assembly-CSharp]XLua.ObjectPool, object)" newName="$Add" oldStackTraceSignature="XLua.ObjectPool:Add(Object)" newStackTraceSignature="$XLua.$ObjectPool:$Add(Object)" />
      <method signature="bool XLua.ObjectPool::TryGetValue([Assembly-CSharp]XLua.ObjectPool, int, object&amp;)" newName="$TryGetValue" oldStackTraceSignature="XLua.ObjectPool:TryGetValue(Int32, Object&amp;)" newStackTraceSignature="$XLua.$ObjectPool:$TryGetValue(Int32, Object&amp;)" />
      <method signature="object XLua.ObjectPool::Get([Assembly-CSharp]XLua.ObjectPool, int)" newName="$Get109" oldStackTraceSignature="XLua.ObjectPool:Get(Int32)" newStackTraceSignature="$XLua.$ObjectPool:$Get109(Int32)" />
      <method signature="object XLua.ObjectPool::Remove([Assembly-CSharp]XLua.ObjectPool, int)" newName="$Remove" oldStackTraceSignature="XLua.ObjectPool:Remove(Int32)" newStackTraceSignature="$XLua.$ObjectPool:$Remove(Int32)" />
      <method signature="object XLua.ObjectPool::Replace([Assembly-CSharp]XLua.ObjectPool, int, object)" newName="$Replace" oldStackTraceSignature="XLua.ObjectPool:Replace(Int32, Object)" newStackTraceSignature="$XLua.$ObjectPool:$Replace(Int32, Object)" />
      <method signature="int XLua.ObjectPool::Check([Assembly-CSharp]XLua.ObjectPool, int, int, System.Func`2&lt;object,bool&gt;, System.Collections.Generic.Dictionary`2&lt;object,int&gt;)" newName="$Check110" oldStackTraceSignature="XLua.ObjectPool:Check(Int32, Int32, Func`2, Dictionary`2)" newStackTraceSignature="$XLua.$ObjectPool:$Check110(Int32, Int32, Func`2, Dictionary`2)" />
    </type>
    <type fullName="XLua.ObjectPool/Slot" newFullName="$XLua.$ObjectPool/$Slot" status="Renamed">
      <field signature="int next" newName="$next" />
      <field signature="object obj" newName="$obj" />
    </type>
    <type fullName="XLua.ObjectTranslator" newFullName="$XLua.$ObjectTranslator" status="Renamed">
      <field signature="[Assembly-CSharp]XLua.ObjectTranslator/IniterAdderUnityEngineVector2 s_IniterAdderUnityEngineVector2_dumb_obj" newName="$s_IniterAdderUnityEngineVector2_dumb_obj" />
      <field signature="int UnityEngineVector2_TypeID" newName="$UnityEngineVector2_TypeID" />
      <field signature="int UnityEngineVector3_TypeID" newName="$UnityEngineVector3_TypeID" />
      <field signature="int UnityEngineVector4_TypeID" newName="$UnityEngineVector4_TypeID" />
      <field signature="int UnityEngineColor_TypeID" newName="$UnityEngineColor_TypeID" />
      <field signature="int UnityEngineQuaternion_TypeID" newName="$UnityEngineQuaternion_TypeID" />
      <field signature="int UnityEngineRay_TypeID" newName="$UnityEngineRay_TypeID" />
      <field signature="int UnityEngineBounds_TypeID" newName="$UnityEngineBounds_TypeID" />
      <field signature="int UnityEngineRay2D_TypeID" newName="$UnityEngineRay2D_TypeID" />
      <field signature="int XLuaTestPedding_TypeID" newName="$XLuaTestPedding_TypeID" />
      <field signature="int XLuaTestMyStruct_TypeID" newName="$XLuaTestMyStruct_TypeID" />
      <field signature="int XLuaTestPushAsTableStruct_TypeID" newName="$XLuaTestPushAsTableStruct_TypeID" />
      <field signature="int TutorialTestEnum_TypeID" newName="$TutorialTestEnum_TypeID" />
      <field signature="int TutorialTestEnum_EnumRef" newName="$TutorialTestEnum_EnumRef" />
      <field signature="int XLuaTestMyEnum_TypeID" newName="$XLuaTestMyEnum_TypeID" />
      <field signature="int XLuaTestMyEnum_EnumRef" newName="$XLuaTestMyEnum_EnumRef" />
      <field signature="int TutorialDerivedClassTestEnumInner_TypeID" newName="$TutorialDerivedClassTestEnumInner_TypeID" />
      <field signature="int TutorialDerivedClassTestEnumInner_EnumRef" newName="$TutorialDerivedClassTestEnumInner_EnumRef" />
      <field signature="[Assembly-CSharp]XLua.CSObjectWrap.XLua_Gen_Initer_Register__ s_gen_reg_dumb_obj" newName="$s_gen_reg_dumb_obj" />
      <field signature="[Assembly-CSharp]XLua.MethodWrapsCache methodWrapsCache" newName="$methodWrapsCache" />
      <field signature="[Assembly-CSharp]XLua.ObjectCheckers objectCheckers" newName="$objectCheckers" />
      <field signature="[Assembly-CSharp]XLua.ObjectCasters objectCasters" newName="$objectCasters" />
      <field signature="[Assembly-CSharp]XLua.ObjectPool objects" newName="$objects" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;object,int&gt; reverseMap" newName="$reverseMap" />
      <field signature="[Assembly-CSharp]XLua.LuaEnv luaEnv" newName="$luaEnv" />
      <field signature="[Assembly-CSharp]XLua.StaticLuaCallbacks metaFunctions" newName="$metaFunctions" />
      <field signature="System.Collections.Generic.List`1&lt;System.Reflection.Assembly&gt; assemblies" newName="$assemblies" />
      <field signature="[Assembly-CSharp]XLua.LuaDLL.lua_CSFunction importTypeFunction" newName="$importTypeFunction" />
      <field signature="[Assembly-CSharp]XLua.LuaDLL.lua_CSFunction loadAssemblyFunction" newName="$loadAssemblyFunction" />
      <field signature="[Assembly-CSharp]XLua.LuaDLL.lua_CSFunction castFunction" newName="$castFunction" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;System.Type,System.Action`1&lt;nint&gt;&gt; delayWrap" newName="$delayWrap" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;System.Type,System.Func`3&lt;int,[Assembly-CSharp]XLua.LuaEnv,[Assembly-CSharp]XLua.LuaBase&gt;&gt; interfaceBridgeCreators" newName="$interfaceBridgeCreators" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;System.Type,System.Type&gt; aliasCfg" newName="$aliasCfg" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;System.Type,bool&gt; loaded_types" newName="$loaded_types" />
      <field signature="int cacheRef" newName="$cacheRef" />
      <field signature="System.Reflection.MethodInfo[] genericAction" newName="$genericAction" />
      <field signature="System.Reflection.MethodInfo[] genericFunc" newName="$genericFunc" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;System.Type,System.Func`2&lt;[Assembly-CSharp]XLua.DelegateBridgeBase,System.Delegate&gt;&gt; delegateCreatorCache" newName="$delegateCreatorCache" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,System.WeakReference&gt; delegate_bridges" newName="$delegate_bridges" />
      <field signature="int common_array_meta" newName="$common_array_meta" />
      <field signature="int common_delegate_meta" newName="$common_delegate_meta" />
      <field signature="int enumerable_pairs_func" newName="$enumerable_pairs_func" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;System.Type,int&gt; typeIdMap" newName="$typeIdMap" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,System.Type&gt; typeMap" newName="$typeMap" />
      <field signature="[System.Core]System.Collections.Generic.HashSet`1&lt;System.Type&gt; privateAccessibleFlags" newName="$privateAccessibleFlags" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;object,int&gt; enumMap" newName="$enumMap" />
      <field signature="System.Collections.Generic.List`1&lt;[Assembly-CSharp]XLua.LuaDLL.lua_CSFunction&gt; fix_cs_functions" newName="$fix_cs_functions" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;System.Type,[Assembly-CSharp]XLua.ObjectTranslator/PushCSObject&gt; custom_push_funcs" newName="$custom_push_funcs" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;System.Type,[Assembly-CSharp]XLua.ObjectTranslator/GetCSObject&gt; custom_get_funcs" newName="$custom_get_funcs" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;System.Type,[Assembly-CSharp]XLua.ObjectTranslator/UpdateCSObject&gt; custom_update_funcs" newName="$custom_update_funcs" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;System.Type,System.Delegate&gt; push_func_with_type" newName="$push_func_with_type" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;System.Type,System.Delegate&gt; get_func_with_type" newName="$get_func_with_type" />
      <field signature="int decimal_type_id" newName="$decimal_type_id" />
      <property signature="[Assembly-CSharp]XLua.ObjectTranslator/IniterAdderUnityEngineVector2 IniterAdderUnityEngineVector2_dumb_obj" newName="$IniterAdderUnityEngineVector2_dumb_obj" />
      <property signature="[Assembly-CSharp]XLua.CSObjectWrap.XLua_Gen_Initer_Register__ gen_reg_dumb_obj" newName="$gen_reg_dumb_obj" />
      <method signature="[Assembly-CSharp]XLua.ObjectTranslator/IniterAdderUnityEngineVector2 XLua.ObjectTranslator::get_IniterAdderUnityEngineVector2_dumb_obj()" newName="$get_IniterAdderUnityEngineVector2_dumb_obj" oldStackTraceSignature="XLua.ObjectTranslator:get_IniterAdderUnityEngineVector2_dumb_obj()" newStackTraceSignature="$XLua.$ObjectTranslator:$get_IniterAdderUnityEngineVector2_dumb_obj()" />
      <method signature="void XLua.ObjectTranslator::PushUnityEngineVector2([Assembly-CSharp]XLua.ObjectTranslator, nint, [UnityEngine.CoreModule]UnityEngine.Vector2)" newName="$PushUnityEngineVector2" oldStackTraceSignature="XLua.ObjectTranslator:PushUnityEngineVector2(IntPtr, Vector2)" newStackTraceSignature="$XLua.$ObjectTranslator:$PushUnityEngineVector2(IntPtr, Vector2)" />
      <method signature="void XLua.ObjectTranslator::Get([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [UnityEngine.CoreModule]UnityEngine.Vector2&amp;)" newName="$Get" oldStackTraceSignature="XLua.ObjectTranslator:Get(IntPtr, Int32, Vector2&amp;)" newStackTraceSignature="$XLua.$ObjectTranslator:$Get(IntPtr, Int32, Vector2&amp;)" />
      <method signature="void XLua.ObjectTranslator::UpdateUnityEngineVector2([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [UnityEngine.CoreModule]UnityEngine.Vector2)" newName="$UpdateUnityEngineVector2" oldStackTraceSignature="XLua.ObjectTranslator:UpdateUnityEngineVector2(IntPtr, Int32, Vector2)" newStackTraceSignature="$XLua.$ObjectTranslator:$UpdateUnityEngineVector2(IntPtr, Int32, Vector2)" />
      <method signature="void XLua.ObjectTranslator::PushUnityEngineVector3([Assembly-CSharp]XLua.ObjectTranslator, nint, [UnityEngine.CoreModule]UnityEngine.Vector3)" newName="$PushUnityEngineVector3" oldStackTraceSignature="XLua.ObjectTranslator:PushUnityEngineVector3(IntPtr, Vector3)" newStackTraceSignature="$XLua.$ObjectTranslator:$PushUnityEngineVector3(IntPtr, Vector3)" />
      <method signature="void XLua.ObjectTranslator::Get([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [UnityEngine.CoreModule]UnityEngine.Vector3&amp;)" newName="$Get62" oldStackTraceSignature="XLua.ObjectTranslator:Get(IntPtr, Int32, Vector3&amp;)" newStackTraceSignature="$XLua.$ObjectTranslator:$Get62(IntPtr, Int32, Vector3&amp;)" />
      <method signature="void XLua.ObjectTranslator::UpdateUnityEngineVector3([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [UnityEngine.CoreModule]UnityEngine.Vector3)" newName="$UpdateUnityEngineVector3" oldStackTraceSignature="XLua.ObjectTranslator:UpdateUnityEngineVector3(IntPtr, Int32, Vector3)" newStackTraceSignature="$XLua.$ObjectTranslator:$UpdateUnityEngineVector3(IntPtr, Int32, Vector3)" />
      <method signature="void XLua.ObjectTranslator::PushUnityEngineVector4([Assembly-CSharp]XLua.ObjectTranslator, nint, [UnityEngine.CoreModule]UnityEngine.Vector4)" newName="$PushUnityEngineVector4" oldStackTraceSignature="XLua.ObjectTranslator:PushUnityEngineVector4(IntPtr, Vector4)" newStackTraceSignature="$XLua.$ObjectTranslator:$PushUnityEngineVector4(IntPtr, Vector4)" />
      <method signature="void XLua.ObjectTranslator::Get([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [UnityEngine.CoreModule]UnityEngine.Vector4&amp;)" newName="$Get63" oldStackTraceSignature="XLua.ObjectTranslator:Get(IntPtr, Int32, Vector4&amp;)" newStackTraceSignature="$XLua.$ObjectTranslator:$Get63(IntPtr, Int32, Vector4&amp;)" />
      <method signature="void XLua.ObjectTranslator::UpdateUnityEngineVector4([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [UnityEngine.CoreModule]UnityEngine.Vector4)" newName="$UpdateUnityEngineVector4" oldStackTraceSignature="XLua.ObjectTranslator:UpdateUnityEngineVector4(IntPtr, Int32, Vector4)" newStackTraceSignature="$XLua.$ObjectTranslator:$UpdateUnityEngineVector4(IntPtr, Int32, Vector4)" />
      <method signature="void XLua.ObjectTranslator::PushUnityEngineColor([Assembly-CSharp]XLua.ObjectTranslator, nint, [UnityEngine.CoreModule]UnityEngine.Color)" newName="$PushUnityEngineColor" oldStackTraceSignature="XLua.ObjectTranslator:PushUnityEngineColor(IntPtr, Color)" newStackTraceSignature="$XLua.$ObjectTranslator:$PushUnityEngineColor(IntPtr, Color)" />
      <method signature="void XLua.ObjectTranslator::Get([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [UnityEngine.CoreModule]UnityEngine.Color&amp;)" newName="$Get64" oldStackTraceSignature="XLua.ObjectTranslator:Get(IntPtr, Int32, Color&amp;)" newStackTraceSignature="$XLua.$ObjectTranslator:$Get64(IntPtr, Int32, Color&amp;)" />
      <method signature="void XLua.ObjectTranslator::UpdateUnityEngineColor([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [UnityEngine.CoreModule]UnityEngine.Color)" newName="$UpdateUnityEngineColor" oldStackTraceSignature="XLua.ObjectTranslator:UpdateUnityEngineColor(IntPtr, Int32, Color)" newStackTraceSignature="$XLua.$ObjectTranslator:$UpdateUnityEngineColor(IntPtr, Int32, Color)" />
      <method signature="void XLua.ObjectTranslator::PushUnityEngineQuaternion([Assembly-CSharp]XLua.ObjectTranslator, nint, [UnityEngine.CoreModule]UnityEngine.Quaternion)" newName="$PushUnityEngineQuaternion" oldStackTraceSignature="XLua.ObjectTranslator:PushUnityEngineQuaternion(IntPtr, Quaternion)" newStackTraceSignature="$XLua.$ObjectTranslator:$PushUnityEngineQuaternion(IntPtr, Quaternion)" />
      <method signature="void XLua.ObjectTranslator::Get([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [UnityEngine.CoreModule]UnityEngine.Quaternion&amp;)" newName="$Get65" oldStackTraceSignature="XLua.ObjectTranslator:Get(IntPtr, Int32, Quaternion&amp;)" newStackTraceSignature="$XLua.$ObjectTranslator:$Get65(IntPtr, Int32, Quaternion&amp;)" />
      <method signature="void XLua.ObjectTranslator::UpdateUnityEngineQuaternion([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [UnityEngine.CoreModule]UnityEngine.Quaternion)" newName="$UpdateUnityEngineQuaternion" oldStackTraceSignature="XLua.ObjectTranslator:UpdateUnityEngineQuaternion(IntPtr, Int32, Quaternion)" newStackTraceSignature="$XLua.$ObjectTranslator:$UpdateUnityEngineQuaternion(IntPtr, Int32, Quaternion)" />
      <method signature="void XLua.ObjectTranslator::PushUnityEngineRay([Assembly-CSharp]XLua.ObjectTranslator, nint, [UnityEngine.CoreModule]UnityEngine.Ray)" newName="$PushUnityEngineRay" oldStackTraceSignature="XLua.ObjectTranslator:PushUnityEngineRay(IntPtr, Ray)" newStackTraceSignature="$XLua.$ObjectTranslator:$PushUnityEngineRay(IntPtr, Ray)" />
      <method signature="void XLua.ObjectTranslator::Get([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [UnityEngine.CoreModule]UnityEngine.Ray&amp;)" newName="$Get66" oldStackTraceSignature="XLua.ObjectTranslator:Get(IntPtr, Int32, Ray&amp;)" newStackTraceSignature="$XLua.$ObjectTranslator:$Get66(IntPtr, Int32, Ray&amp;)" />
      <method signature="void XLua.ObjectTranslator::UpdateUnityEngineRay([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [UnityEngine.CoreModule]UnityEngine.Ray)" newName="$UpdateUnityEngineRay" oldStackTraceSignature="XLua.ObjectTranslator:UpdateUnityEngineRay(IntPtr, Int32, Ray)" newStackTraceSignature="$XLua.$ObjectTranslator:$UpdateUnityEngineRay(IntPtr, Int32, Ray)" />
      <method signature="void XLua.ObjectTranslator::PushUnityEngineBounds([Assembly-CSharp]XLua.ObjectTranslator, nint, [UnityEngine.CoreModule]UnityEngine.Bounds)" newName="$PushUnityEngineBounds" oldStackTraceSignature="XLua.ObjectTranslator:PushUnityEngineBounds(IntPtr, Bounds)" newStackTraceSignature="$XLua.$ObjectTranslator:$PushUnityEngineBounds(IntPtr, Bounds)" />
      <method signature="void XLua.ObjectTranslator::Get([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [UnityEngine.CoreModule]UnityEngine.Bounds&amp;)" newName="$Get67" oldStackTraceSignature="XLua.ObjectTranslator:Get(IntPtr, Int32, Bounds&amp;)" newStackTraceSignature="$XLua.$ObjectTranslator:$Get67(IntPtr, Int32, Bounds&amp;)" />
      <method signature="void XLua.ObjectTranslator::UpdateUnityEngineBounds([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [UnityEngine.CoreModule]UnityEngine.Bounds)" newName="$UpdateUnityEngineBounds" oldStackTraceSignature="XLua.ObjectTranslator:UpdateUnityEngineBounds(IntPtr, Int32, Bounds)" newStackTraceSignature="$XLua.$ObjectTranslator:$UpdateUnityEngineBounds(IntPtr, Int32, Bounds)" />
      <method signature="void XLua.ObjectTranslator::PushUnityEngineRay2D([Assembly-CSharp]XLua.ObjectTranslator, nint, [UnityEngine.CoreModule]UnityEngine.Ray2D)" newName="$PushUnityEngineRay2D" oldStackTraceSignature="XLua.ObjectTranslator:PushUnityEngineRay2D(IntPtr, Ray2D)" newStackTraceSignature="$XLua.$ObjectTranslator:$PushUnityEngineRay2D(IntPtr, Ray2D)" />
      <method signature="void XLua.ObjectTranslator::Get([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [UnityEngine.CoreModule]UnityEngine.Ray2D&amp;)" newName="$Get68" oldStackTraceSignature="XLua.ObjectTranslator:Get(IntPtr, Int32, Ray2D&amp;)" newStackTraceSignature="$XLua.$ObjectTranslator:$Get68(IntPtr, Int32, Ray2D&amp;)" />
      <method signature="void XLua.ObjectTranslator::UpdateUnityEngineRay2D([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [UnityEngine.CoreModule]UnityEngine.Ray2D)" newName="$UpdateUnityEngineRay2D" oldStackTraceSignature="XLua.ObjectTranslator:UpdateUnityEngineRay2D(IntPtr, Int32, Ray2D)" newStackTraceSignature="$XLua.$ObjectTranslator:$UpdateUnityEngineRay2D(IntPtr, Int32, Ray2D)" />
      <method signature="void XLua.ObjectTranslator::PushXLuaTestPedding([Assembly-CSharp]XLua.ObjectTranslator, nint, [Assembly-CSharp]XLuaTest.Pedding)" newName="$PushXLuaTestPedding" oldStackTraceSignature="XLua.ObjectTranslator:PushXLuaTestPedding(IntPtr, Pedding)" newStackTraceSignature="$XLua.$ObjectTranslator:$PushXLuaTestPedding(IntPtr, $Pedding)" />
      <method signature="void XLua.ObjectTranslator::Get([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [Assembly-CSharp]XLuaTest.Pedding&amp;)" newName="$Get69" oldStackTraceSignature="XLua.ObjectTranslator:Get(IntPtr, Int32, Pedding&amp;)" newStackTraceSignature="$XLua.$ObjectTranslator:$Get69(IntPtr, Int32, $Pedding&amp;)" />
      <method signature="void XLua.ObjectTranslator::UpdateXLuaTestPedding([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [Assembly-CSharp]XLuaTest.Pedding)" newName="$UpdateXLuaTestPedding" oldStackTraceSignature="XLua.ObjectTranslator:UpdateXLuaTestPedding(IntPtr, Int32, Pedding)" newStackTraceSignature="$XLua.$ObjectTranslator:$UpdateXLuaTestPedding(IntPtr, Int32, $Pedding)" />
      <method signature="void XLua.ObjectTranslator::PushXLuaTestMyStruct([Assembly-CSharp]XLua.ObjectTranslator, nint, [Assembly-CSharp]XLuaTest.MyStruct)" newName="$PushXLuaTestMyStruct" oldStackTraceSignature="XLua.ObjectTranslator:PushXLuaTestMyStruct(IntPtr, MyStruct)" newStackTraceSignature="$XLua.$ObjectTranslator:$PushXLuaTestMyStruct(IntPtr, $MyStruct)" />
      <method signature="void XLua.ObjectTranslator::Get([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [Assembly-CSharp]XLuaTest.MyStruct&amp;)" newName="$Get70" oldStackTraceSignature="XLua.ObjectTranslator:Get(IntPtr, Int32, MyStruct&amp;)" newStackTraceSignature="$XLua.$ObjectTranslator:$Get70(IntPtr, Int32, $MyStruct&amp;)" />
      <method signature="void XLua.ObjectTranslator::UpdateXLuaTestMyStruct([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [Assembly-CSharp]XLuaTest.MyStruct)" newName="$UpdateXLuaTestMyStruct" oldStackTraceSignature="XLua.ObjectTranslator:UpdateXLuaTestMyStruct(IntPtr, Int32, MyStruct)" newStackTraceSignature="$XLua.$ObjectTranslator:$UpdateXLuaTestMyStruct(IntPtr, Int32, $MyStruct)" />
      <method signature="void XLua.ObjectTranslator::PushXLuaTestPushAsTableStruct([Assembly-CSharp]XLua.ObjectTranslator, nint, [Assembly-CSharp]XLuaTest.PushAsTableStruct)" newName="$PushXLuaTestPushAsTableStruct" oldStackTraceSignature="XLua.ObjectTranslator:PushXLuaTestPushAsTableStruct(IntPtr, PushAsTableStruct)" newStackTraceSignature="$XLua.$ObjectTranslator:$PushXLuaTestPushAsTableStruct(IntPtr, $PushAsTableStruct)" />
      <method signature="void XLua.ObjectTranslator::Get([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [Assembly-CSharp]XLuaTest.PushAsTableStruct&amp;)" newName="$Get71" oldStackTraceSignature="XLua.ObjectTranslator:Get(IntPtr, Int32, PushAsTableStruct&amp;)" newStackTraceSignature="$XLua.$ObjectTranslator:$Get71(IntPtr, Int32, $PushAsTableStruct&amp;)" />
      <method signature="void XLua.ObjectTranslator::UpdateXLuaTestPushAsTableStruct([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [Assembly-CSharp]XLuaTest.PushAsTableStruct)" newName="$UpdateXLuaTestPushAsTableStruct" oldStackTraceSignature="XLua.ObjectTranslator:UpdateXLuaTestPushAsTableStruct(IntPtr, Int32, PushAsTableStruct)" newStackTraceSignature="$XLua.$ObjectTranslator:$UpdateXLuaTestPushAsTableStruct(IntPtr, Int32, $PushAsTableStruct)" />
      <method signature="void XLua.ObjectTranslator::PushTutorialTestEnum([Assembly-CSharp]XLua.ObjectTranslator, nint, [Assembly-CSharp]Tutorial.TestEnum)" newName="$PushTutorialTestEnum" oldStackTraceSignature="XLua.ObjectTranslator:PushTutorialTestEnum(IntPtr, TestEnum)" newStackTraceSignature="$XLua.$ObjectTranslator:$PushTutorialTestEnum(IntPtr, $TestEnum)" />
      <method signature="void XLua.ObjectTranslator::Get([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [Assembly-CSharp]Tutorial.TestEnum&amp;)" newName="$Get72" oldStackTraceSignature="XLua.ObjectTranslator:Get(IntPtr, Int32, TestEnum&amp;)" newStackTraceSignature="$XLua.$ObjectTranslator:$Get72(IntPtr, Int32, $TestEnum&amp;)" />
      <method signature="void XLua.ObjectTranslator::UpdateTutorialTestEnum([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [Assembly-CSharp]Tutorial.TestEnum)" newName="$UpdateTutorialTestEnum" oldStackTraceSignature="XLua.ObjectTranslator:UpdateTutorialTestEnum(IntPtr, Int32, TestEnum)" newStackTraceSignature="$XLua.$ObjectTranslator:$UpdateTutorialTestEnum(IntPtr, Int32, $TestEnum)" />
      <method signature="void XLua.ObjectTranslator::PushXLuaTestMyEnum([Assembly-CSharp]XLua.ObjectTranslator, nint, [Assembly-CSharp]XLuaTest.MyEnum)" newName="$PushXLuaTestMyEnum" oldStackTraceSignature="XLua.ObjectTranslator:PushXLuaTestMyEnum(IntPtr, MyEnum)" newStackTraceSignature="$XLua.$ObjectTranslator:$PushXLuaTestMyEnum(IntPtr, $MyEnum)" />
      <method signature="void XLua.ObjectTranslator::Get([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [Assembly-CSharp]XLuaTest.MyEnum&amp;)" newName="$Get73" oldStackTraceSignature="XLua.ObjectTranslator:Get(IntPtr, Int32, MyEnum&amp;)" newStackTraceSignature="$XLua.$ObjectTranslator:$Get73(IntPtr, Int32, $MyEnum&amp;)" />
      <method signature="void XLua.ObjectTranslator::UpdateXLuaTestMyEnum([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [Assembly-CSharp]XLuaTest.MyEnum)" newName="$UpdateXLuaTestMyEnum" oldStackTraceSignature="XLua.ObjectTranslator:UpdateXLuaTestMyEnum(IntPtr, Int32, MyEnum)" newStackTraceSignature="$XLua.$ObjectTranslator:$UpdateXLuaTestMyEnum(IntPtr, Int32, $MyEnum)" />
      <method signature="void XLua.ObjectTranslator::PushTutorialDerivedClassTestEnumInner([Assembly-CSharp]XLua.ObjectTranslator, nint, [Assembly-CSharp]Tutorial.DerivedClass/TestEnumInner)" newName="$PushTutorialDerivedClassTestEnumInner" oldStackTraceSignature="XLua.ObjectTranslator:PushTutorialDerivedClassTestEnumInner(IntPtr, TestEnumInner)" newStackTraceSignature="$XLua.$ObjectTranslator:$PushTutorialDerivedClassTestEnumInner(IntPtr, $TestEnumInner)" />
      <method signature="void XLua.ObjectTranslator::Get([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [Assembly-CSharp]Tutorial.DerivedClass/TestEnumInner&amp;)" newName="$Get74" oldStackTraceSignature="XLua.ObjectTranslator:Get(IntPtr, Int32, TestEnumInner&amp;)" newStackTraceSignature="$XLua.$ObjectTranslator:$Get74(IntPtr, Int32, $TestEnumInner&amp;)" />
      <method signature="void XLua.ObjectTranslator::UpdateTutorialDerivedClassTestEnumInner([Assembly-CSharp]XLua.ObjectTranslator, nint, int, [Assembly-CSharp]Tutorial.DerivedClass/TestEnumInner)" newName="$UpdateTutorialDerivedClassTestEnumInner" oldStackTraceSignature="XLua.ObjectTranslator:UpdateTutorialDerivedClassTestEnumInner(IntPtr, Int32, TestEnumInner)" newStackTraceSignature="$XLua.$ObjectTranslator:$UpdateTutorialDerivedClassTestEnumInner(IntPtr, Int32, $TestEnumInner)" />
      <method signature="[Assembly-CSharp]XLua.CSObjectWrap.XLua_Gen_Initer_Register__ XLua.ObjectTranslator::get_gen_reg_dumb_obj()" newName="$get_gen_reg_dumb_obj" oldStackTraceSignature="XLua.ObjectTranslator:get_gen_reg_dumb_obj()" newStackTraceSignature="$XLua.$ObjectTranslator:$get_gen_reg_dumb_obj()" />
      <method signature="void XLua.ObjectTranslator::DelayWrapLoader([Assembly-CSharp]XLua.ObjectTranslator, System.Type, System.Action`1&lt;nint&gt;)" newName="$DelayWrapLoader" oldStackTraceSignature="XLua.ObjectTranslator:DelayWrapLoader(Type, Action`1)" newStackTraceSignature="$XLua.$ObjectTranslator:$DelayWrapLoader(Type, Action`1)" />
      <method signature="void XLua.ObjectTranslator::AddInterfaceBridgeCreator([Assembly-CSharp]XLua.ObjectTranslator, System.Type, System.Func`3&lt;int,[Assembly-CSharp]XLua.LuaEnv,[Assembly-CSharp]XLua.LuaBase&gt;)" newName="$AddInterfaceBridgeCreator" oldStackTraceSignature="XLua.ObjectTranslator:AddInterfaceBridgeCreator(Type, Func`3)" newStackTraceSignature="$XLua.$ObjectTranslator:$AddInterfaceBridgeCreator(Type, Func`3)" />
      <method signature="bool XLua.ObjectTranslator::TryDelayWrapLoader([Assembly-CSharp]XLua.ObjectTranslator, nint, System.Type)" newName="$TryDelayWrapLoader" oldStackTraceSignature="XLua.ObjectTranslator:TryDelayWrapLoader(IntPtr, Type)" newStackTraceSignature="$XLua.$ObjectTranslator:$TryDelayWrapLoader(IntPtr, Type)" />
      <method signature="void XLua.ObjectTranslator::Alias([Assembly-CSharp]XLua.ObjectTranslator, System.Type, string)" newName="$Alias" oldStackTraceSignature="XLua.ObjectTranslator:Alias(Type, String)" newStackTraceSignature="$XLua.$ObjectTranslator:$Alias(Type, String)" />
      <method signature="void XLua.ObjectTranslator::addAssemblieByName([Assembly-CSharp]XLua.ObjectTranslator, System.Collections.Generic.IEnumerable`1&lt;System.Reflection.Assembly&gt;, string)" newName="$addAssemblieByName" oldStackTraceSignature="XLua.ObjectTranslator:addAssemblieByName(IEnumerable`1, String)" newStackTraceSignature="$XLua.$ObjectTranslator:$addAssemblieByName(IEnumerable`1, String)" />
      <method signature="void XLua.ObjectTranslator::initCSharpCallLua([Assembly-CSharp]XLua.ObjectTranslator)" newName="$initCSharpCallLua" oldStackTraceSignature="XLua.ObjectTranslator:initCSharpCallLua()" newStackTraceSignature="$XLua.$ObjectTranslator:$initCSharpCallLua()" />
      <method signature="System.Func`2&lt;[Assembly-CSharp]XLua.DelegateBridgeBase,System.Delegate&gt; XLua.ObjectTranslator::getCreatorUsingGeneric([Assembly-CSharp]XLua.ObjectTranslator, [Assembly-CSharp]XLua.DelegateBridgeBase, System.Type, System.Reflection.MethodInfo)" newName="$getCreatorUsingGeneric" oldStackTraceSignature="XLua.ObjectTranslator:getCreatorUsingGeneric(DelegateBridgeBase, Type, MethodInfo)" newStackTraceSignature="$XLua.$ObjectTranslator:$getCreatorUsingGeneric($DelegateBridgeBase, Type, MethodInfo)" />
      <method signature="System.Delegate XLua.ObjectTranslator::getDelegate([Assembly-CSharp]XLua.ObjectTranslator, [Assembly-CSharp]XLua.DelegateBridgeBase, System.Type)" newName="$getDelegate" oldStackTraceSignature="XLua.ObjectTranslator:getDelegate(DelegateBridgeBase, Type)" newStackTraceSignature="$XLua.$ObjectTranslator:$getDelegate($DelegateBridgeBase, Type)" />
      <method signature="object XLua.ObjectTranslator::CreateDelegateBridge([Assembly-CSharp]XLua.ObjectTranslator, nint, System.Type, int)" newName="$CreateDelegateBridge" oldStackTraceSignature="XLua.ObjectTranslator:CreateDelegateBridge(IntPtr, Type, Int32)" newStackTraceSignature="$XLua.$ObjectTranslator:$CreateDelegateBridge(IntPtr, Type, Int32)" />
      <method signature="bool XLua.ObjectTranslator::AllDelegateBridgeReleased([Assembly-CSharp]XLua.ObjectTranslator)" newName="$AllDelegateBridgeReleased" oldStackTraceSignature="XLua.ObjectTranslator:AllDelegateBridgeReleased()" newStackTraceSignature="$XLua.$ObjectTranslator:$AllDelegateBridgeReleased()" />
      <method signature="void XLua.ObjectTranslator::ReleaseLuaBase([Assembly-CSharp]XLua.ObjectTranslator, nint, int, bool)" newName="$ReleaseLuaBase" oldStackTraceSignature="XLua.ObjectTranslator:ReleaseLuaBase(IntPtr, Int32, Boolean)" newStackTraceSignature="$XLua.$ObjectTranslator:$ReleaseLuaBase(IntPtr, Int32, Boolean)" />
      <method signature="object XLua.ObjectTranslator::CreateInterfaceBridge([Assembly-CSharp]XLua.ObjectTranslator, nint, System.Type, int)" newName="$CreateInterfaceBridge" oldStackTraceSignature="XLua.ObjectTranslator:CreateInterfaceBridge(IntPtr, Type, Int32)" newStackTraceSignature="$XLua.$ObjectTranslator:$CreateInterfaceBridge(IntPtr, Type, Int32)" />
      <method signature="void XLua.ObjectTranslator::CreateArrayMetatable([Assembly-CSharp]XLua.ObjectTranslator, nint)" newName="$CreateArrayMetatable" oldStackTraceSignature="XLua.ObjectTranslator:CreateArrayMetatable(IntPtr)" newStackTraceSignature="$XLua.$ObjectTranslator:$CreateArrayMetatable(IntPtr)" />
      <method signature="void XLua.ObjectTranslator::CreateDelegateMetatable([Assembly-CSharp]XLua.ObjectTranslator, nint)" newName="$CreateDelegateMetatable" oldStackTraceSignature="XLua.ObjectTranslator:CreateDelegateMetatable(IntPtr)" newStackTraceSignature="$XLua.$ObjectTranslator:$CreateDelegateMetatable(IntPtr)" />
      <method signature="void XLua.ObjectTranslator::CreateEnumerablePairs([Assembly-CSharp]XLua.ObjectTranslator, nint)" newName="$CreateEnumerablePairs" oldStackTraceSignature="XLua.ObjectTranslator:CreateEnumerablePairs(IntPtr)" newStackTraceSignature="$XLua.$ObjectTranslator:$CreateEnumerablePairs(IntPtr)" />
      <method signature="void XLua.ObjectTranslator::OpenLib([Assembly-CSharp]XLua.ObjectTranslator, nint)" newName="$OpenLib" oldStackTraceSignature="XLua.ObjectTranslator:OpenLib(IntPtr)" newStackTraceSignature="$XLua.$ObjectTranslator:$OpenLib(IntPtr)" />
      <method signature="void XLua.ObjectTranslator::createFunctionMetatable([Assembly-CSharp]XLua.ObjectTranslator, nint)" newName="$createFunctionMetatable" oldStackTraceSignature="XLua.ObjectTranslator:createFunctionMetatable(IntPtr)" newStackTraceSignature="$XLua.$ObjectTranslator:$createFunctionMetatable(IntPtr)" />
      <method signature="System.Type XLua.ObjectTranslator::FindType([Assembly-CSharp]XLua.ObjectTranslator, string, bool)" newName="$FindType" oldStackTraceSignature="XLua.ObjectTranslator:FindType(String, Boolean)" newStackTraceSignature="$XLua.$ObjectTranslator:$FindType(String, Boolean)" />
      <method signature="bool XLua.ObjectTranslator::hasMethod([Assembly-CSharp]XLua.ObjectTranslator, System.Type, string)" newName="$hasMethod" oldStackTraceSignature="XLua.ObjectTranslator:hasMethod(Type, String)" newStackTraceSignature="$XLua.$ObjectTranslator:$hasMethod(Type, String)" />
      <method signature="void XLua.ObjectTranslator::collectObject([Assembly-CSharp]XLua.ObjectTranslator, int)" newName="$collectObject" oldStackTraceSignature="XLua.ObjectTranslator:collectObject(Int32)" newStackTraceSignature="$XLua.$ObjectTranslator:$collectObject(Int32)" />
      <method signature="int XLua.ObjectTranslator::addObject([Assembly-CSharp]XLua.ObjectTranslator, object, bool, bool)" newName="$addObject" oldStackTraceSignature="XLua.ObjectTranslator:addObject(Object, Boolean, Boolean)" newStackTraceSignature="$XLua.$ObjectTranslator:$addObject(Object, Boolean, Boolean)" />
      <method signature="object XLua.ObjectTranslator::GetObject([Assembly-CSharp]XLua.ObjectTranslator, nint, int)" newName="$GetObject" oldStackTraceSignature="XLua.ObjectTranslator:GetObject(IntPtr, Int32)" newStackTraceSignature="$XLua.$ObjectTranslator:$GetObject(IntPtr, Int32)" />
      <method signature="System.Type XLua.ObjectTranslator::GetTypeOf([Assembly-CSharp]XLua.ObjectTranslator, nint, int)" newName="$GetTypeOf" oldStackTraceSignature="XLua.ObjectTranslator:GetTypeOf(IntPtr, Int32)" newStackTraceSignature="$XLua.$ObjectTranslator:$GetTypeOf(IntPtr, Int32)" />
      <method signature="bool XLua.ObjectTranslator::Assignable`1([Assembly-CSharp]XLua.ObjectTranslator, nint, int)" newName="$Assignable" oldStackTraceSignature="XLua.ObjectTranslator:Assignable(IntPtr, Int32)" newStackTraceSignature="$XLua.$ObjectTranslator:$Assignable(IntPtr, Int32)" />
      <method signature="bool XLua.ObjectTranslator::Assignable([Assembly-CSharp]XLua.ObjectTranslator, nint, int, System.Type)" newName="$Assignable75" oldStackTraceSignature="XLua.ObjectTranslator:Assignable(IntPtr, Int32, Type)" newStackTraceSignature="$XLua.$ObjectTranslator:$Assignable75(IntPtr, Int32, Type)" />
      <method signature="object XLua.ObjectTranslator::GetObject([Assembly-CSharp]XLua.ObjectTranslator, nint, int, System.Type)" newName="$GetObject76" oldStackTraceSignature="XLua.ObjectTranslator:GetObject(IntPtr, Int32, Type)" newStackTraceSignature="$XLua.$ObjectTranslator:$GetObject76(IntPtr, Int32, Type)" />
      <method signature="void XLua.ObjectTranslator::Get`1([Assembly-CSharp]XLua.ObjectTranslator, nint, int, !!0&amp;)" newName="$Get77" oldStackTraceSignature="XLua.ObjectTranslator:Get(IntPtr, Int32, T&amp;)" newStackTraceSignature="$XLua.$ObjectTranslator:$Get77(IntPtr, Int32, T&amp;)" />
      <method signature="void XLua.ObjectTranslator::PushByType`1([Assembly-CSharp]XLua.ObjectTranslator, nint, !!0)" newName="$PushByType" oldStackTraceSignature="XLua.ObjectTranslator:PushByType(IntPtr, T)" newStackTraceSignature="$XLua.$ObjectTranslator:$PushByType(IntPtr, T)" />
      <method signature="!!0[] XLua.ObjectTranslator::GetParams`1([Assembly-CSharp]XLua.ObjectTranslator, nint, int)" newName="$GetParams" oldStackTraceSignature="XLua.ObjectTranslator:GetParams(IntPtr, Int32)" newStackTraceSignature="$XLua.$ObjectTranslator:$GetParams(IntPtr, Int32)" />
      <method signature="System.Array XLua.ObjectTranslator::GetParams([Assembly-CSharp]XLua.ObjectTranslator, nint, int, System.Type)" newName="$GetParams78" oldStackTraceSignature="XLua.ObjectTranslator:GetParams(IntPtr, Int32, Type)" newStackTraceSignature="$XLua.$ObjectTranslator:$GetParams78(IntPtr, Int32, Type)" />
      <method signature="!!0 XLua.ObjectTranslator::GetDelegate`1([Assembly-CSharp]XLua.ObjectTranslator, nint, int)" newName="$GetDelegate" oldStackTraceSignature="XLua.ObjectTranslator:GetDelegate(IntPtr, Int32)" newStackTraceSignature="$XLua.$ObjectTranslator:$GetDelegate(IntPtr, Int32)" />
      <method signature="int XLua.ObjectTranslator::GetTypeId([Assembly-CSharp]XLua.ObjectTranslator, nint, System.Type)" newName="$GetTypeId" oldStackTraceSignature="XLua.ObjectTranslator:GetTypeId(IntPtr, Type)" newStackTraceSignature="$XLua.$ObjectTranslator:$GetTypeId(IntPtr, Type)" />
      <method signature="void XLua.ObjectTranslator::PrivateAccessible([Assembly-CSharp]XLua.ObjectTranslator, nint, System.Type)" newName="$PrivateAccessible" oldStackTraceSignature="XLua.ObjectTranslator:PrivateAccessible(IntPtr, Type)" newStackTraceSignature="$XLua.$ObjectTranslator:$PrivateAccessible(IntPtr, Type)" />
      <method signature="int XLua.ObjectTranslator::getTypeId([Assembly-CSharp]XLua.ObjectTranslator, nint, System.Type, bool&amp;, [Assembly-CSharp]XLua.ObjectTranslator/LOGLEVEL)" newName="$getTypeId" oldStackTraceSignature="XLua.ObjectTranslator:getTypeId(IntPtr, Type, Boolean&amp;, LOGLEVEL)" newStackTraceSignature="$XLua.$ObjectTranslator:$getTypeId(IntPtr, Type, Boolean&amp;, $LOGLEVEL)" />
      <method signature="void XLua.ObjectTranslator::pushPrimitive([Assembly-CSharp]XLua.ObjectTranslator, nint, object)" newName="$pushPrimitive" oldStackTraceSignature="XLua.ObjectTranslator:pushPrimitive(IntPtr, Object)" newStackTraceSignature="$XLua.$ObjectTranslator:$pushPrimitive(IntPtr, Object)" />
      <method signature="void XLua.ObjectTranslator::PushAny([Assembly-CSharp]XLua.ObjectTranslator, nint, object)" newName="$PushAny" oldStackTraceSignature="XLua.ObjectTranslator:PushAny(IntPtr, Object)" newStackTraceSignature="$XLua.$ObjectTranslator:$PushAny(IntPtr, Object)" />
      <method signature="int XLua.ObjectTranslator::TranslateToEnumToTop([Assembly-CSharp]XLua.ObjectTranslator, nint, System.Type, int)" newName="$TranslateToEnumToTop" oldStackTraceSignature="XLua.ObjectTranslator:TranslateToEnumToTop(IntPtr, Type, Int32)" newStackTraceSignature="$XLua.$ObjectTranslator:$TranslateToEnumToTop(IntPtr, Type, Int32)" />
      <method signature="void XLua.ObjectTranslator::Push([Assembly-CSharp]XLua.ObjectTranslator, nint, [Assembly-CSharp]XLua.LuaDLL.lua_CSFunction)" newName="$Push" oldStackTraceSignature="XLua.ObjectTranslator:Push(IntPtr, lua_CSFunction)" newStackTraceSignature="$XLua.$ObjectTranslator:$Push(IntPtr, $lua_CSFunction)" />
      <method signature="void XLua.ObjectTranslator::Push([Assembly-CSharp]XLua.ObjectTranslator, nint, [Assembly-CSharp]XLua.LuaBase)" newName="$Push79" oldStackTraceSignature="XLua.ObjectTranslator:Push(IntPtr, LuaBase)" newStackTraceSignature="$XLua.$ObjectTranslator:$Push79(IntPtr, $LuaBase)" />
      <method signature="void XLua.ObjectTranslator::Push([Assembly-CSharp]XLua.ObjectTranslator, nint, object)" newName="$Push80" oldStackTraceSignature="XLua.ObjectTranslator:Push(IntPtr, Object)" newStackTraceSignature="$XLua.$ObjectTranslator:$Push80(IntPtr, Object)" />
      <method signature="void XLua.ObjectTranslator::PushObject([Assembly-CSharp]XLua.ObjectTranslator, nint, object, int)" newName="$PushObject" oldStackTraceSignature="XLua.ObjectTranslator:PushObject(IntPtr, Object, Int32)" newStackTraceSignature="$XLua.$ObjectTranslator:$PushObject(IntPtr, Object, Int32)" />
      <method signature="void XLua.ObjectTranslator::Update([Assembly-CSharp]XLua.ObjectTranslator, nint, int, object)" newName="$Update" oldStackTraceSignature="XLua.ObjectTranslator:Update(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$ObjectTranslator:$Update(IntPtr, Int32, Object)" />
      <method signature="object XLua.ObjectTranslator::getCsObj([Assembly-CSharp]XLua.ObjectTranslator, nint, int, int)" newName="$getCsObj" oldStackTraceSignature="XLua.ObjectTranslator:getCsObj(IntPtr, Int32, Int32)" newStackTraceSignature="$XLua.$ObjectTranslator:$getCsObj(IntPtr, Int32, Int32)" />
      <method signature="object XLua.ObjectTranslator::SafeGetCSObj([Assembly-CSharp]XLua.ObjectTranslator, nint, int)" newName="$SafeGetCSObj" oldStackTraceSignature="XLua.ObjectTranslator:SafeGetCSObj(IntPtr, Int32)" newStackTraceSignature="$XLua.$ObjectTranslator:$SafeGetCSObj(IntPtr, Int32)" />
      <method signature="object XLua.ObjectTranslator::FastGetCSObj([Assembly-CSharp]XLua.ObjectTranslator, nint, int)" newName="$FastGetCSObj" oldStackTraceSignature="XLua.ObjectTranslator:FastGetCSObj(IntPtr, Int32)" newStackTraceSignature="$XLua.$ObjectTranslator:$FastGetCSObj(IntPtr, Int32)" />
      <method signature="void XLua.ObjectTranslator::ReleaseCSObj([Assembly-CSharp]XLua.ObjectTranslator, nint, int)" newName="$ReleaseCSObj" oldStackTraceSignature="XLua.ObjectTranslator:ReleaseCSObj(IntPtr, Int32)" newStackTraceSignature="$XLua.$ObjectTranslator:$ReleaseCSObj(IntPtr, Int32)" />
      <method signature="[Assembly-CSharp]XLua.LuaDLL.lua_CSFunction XLua.ObjectTranslator::GetFixCSFunction([Assembly-CSharp]XLua.ObjectTranslator, int)" newName="$GetFixCSFunction" oldStackTraceSignature="XLua.ObjectTranslator:GetFixCSFunction(Int32)" newStackTraceSignature="$XLua.$ObjectTranslator:$GetFixCSFunction(Int32)" />
      <method signature="void XLua.ObjectTranslator::PushFixCSFunction([Assembly-CSharp]XLua.ObjectTranslator, nint, [Assembly-CSharp]XLua.LuaDLL.lua_CSFunction)" newName="$PushFixCSFunction" oldStackTraceSignature="XLua.ObjectTranslator:PushFixCSFunction(IntPtr, lua_CSFunction)" newStackTraceSignature="$XLua.$ObjectTranslator:$PushFixCSFunction(IntPtr, $lua_CSFunction)" />
      <method signature="object[] XLua.ObjectTranslator::popValues([Assembly-CSharp]XLua.ObjectTranslator, nint, int)" newName="$popValues" oldStackTraceSignature="XLua.ObjectTranslator:popValues(IntPtr, Int32)" newStackTraceSignature="$XLua.$ObjectTranslator:$popValues(IntPtr, Int32)" />
      <method signature="object[] XLua.ObjectTranslator::popValues([Assembly-CSharp]XLua.ObjectTranslator, nint, int, System.Type[])" newName="$popValues81" oldStackTraceSignature="XLua.ObjectTranslator:popValues(IntPtr, Int32, Type[])" newStackTraceSignature="$XLua.$ObjectTranslator:$popValues81(IntPtr, Int32, Type[])" />
      <method signature="void XLua.ObjectTranslator::registerCustomOp([Assembly-CSharp]XLua.ObjectTranslator, System.Type, [Assembly-CSharp]XLua.ObjectTranslator/PushCSObject, [Assembly-CSharp]XLua.ObjectTranslator/GetCSObject, [Assembly-CSharp]XLua.ObjectTranslator/UpdateCSObject)" newName="$registerCustomOp" oldStackTraceSignature="XLua.ObjectTranslator:registerCustomOp(Type, PushCSObject, GetCSObject, UpdateCSObject)" newStackTraceSignature="$XLua.$ObjectTranslator:$registerCustomOp(Type, $PushCSObject, $GetCSObject, $UpdateCSObject)" />
      <method signature="bool XLua.ObjectTranslator::HasCustomOp([Assembly-CSharp]XLua.ObjectTranslator, System.Type)" newName="$HasCustomOp" oldStackTraceSignature="XLua.ObjectTranslator:HasCustomOp(Type)" newStackTraceSignature="$XLua.$ObjectTranslator:$HasCustomOp(Type)" />
      <method signature="bool XLua.ObjectTranslator::tryGetPushFuncByType`1([Assembly-CSharp]XLua.ObjectTranslator, System.Type, !!0&amp;)" newName="$tryGetPushFuncByType" oldStackTraceSignature="XLua.ObjectTranslator:tryGetPushFuncByType(Type, T&amp;)" newStackTraceSignature="$XLua.$ObjectTranslator:$tryGetPushFuncByType(Type, T&amp;)" />
      <method signature="bool XLua.ObjectTranslator::tryGetGetFuncByType`1([Assembly-CSharp]XLua.ObjectTranslator, System.Type, !!0&amp;)" newName="$tryGetGetFuncByType" oldStackTraceSignature="XLua.ObjectTranslator:tryGetGetFuncByType(Type, T&amp;)" newStackTraceSignature="$XLua.$ObjectTranslator:$tryGetGetFuncByType(Type, T&amp;)" />
      <method signature="void XLua.ObjectTranslator::RegisterPushAndGetAndUpdate`1([Assembly-CSharp]XLua.ObjectTranslator, System.Action`2&lt;nint,!!0&gt;, [Assembly-CSharp]XLua.ObjectTranslator/GetFunc`1&lt;!!0&gt;, System.Action`3&lt;nint,int,!!0&gt;)" newName="$RegisterPushAndGetAndUpdate" oldStackTraceSignature="XLua.ObjectTranslator:RegisterPushAndGetAndUpdate(Action`2, GetFunc`1, Action`3)" newStackTraceSignature="$XLua.$ObjectTranslator:$RegisterPushAndGetAndUpdate(Action`2, $GetFunc`1, Action`3)" />
      <method signature="void XLua.ObjectTranslator::RegisterChecker`1([Assembly-CSharp]XLua.ObjectTranslator, [Assembly-CSharp]XLua.ObjectTranslator/CheckFunc`1&lt;!!0&gt;)" newName="$RegisterChecker" oldStackTraceSignature="XLua.ObjectTranslator:RegisterChecker(CheckFunc`1)" newStackTraceSignature="$XLua.$ObjectTranslator:$RegisterChecker($CheckFunc`1)" />
      <method signature="void XLua.ObjectTranslator::RegisterCaster`1([Assembly-CSharp]XLua.ObjectTranslator, [Assembly-CSharp]XLua.ObjectTranslator/GetFunc`1&lt;!!0&gt;)" newName="$RegisterCaster" oldStackTraceSignature="XLua.ObjectTranslator:RegisterCaster(GetFunc`1)" newStackTraceSignature="$XLua.$ObjectTranslator:$RegisterCaster($GetFunc`1)" />
      <method signature="void XLua.ObjectTranslator::PushDecimal([Assembly-CSharp]XLua.ObjectTranslator, nint, System.Decimal)" newName="$PushDecimal" oldStackTraceSignature="XLua.ObjectTranslator:PushDecimal(IntPtr, Decimal)" newStackTraceSignature="$XLua.$ObjectTranslator:$PushDecimal(IntPtr, Decimal)" />
      <method signature="bool XLua.ObjectTranslator::IsDecimal([Assembly-CSharp]XLua.ObjectTranslator, nint, int)" newName="$IsDecimal" oldStackTraceSignature="XLua.ObjectTranslator:IsDecimal(IntPtr, Int32)" newStackTraceSignature="$XLua.$ObjectTranslator:$IsDecimal(IntPtr, Int32)" />
      <method signature="System.Decimal XLua.ObjectTranslator::GetDecimal([Assembly-CSharp]XLua.ObjectTranslator, nint, int)" newName="$GetDecimal" oldStackTraceSignature="XLua.ObjectTranslator:GetDecimal(IntPtr, Int32)" newStackTraceSignature="$XLua.$ObjectTranslator:$GetDecimal(IntPtr, Int32)" />
      <method signature="void XLua.ObjectTranslator::Get([Assembly-CSharp]XLua.ObjectTranslator, nint, int, System.Decimal&amp;)" newName="$Get82" oldStackTraceSignature="XLua.ObjectTranslator:Get(IntPtr, Int32, Decimal&amp;)" newStackTraceSignature="$XLua.$ObjectTranslator:$Get82(IntPtr, Int32, Decimal&amp;)" />
      <method signature="System.Decimal XLua.ObjectTranslator::&lt;tryGetGetFuncByType&gt;b__157_0`1([Assembly-CSharp]XLua.ObjectTranslator, nint, int)" newName="$&lt;tryGetGetFuncByType&gt;b__157_0" oldStackTraceSignature="XLua.ObjectTranslator:&lt;tryGetGetFuncByType&gt;b__157_0(IntPtr, Int32)" newStackTraceSignature="$XLua.$ObjectTranslator:$&lt;tryGetGetFuncByType&gt;b__157_0(IntPtr, Int32)" />
    </type>
    <type fullName="XLua.ObjectTranslator/&lt;&gt;c" newFullName="" status="NotRenamed">
      <field signature="[Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c &lt;&gt;9" newName="$&lt;&gt;96" />
      <field signature="System.Func`2&lt;System.Reflection.MethodInfo,bool&gt; &lt;&gt;9__93_1" newName="$&lt;&gt;9__93_1" />
      <field signature="System.Func`2&lt;System.Reflection.MethodInfo,int&gt; &lt;&gt;9__93_2" newName="$&lt;&gt;9__93_2" />
      <field signature="System.Func`2&lt;System.Reflection.MethodInfo,bool&gt; &lt;&gt;9__93_3" newName="$&lt;&gt;9__93_3" />
      <field signature="System.Func`2&lt;System.Reflection.MethodInfo,int&gt; &lt;&gt;9__93_4" newName="$&lt;&gt;9__93_4" />
      <field signature="System.Func`2&lt;[Assembly-CSharp]XLua.DelegateBridgeBase,System.Delegate&gt; &lt;&gt;9__93_0" newName="$&lt;&gt;9__93_0" />
      <field signature="System.Func`2&lt;[Assembly-CSharp]XLua.DelegateBridgeBase,System.Delegate&gt; &lt;&gt;9__93_5" newName="$&lt;&gt;9__93_5" />
      <field signature="System.Func`2&lt;System.Reflection.ParameterInfo,System.Type&gt; &lt;&gt;9__93_6" newName="$&lt;&gt;9__93_6" />
      <field signature="System.Func`2&lt;System.Reflection.MethodInfo,bool&gt; &lt;&gt;9__94_0" newName="$&lt;&gt;9__94_0" />
      <method signature="bool XLua.ObjectTranslator/&lt;&gt;c::&lt;getCreatorUsingGeneric&gt;b__93_1([Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c, System.Reflection.MethodInfo)" newName="$&lt;getCreatorUsingGeneric&gt;b__93_1" oldStackTraceSignature="XLua.&lt;&gt;c:&lt;getCreatorUsingGeneric&gt;b__93_1(MethodInfo)" newStackTraceSignature="$XLua.&lt;&gt;c:$&lt;getCreatorUsingGeneric&gt;b__93_1(MethodInfo)" />
      <method signature="int XLua.ObjectTranslator/&lt;&gt;c::&lt;getCreatorUsingGeneric&gt;b__93_2([Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c, System.Reflection.MethodInfo)" newName="$&lt;getCreatorUsingGeneric&gt;b__93_2" oldStackTraceSignature="XLua.&lt;&gt;c:&lt;getCreatorUsingGeneric&gt;b__93_2(MethodInfo)" newStackTraceSignature="$XLua.&lt;&gt;c:$&lt;getCreatorUsingGeneric&gt;b__93_2(MethodInfo)" />
      <method signature="bool XLua.ObjectTranslator/&lt;&gt;c::&lt;getCreatorUsingGeneric&gt;b__93_3([Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c, System.Reflection.MethodInfo)" newName="$&lt;getCreatorUsingGeneric&gt;b__93_3" oldStackTraceSignature="XLua.&lt;&gt;c:&lt;getCreatorUsingGeneric&gt;b__93_3(MethodInfo)" newStackTraceSignature="$XLua.&lt;&gt;c:$&lt;getCreatorUsingGeneric&gt;b__93_3(MethodInfo)" />
      <method signature="int XLua.ObjectTranslator/&lt;&gt;c::&lt;getCreatorUsingGeneric&gt;b__93_4([Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c, System.Reflection.MethodInfo)" newName="$&lt;getCreatorUsingGeneric&gt;b__93_4" oldStackTraceSignature="XLua.&lt;&gt;c:&lt;getCreatorUsingGeneric&gt;b__93_4(MethodInfo)" newStackTraceSignature="$XLua.&lt;&gt;c:$&lt;getCreatorUsingGeneric&gt;b__93_4(MethodInfo)" />
      <method signature="System.Delegate XLua.ObjectTranslator/&lt;&gt;c::&lt;getCreatorUsingGeneric&gt;b__93_0([Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c, [Assembly-CSharp]XLua.DelegateBridgeBase)" newName="$&lt;getCreatorUsingGeneric&gt;b__93_0" oldStackTraceSignature="XLua.&lt;&gt;c:&lt;getCreatorUsingGeneric&gt;b__93_0(DelegateBridgeBase)" newStackTraceSignature="$XLua.&lt;&gt;c:$&lt;getCreatorUsingGeneric&gt;b__93_0($DelegateBridgeBase)" />
      <method signature="System.Delegate XLua.ObjectTranslator/&lt;&gt;c::&lt;getCreatorUsingGeneric&gt;b__93_5([Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c, [Assembly-CSharp]XLua.DelegateBridgeBase)" newName="$&lt;getCreatorUsingGeneric&gt;b__93_5" oldStackTraceSignature="XLua.&lt;&gt;c:&lt;getCreatorUsingGeneric&gt;b__93_5(DelegateBridgeBase)" newStackTraceSignature="$XLua.&lt;&gt;c:$&lt;getCreatorUsingGeneric&gt;b__93_5($DelegateBridgeBase)" />
      <method signature="System.Type XLua.ObjectTranslator/&lt;&gt;c::&lt;getCreatorUsingGeneric&gt;b__93_6([Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c, System.Reflection.ParameterInfo)" newName="$&lt;getCreatorUsingGeneric&gt;b__93_6" oldStackTraceSignature="XLua.&lt;&gt;c:&lt;getCreatorUsingGeneric&gt;b__93_6(ParameterInfo)" newStackTraceSignature="$XLua.&lt;&gt;c:$&lt;getCreatorUsingGeneric&gt;b__93_6(ParameterInfo)" />
      <method signature="bool XLua.ObjectTranslator/&lt;&gt;c::&lt;getDelegate&gt;b__94_0([Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c, System.Reflection.MethodInfo)" newName="$&lt;getDelegate&gt;b__94_0" oldStackTraceSignature="XLua.&lt;&gt;c:&lt;getDelegate&gt;b__94_0(MethodInfo)" newStackTraceSignature="$XLua.&lt;&gt;c:$&lt;getDelegate&gt;b__94_0(MethodInfo)" />
    </type>
    <type fullName="XLua.ObjectTranslator/&lt;&gt;c__155`1" newFullName="" status="NotRenamed">
      <field signature="[Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c__155`1&lt;!0&gt; &lt;&gt;9" newName="$&lt;&gt;97" />
      <field signature="System.Action`2&lt;nint,byte&gt; &lt;&gt;9__155_0" newName="$&lt;&gt;9__155_0" />
      <field signature="System.Action`2&lt;nint,sbyte&gt; &lt;&gt;9__155_1" newName="$&lt;&gt;9__155_1" />
      <field signature="System.Action`2&lt;nint,char&gt; &lt;&gt;9__155_2" newName="$&lt;&gt;9__155_2" />
      <field signature="System.Action`2&lt;nint,short&gt; &lt;&gt;9__155_3" newName="$&lt;&gt;9__155_3" />
      <field signature="System.Action`2&lt;nint,ushort&gt; &lt;&gt;9__155_4" newName="$&lt;&gt;9__155_4" />
      <field signature="System.Action`2&lt;nint,float&gt; &lt;&gt;9__155_5" newName="$&lt;&gt;9__155_5" />
      <method signature="void XLua.ObjectTranslator/&lt;&gt;c__155`1::&lt;tryGetPushFuncByType&gt;b__155_0([Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c__155`1&lt;!0&gt;, nint, byte)" newName="$&lt;tryGetPushFuncByType&gt;b__155_0" oldStackTraceSignature="XLua.&lt;&gt;c__155`1:&lt;tryGetPushFuncByType&gt;b__155_0(IntPtr, Byte)" newStackTraceSignature="$XLua.&lt;&gt;c__155`1:$&lt;tryGetPushFuncByType&gt;b__155_0(IntPtr, Byte)" />
      <method signature="void XLua.ObjectTranslator/&lt;&gt;c__155`1::&lt;tryGetPushFuncByType&gt;b__155_1([Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c__155`1&lt;!0&gt;, nint, sbyte)" newName="$&lt;tryGetPushFuncByType&gt;b__155_1" oldStackTraceSignature="XLua.&lt;&gt;c__155`1:&lt;tryGetPushFuncByType&gt;b__155_1(IntPtr, SByte)" newStackTraceSignature="$XLua.&lt;&gt;c__155`1:$&lt;tryGetPushFuncByType&gt;b__155_1(IntPtr, SByte)" />
      <method signature="void XLua.ObjectTranslator/&lt;&gt;c__155`1::&lt;tryGetPushFuncByType&gt;b__155_2([Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c__155`1&lt;!0&gt;, nint, char)" newName="$&lt;tryGetPushFuncByType&gt;b__155_2" oldStackTraceSignature="XLua.&lt;&gt;c__155`1:&lt;tryGetPushFuncByType&gt;b__155_2(IntPtr, Char)" newStackTraceSignature="$XLua.&lt;&gt;c__155`1:$&lt;tryGetPushFuncByType&gt;b__155_2(IntPtr, Char)" />
      <method signature="void XLua.ObjectTranslator/&lt;&gt;c__155`1::&lt;tryGetPushFuncByType&gt;b__155_3([Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c__155`1&lt;!0&gt;, nint, short)" newName="$&lt;tryGetPushFuncByType&gt;b__155_3" oldStackTraceSignature="XLua.&lt;&gt;c__155`1:&lt;tryGetPushFuncByType&gt;b__155_3(IntPtr, Int16)" newStackTraceSignature="$XLua.&lt;&gt;c__155`1:$&lt;tryGetPushFuncByType&gt;b__155_3(IntPtr, Int16)" />
      <method signature="void XLua.ObjectTranslator/&lt;&gt;c__155`1::&lt;tryGetPushFuncByType&gt;b__155_4([Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c__155`1&lt;!0&gt;, nint, ushort)" newName="$&lt;tryGetPushFuncByType&gt;b__155_4" oldStackTraceSignature="XLua.&lt;&gt;c__155`1:&lt;tryGetPushFuncByType&gt;b__155_4(IntPtr, UInt16)" newStackTraceSignature="$XLua.&lt;&gt;c__155`1:$&lt;tryGetPushFuncByType&gt;b__155_4(IntPtr, UInt16)" />
      <method signature="void XLua.ObjectTranslator/&lt;&gt;c__155`1::&lt;tryGetPushFuncByType&gt;b__155_5([Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c__155`1&lt;!0&gt;, nint, float)" newName="$&lt;tryGetPushFuncByType&gt;b__155_5" oldStackTraceSignature="XLua.&lt;&gt;c__155`1:&lt;tryGetPushFuncByType&gt;b__155_5(IntPtr, Single)" newStackTraceSignature="$XLua.&lt;&gt;c__155`1:$&lt;tryGetPushFuncByType&gt;b__155_5(IntPtr, Single)" />
    </type>
    <type fullName="XLua.ObjectTranslator/&lt;&gt;c__157`1" newFullName="" status="NotRenamed">
      <field signature="[Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c__157`1&lt;!0&gt; &lt;&gt;9" newName="$&lt;&gt;98" />
      <field signature="System.Func`3&lt;nint,int,byte&gt; &lt;&gt;9__157_1" newName="$&lt;&gt;9__157_1" />
      <field signature="System.Func`3&lt;nint,int,sbyte&gt; &lt;&gt;9__157_2" newName="$&lt;&gt;9__157_2" />
      <field signature="System.Func`3&lt;nint,int,char&gt; &lt;&gt;9__157_3" newName="$&lt;&gt;9__157_3" />
      <field signature="System.Func`3&lt;nint,int,short&gt; &lt;&gt;9__157_4" newName="$&lt;&gt;9__157_4" />
      <field signature="System.Func`3&lt;nint,int,ushort&gt; &lt;&gt;9__157_5" newName="$&lt;&gt;9__157_5" />
      <field signature="System.Func`3&lt;nint,int,float&gt; &lt;&gt;9__157_6" newName="$&lt;&gt;9__157_6" />
      <method signature="byte XLua.ObjectTranslator/&lt;&gt;c__157`1::&lt;tryGetGetFuncByType&gt;b__157_1([Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c__157`1&lt;!0&gt;, nint, int)" newName="$&lt;tryGetGetFuncByType&gt;b__157_1" oldStackTraceSignature="XLua.&lt;&gt;c__157`1:&lt;tryGetGetFuncByType&gt;b__157_1(IntPtr, Int32)" newStackTraceSignature="$XLua.&lt;&gt;c__157`1:$&lt;tryGetGetFuncByType&gt;b__157_1(IntPtr, Int32)" />
      <method signature="sbyte XLua.ObjectTranslator/&lt;&gt;c__157`1::&lt;tryGetGetFuncByType&gt;b__157_2([Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c__157`1&lt;!0&gt;, nint, int)" newName="$&lt;tryGetGetFuncByType&gt;b__157_2" oldStackTraceSignature="XLua.&lt;&gt;c__157`1:&lt;tryGetGetFuncByType&gt;b__157_2(IntPtr, Int32)" newStackTraceSignature="$XLua.&lt;&gt;c__157`1:$&lt;tryGetGetFuncByType&gt;b__157_2(IntPtr, Int32)" />
      <method signature="char XLua.ObjectTranslator/&lt;&gt;c__157`1::&lt;tryGetGetFuncByType&gt;b__157_3([Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c__157`1&lt;!0&gt;, nint, int)" newName="$&lt;tryGetGetFuncByType&gt;b__157_3" oldStackTraceSignature="XLua.&lt;&gt;c__157`1:&lt;tryGetGetFuncByType&gt;b__157_3(IntPtr, Int32)" newStackTraceSignature="$XLua.&lt;&gt;c__157`1:$&lt;tryGetGetFuncByType&gt;b__157_3(IntPtr, Int32)" />
      <method signature="short XLua.ObjectTranslator/&lt;&gt;c__157`1::&lt;tryGetGetFuncByType&gt;b__157_4([Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c__157`1&lt;!0&gt;, nint, int)" newName="$&lt;tryGetGetFuncByType&gt;b__157_4" oldStackTraceSignature="XLua.&lt;&gt;c__157`1:&lt;tryGetGetFuncByType&gt;b__157_4(IntPtr, Int32)" newStackTraceSignature="$XLua.&lt;&gt;c__157`1:$&lt;tryGetGetFuncByType&gt;b__157_4(IntPtr, Int32)" />
      <method signature="ushort XLua.ObjectTranslator/&lt;&gt;c__157`1::&lt;tryGetGetFuncByType&gt;b__157_5([Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c__157`1&lt;!0&gt;, nint, int)" newName="$&lt;tryGetGetFuncByType&gt;b__157_5" oldStackTraceSignature="XLua.&lt;&gt;c__157`1:&lt;tryGetGetFuncByType&gt;b__157_5(IntPtr, Int32)" newStackTraceSignature="$XLua.&lt;&gt;c__157`1:$&lt;tryGetGetFuncByType&gt;b__157_5(IntPtr, Int32)" />
      <method signature="float XLua.ObjectTranslator/&lt;&gt;c__157`1::&lt;tryGetGetFuncByType&gt;b__157_6([Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c__157`1&lt;!0&gt;, nint, int)" newName="$&lt;tryGetGetFuncByType&gt;b__157_6" oldStackTraceSignature="XLua.&lt;&gt;c__157`1:&lt;tryGetGetFuncByType&gt;b__157_6(IntPtr, Int32)" newStackTraceSignature="$XLua.&lt;&gt;c__157`1:$&lt;tryGetGetFuncByType&gt;b__157_6(IntPtr, Int32)" />
    </type>
    <type fullName="XLua.ObjectTranslator/&lt;&gt;c__DisplayClass160_0`1" newFullName="$XLua.$ObjectTranslator/$&lt;&gt;c__DisplayClass160_0`1" status="Renamed">
      <field signature="[Assembly-CSharp]XLua.ObjectTranslator/GetFunc`1&lt;!0&gt; get" newName="$get" />
      <field signature="System.Action`2&lt;nint,!0&gt; push" newName="$push" />
      <field signature="System.Action`3&lt;nint,int,!0&gt; update" newName="$update" />
      <method signature="!0 XLua.ObjectTranslator/&lt;&gt;c__DisplayClass160_0`1::&lt;RegisterPushAndGetAndUpdate&gt;b__0([Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c__DisplayClass160_0`1&lt;!0&gt;, nint, int)" newName="$&lt;RegisterPushAndGetAndUpdate&gt;b__0" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass160_0`1:&lt;RegisterPushAndGetAndUpdate&gt;b__0(IntPtr, Int32)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass160_0`1:$&lt;RegisterPushAndGetAndUpdate&gt;b__0(IntPtr, Int32)" />
      <method signature="void XLua.ObjectTranslator/&lt;&gt;c__DisplayClass160_0`1::&lt;RegisterPushAndGetAndUpdate&gt;b__1([Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c__DisplayClass160_0`1&lt;!0&gt;, nint, object)" newName="$&lt;RegisterPushAndGetAndUpdate&gt;b__1" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass160_0`1:&lt;RegisterPushAndGetAndUpdate&gt;b__1(IntPtr, Object)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass160_0`1:$&lt;RegisterPushAndGetAndUpdate&gt;b__1(IntPtr, Object)" />
      <method signature="object XLua.ObjectTranslator/&lt;&gt;c__DisplayClass160_0`1::&lt;RegisterPushAndGetAndUpdate&gt;b__2([Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c__DisplayClass160_0`1&lt;!0&gt;, nint, int)" newName="$&lt;RegisterPushAndGetAndUpdate&gt;b__2" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass160_0`1:&lt;RegisterPushAndGetAndUpdate&gt;b__2(IntPtr, Int32)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass160_0`1:$&lt;RegisterPushAndGetAndUpdate&gt;b__2(IntPtr, Int32)" />
      <method signature="void XLua.ObjectTranslator/&lt;&gt;c__DisplayClass160_0`1::&lt;RegisterPushAndGetAndUpdate&gt;b__3([Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c__DisplayClass160_0`1&lt;!0&gt;, nint, int, object)" newName="$&lt;RegisterPushAndGetAndUpdate&gt;b__3" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass160_0`1:&lt;RegisterPushAndGetAndUpdate&gt;b__3(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass160_0`1:$&lt;RegisterPushAndGetAndUpdate&gt;b__3(IntPtr, Int32, Object)" />
    </type>
    <type fullName="XLua.ObjectTranslator/&lt;&gt;c__DisplayClass161_0`1" newFullName="$XLua.$ObjectTranslator/$&lt;&gt;c__DisplayClass161_0`1" status="Renamed">
      <field signature="[Assembly-CSharp]XLua.ObjectTranslator/CheckFunc`1&lt;!0&gt; check" newName="$check" />
      <method signature="bool XLua.ObjectTranslator/&lt;&gt;c__DisplayClass161_0`1::&lt;RegisterChecker&gt;b__0([Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c__DisplayClass161_0`1&lt;!0&gt;, nint, int)" newName="$&lt;RegisterChecker&gt;b__0" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass161_0`1:&lt;RegisterChecker&gt;b__0(IntPtr, Int32)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass161_0`1:$&lt;RegisterChecker&gt;b__0(IntPtr, Int32)" />
    </type>
    <type fullName="XLua.ObjectTranslator/&lt;&gt;c__DisplayClass162_0`1" newFullName="$XLua.$ObjectTranslator/$&lt;&gt;c__DisplayClass162_0`1" status="Renamed">
      <field signature="[Assembly-CSharp]XLua.ObjectTranslator/GetFunc`1&lt;!0&gt; get" newName="$get9" />
      <method signature="object XLua.ObjectTranslator/&lt;&gt;c__DisplayClass162_0`1::&lt;RegisterCaster&gt;b__0([Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c__DisplayClass162_0`1&lt;!0&gt;, nint, int, object)" newName="$&lt;RegisterCaster&gt;b__0" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass162_0`1:&lt;RegisterCaster&gt;b__0(IntPtr, Int32, Object)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass162_0`1:$&lt;RegisterCaster&gt;b__0(IntPtr, Int32, Object)" />
    </type>
    <type fullName="XLua.ObjectTranslator/&lt;&gt;c__DisplayClass93_0" newFullName="$XLua.$ObjectTranslator/$&lt;&gt;c__DisplayClass93_0" status="Renamed">
      <field signature="System.Type delegateType" newName="$delegateType" />
      <field signature="System.Reflection.MethodInfo genericMethodInfo" newName="$genericMethodInfo" />
      <method signature="System.Delegate XLua.ObjectTranslator/&lt;&gt;c__DisplayClass93_0::&lt;getCreatorUsingGeneric&gt;b__7([Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c__DisplayClass93_0, [Assembly-CSharp]XLua.DelegateBridgeBase)" newName="$&lt;getCreatorUsingGeneric&gt;b__7" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass93_0:&lt;getCreatorUsingGeneric&gt;b__7(DelegateBridgeBase)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass93_0:$&lt;getCreatorUsingGeneric&gt;b__7($DelegateBridgeBase)" />
    </type>
    <type fullName="XLua.ObjectTranslator/&lt;&gt;c__DisplayClass93_1" newFullName="$XLua.$ObjectTranslator/$&lt;&gt;c__DisplayClass93_1" status="Renamed">
      <field signature="System.Reflection.MethodInfo methodInfo" newName="$methodInfo" />
      <field signature="[Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c__DisplayClass93_0 CS$&lt;&gt;8__locals1" newName="$CS$&lt;&gt;8__locals1" />
      <method signature="System.Delegate XLua.ObjectTranslator/&lt;&gt;c__DisplayClass93_1::&lt;getCreatorUsingGeneric&gt;b__8([Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c__DisplayClass93_1, [Assembly-CSharp]XLua.DelegateBridgeBase)" newName="$&lt;getCreatorUsingGeneric&gt;b__8" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass93_1:&lt;getCreatorUsingGeneric&gt;b__8(DelegateBridgeBase)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass93_1:$&lt;getCreatorUsingGeneric&gt;b__8($DelegateBridgeBase)" />
    </type>
    <type fullName="XLua.ObjectTranslator/&lt;&gt;c__DisplayClass94_0" newFullName="$XLua.$ObjectTranslator/$&lt;&gt;c__DisplayClass94_0" status="Renamed">
      <field signature="System.Type delegateType" newName="$delegateType10" />
    </type>
    <type fullName="XLua.ObjectTranslator/&lt;&gt;c__DisplayClass94_1" newFullName="$XLua.$ObjectTranslator/$&lt;&gt;c__DisplayClass94_1" status="Renamed">
      <field signature="System.Reflection.MethodInfo foundMethod" newName="$foundMethod" />
      <field signature="[Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c__DisplayClass94_0 CS$&lt;&gt;8__locals1" newName="$CS$&lt;&gt;8__locals111" />
      <method signature="System.Delegate XLua.ObjectTranslator/&lt;&gt;c__DisplayClass94_1::&lt;getDelegate&gt;b__1([Assembly-CSharp]XLua.ObjectTranslator/&lt;&gt;c__DisplayClass94_1, [Assembly-CSharp]XLua.DelegateBridgeBase)" newName="$&lt;getDelegate&gt;b__1" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass94_1:&lt;getDelegate&gt;b__1(DelegateBridgeBase)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass94_1:$&lt;getDelegate&gt;b__1($DelegateBridgeBase)" />
    </type>
    <type fullName="XLua.ObjectTranslator/CheckFunc`1" newFullName="$XLua.$ObjectTranslator/$CheckFunc`1" status="Renamed" />
    <type fullName="XLua.ObjectTranslator/GetCSObject" newFullName="$XLua.$ObjectTranslator/$GetCSObject" status="Renamed" />
    <type fullName="XLua.ObjectTranslator/GetFunc`1" newFullName="$XLua.$ObjectTranslator/$GetFunc`1" status="Renamed" />
    <type fullName="XLua.ObjectTranslator/IniterAdderUnityEngineVector2" newFullName="$XLua.$ObjectTranslator/$IniterAdderUnityEngineVector2" status="Renamed">
      <method signature="void XLua.ObjectTranslator/IniterAdderUnityEngineVector2::Init([Assembly-CSharp]XLua.LuaEnv, [Assembly-CSharp]XLua.ObjectTranslator)" newName="$Init" oldStackTraceSignature="XLua.IniterAdderUnityEngineVector2:Init(LuaEnv, ObjectTranslator)" newStackTraceSignature="$XLua.$IniterAdderUnityEngineVector2:$Init($LuaEnv, $ObjectTranslator)" />
    </type>
    <type fullName="XLua.ObjectTranslator/LOGLEVEL" newFullName="$XLua.$ObjectTranslator/$LOGLEVEL" status="Renamed">
      <field signature="[Assembly-CSharp]XLua.ObjectTranslator/LOGLEVEL NO" newName="$NO" />
      <field signature="[Assembly-CSharp]XLua.ObjectTranslator/LOGLEVEL INFO" newName="$INFO" />
      <field signature="[Assembly-CSharp]XLua.ObjectTranslator/LOGLEVEL WARN" newName="$WARN" />
      <field signature="[Assembly-CSharp]XLua.ObjectTranslator/LOGLEVEL ERROR" newName="$ERROR" />
    </type>
    <type fullName="XLua.ObjectTranslator/PushCSObject" newFullName="$XLua.$ObjectTranslator/$PushCSObject" status="Renamed" />
    <type fullName="XLua.ObjectTranslator/UpdateCSObject" newFullName="$XLua.$ObjectTranslator/$UpdateCSObject" status="Renamed" />
    <type fullName="XLua.ObjectTranslatorPool" newFullName="$XLua.$ObjectTranslatorPool" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;nint,System.WeakReference&gt; translators" newName="$translators" />
      <field signature="nint lastPtr" newName="$lastPtr" />
      <field signature="[Assembly-CSharp]XLua.ObjectTranslator lastTranslator" newName="$lastTranslator" />
      <property signature="[Assembly-CSharp]XLua.ObjectTranslatorPool Instance" newName="$Instance" />
      <method signature="[Assembly-CSharp]XLua.ObjectTranslatorPool XLua.ObjectTranslatorPool::get_Instance()" newName="$get_Instance" oldStackTraceSignature="XLua.ObjectTranslatorPool:get_Instance()" newStackTraceSignature="$XLua.$ObjectTranslatorPool:$get_Instance()" />
      <method signature="void XLua.ObjectTranslatorPool::Add([Assembly-CSharp]XLua.ObjectTranslatorPool, nint, [Assembly-CSharp]XLua.ObjectTranslator)" newName="$Add111" oldStackTraceSignature="XLua.ObjectTranslatorPool:Add(IntPtr, ObjectTranslator)" newStackTraceSignature="$XLua.$ObjectTranslatorPool:$Add111(IntPtr, $ObjectTranslator)" />
      <method signature="[Assembly-CSharp]XLua.ObjectTranslator XLua.ObjectTranslatorPool::Find([Assembly-CSharp]XLua.ObjectTranslatorPool, nint)" newName="$Find" oldStackTraceSignature="XLua.ObjectTranslatorPool:Find(IntPtr)" newStackTraceSignature="$XLua.$ObjectTranslatorPool:$Find(IntPtr)" />
      <method signature="void XLua.ObjectTranslatorPool::Remove([Assembly-CSharp]XLua.ObjectTranslatorPool, nint)" newName="$Remove112" oldStackTraceSignature="XLua.ObjectTranslatorPool:Remove(IntPtr)" newStackTraceSignature="$XLua.$ObjectTranslatorPool:$Remove112(IntPtr)" />
    </type>
    <type fullName="XLua.OptimizeFlag" newFullName="$XLua.$OptimizeFlag" status="Renamed">
      <field signature="[Assembly-CSharp]XLua.OptimizeFlag Default" newName="$Default" />
      <field signature="[Assembly-CSharp]XLua.OptimizeFlag PackAsTable" newName="$PackAsTable" />
    </type>
    <type fullName="XLua.OverloadMethodWrap" newFullName="$XLua.$OverloadMethodWrap" status="Renamed">
      <field signature="[Assembly-CSharp]XLua.ObjectTranslator translator" newName="$translator24" />
      <field signature="System.Type targetType" newName="$targetType" />
      <field signature="System.Reflection.MethodBase method" newName="$method" />
      <field signature="[Assembly-CSharp]XLua.ObjectCheck[] checkArray" newName="$checkArray" />
      <field signature="[Assembly-CSharp]XLua.ObjectCast[] castArray" newName="$castArray" />
      <field signature="int[] inPosArray" newName="$inPosArray" />
      <field signature="int[] outPosArray" newName="$outPosArray" />
      <field signature="bool[] isOptionalArray" newName="$isOptionalArray" />
      <field signature="object[] defaultValueArray" newName="$defaultValueArray" />
      <field signature="bool isVoid" newName="$isVoid" />
      <field signature="int luaStackPosStart" newName="$luaStackPosStart" />
      <field signature="bool targetNeeded" newName="$targetNeeded" />
      <field signature="object[] args" newName="$args" />
      <field signature="int[] refPos" newName="$refPos" />
      <field signature="System.Type paramsType" newName="$paramsType" />
      <field signature="bool &lt;HasDefalutValue&gt;k__BackingField" newName="$&lt;HasDefalutValue&gt;k__BackingField" />
      <property signature="bool HasDefalutValue" newName="$HasDefalutValue" />
      <method signature="bool XLua.OverloadMethodWrap::get_HasDefalutValue([Assembly-CSharp]XLua.OverloadMethodWrap)" newName="$get_HasDefalutValue" oldStackTraceSignature="XLua.OverloadMethodWrap:get_HasDefalutValue()" newStackTraceSignature="$XLua.$OverloadMethodWrap:$get_HasDefalutValue()" />
      <method signature="void XLua.OverloadMethodWrap::set_HasDefalutValue([Assembly-CSharp]XLua.OverloadMethodWrap, bool)" newName="$set_HasDefalutValue" oldStackTraceSignature="XLua.OverloadMethodWrap:set_HasDefalutValue(Boolean)" newStackTraceSignature="$XLua.$OverloadMethodWrap:$set_HasDefalutValue(Boolean)" />
      <method signature="void XLua.OverloadMethodWrap::Init([Assembly-CSharp]XLua.OverloadMethodWrap, [Assembly-CSharp]XLua.ObjectCheckers, [Assembly-CSharp]XLua.ObjectCasters)" newName="$Init105" oldStackTraceSignature="XLua.OverloadMethodWrap:Init(ObjectCheckers, ObjectCasters)" newStackTraceSignature="$XLua.$OverloadMethodWrap:$Init105($ObjectCheckers, $ObjectCasters)" />
      <method signature="bool XLua.OverloadMethodWrap::Check([Assembly-CSharp]XLua.OverloadMethodWrap, nint)" newName="$Check" oldStackTraceSignature="XLua.OverloadMethodWrap:Check(IntPtr)" newStackTraceSignature="$XLua.$OverloadMethodWrap:$Check(IntPtr)" />
      <method signature="int XLua.OverloadMethodWrap::Call([Assembly-CSharp]XLua.OverloadMethodWrap, nint)" newName="$Call106" oldStackTraceSignature="XLua.OverloadMethodWrap:Call(IntPtr)" newStackTraceSignature="$XLua.$OverloadMethodWrap:$Call106(IntPtr)" />
    </type>
    <type fullName="XLua.RawObject" newFullName="$XLua.$RawObject" status="Renamed">
      <property signature="object Target" newName="$Target" />
      <method signature="object XLua.RawObject::get_Target([Assembly-CSharp]XLua.RawObject)" newName="$get_Target" oldStackTraceSignature="XLua.RawObject:get_Target()" newStackTraceSignature="$XLua.$RawObject:$get_Target()" />
    </type>
    <type fullName="XLua.ReferenceEqualsComparer" newFullName="$XLua.$ReferenceEqualsComparer" status="Renamed" />
    <type fullName="XLua.ReflectionUseAttribute" newFullName="$XLua.$ReflectionUseAttribute" status="Renamed" />
    <type fullName="XLua.SignatureLoader" newFullName="$XLua.$SignatureLoader" status="Renamed">
      <field signature="[Assembly-CSharp]XLua.LuaEnv/CustomLoader userLoader" newName="$userLoader" />
      <field signature="System.Security.Cryptography.RSACryptoServiceProvider rsa" newName="$rsa" />
      <field signature="System.Security.Cryptography.SHA1 sha" newName="$sha" />
      <method signature="byte[] XLua.SignatureLoader::load_and_verify([Assembly-CSharp]XLua.SignatureLoader, string&amp;)" newName="$load_and_verify" oldStackTraceSignature="XLua.SignatureLoader:load_and_verify(String&amp;)" newStackTraceSignature="$XLua.$SignatureLoader:$load_and_verify(String&amp;)" />
      <method signature="[Assembly-CSharp]XLua.LuaEnv/CustomLoader XLua.SignatureLoader::op_Implicit([Assembly-CSharp]XLua.SignatureLoader)" newName="$op_Implicit" oldStackTraceSignature="XLua.SignatureLoader:op_Implicit(SignatureLoader)" newStackTraceSignature="$XLua.$SignatureLoader:$op_Implicit($SignatureLoader)" />
    </type>
    <type fullName="XLua.StaticLuaCallbacks" newFullName="$XLua.$StaticLuaCallbacks" status="Renamed">
      <field signature="[Assembly-CSharp]XLua.LuaDLL.lua_CSFunction GcMeta" newName="$GcMeta" />
      <field signature="[Assembly-CSharp]XLua.LuaDLL.lua_CSFunction ToStringMeta" newName="$ToStringMeta" />
      <field signature="[Assembly-CSharp]XLua.LuaDLL.lua_CSFunction EnumAndMeta" newName="$EnumAndMeta" />
      <field signature="[Assembly-CSharp]XLua.LuaDLL.lua_CSFunction EnumOrMeta" newName="$EnumOrMeta" />
      <field signature="[Assembly-CSharp]XLua.LuaDLL.lua_CSFunction StaticCSFunctionWraper" newName="$StaticCSFunctionWraper" />
      <field signature="[Assembly-CSharp]XLua.LuaDLL.lua_CSFunction FixCSFunctionWraper" newName="$FixCSFunctionWraper" />
      <field signature="[Assembly-CSharp]XLua.LuaDLL.lua_CSFunction DelegateCtor" newName="$DelegateCtor" />
      <method signature="bool XLua.StaticLuaCallbacks::__tryArrayGet(System.Type, nint, [Assembly-CSharp]XLua.ObjectTranslator, object, int)" newName="$__tryArrayGet" oldStackTraceSignature="XLua.StaticLuaCallbacks:__tryArrayGet(Type, IntPtr, ObjectTranslator, Object, Int32)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$__tryArrayGet(Type, IntPtr, $ObjectTranslator, Object, Int32)" />
      <method signature="bool XLua.StaticLuaCallbacks::__tryArraySet(System.Type, nint, [Assembly-CSharp]XLua.ObjectTranslator, object, int, int)" newName="$__tryArraySet" oldStackTraceSignature="XLua.StaticLuaCallbacks:__tryArraySet(Type, IntPtr, ObjectTranslator, Object, Int32, Int32)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$__tryArraySet(Type, IntPtr, $ObjectTranslator, Object, Int32, Int32)" />
      <method signature="int XLua.StaticLuaCallbacks::EnumAnd(nint)" newName="$EnumAnd" oldStackTraceSignature="XLua.StaticLuaCallbacks:EnumAnd(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$EnumAnd(IntPtr)" />
      <method signature="int XLua.StaticLuaCallbacks::EnumOr(nint)" newName="$EnumOr" oldStackTraceSignature="XLua.StaticLuaCallbacks:EnumOr(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$EnumOr(IntPtr)" />
      <method signature="int XLua.StaticLuaCallbacks::StaticCSFunction(nint)" newName="$StaticCSFunction" oldStackTraceSignature="XLua.StaticLuaCallbacks:StaticCSFunction(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$StaticCSFunction(IntPtr)" />
      <method signature="int XLua.StaticLuaCallbacks::FixCSFunction(nint)" newName="$FixCSFunction" oldStackTraceSignature="XLua.StaticLuaCallbacks:FixCSFunction(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$FixCSFunction(IntPtr)" />
      <method signature="int XLua.StaticLuaCallbacks::DelegateCall(nint)" newName="$DelegateCall" oldStackTraceSignature="XLua.StaticLuaCallbacks:DelegateCall(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$DelegateCall(IntPtr)" />
      <method signature="int XLua.StaticLuaCallbacks::LuaGC(nint)" newName="$LuaGC" oldStackTraceSignature="XLua.StaticLuaCallbacks:LuaGC(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$LuaGC(IntPtr)" />
      <method signature="int XLua.StaticLuaCallbacks::ToString(nint)" newName="$ToString" oldStackTraceSignature="XLua.StaticLuaCallbacks:ToString(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$ToString(IntPtr)" />
      <method signature="int XLua.StaticLuaCallbacks::DelegateCombine(nint)" newName="$DelegateCombine" oldStackTraceSignature="XLua.StaticLuaCallbacks:DelegateCombine(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$DelegateCombine(IntPtr)" />
      <method signature="int XLua.StaticLuaCallbacks::DelegateRemove(nint)" newName="$DelegateRemove" oldStackTraceSignature="XLua.StaticLuaCallbacks:DelegateRemove(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$DelegateRemove(IntPtr)" />
      <method signature="bool XLua.StaticLuaCallbacks::tryPrimitiveArrayGet(System.Type, nint, object, int)" newName="$tryPrimitiveArrayGet" oldStackTraceSignature="XLua.StaticLuaCallbacks:tryPrimitiveArrayGet(Type, IntPtr, Object, Int32)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$tryPrimitiveArrayGet(Type, IntPtr, Object, Int32)" />
      <method signature="int XLua.StaticLuaCallbacks::ArrayIndexer(nint)" newName="$ArrayIndexer" oldStackTraceSignature="XLua.StaticLuaCallbacks:ArrayIndexer(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$ArrayIndexer(IntPtr)" />
      <method signature="bool XLua.StaticLuaCallbacks::TryPrimitiveArraySet(System.Type, nint, object, int, int)" newName="$TryPrimitiveArraySet" oldStackTraceSignature="XLua.StaticLuaCallbacks:TryPrimitiveArraySet(Type, IntPtr, Object, Int32, Int32)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$TryPrimitiveArraySet(Type, IntPtr, Object, Int32, Int32)" />
      <method signature="int XLua.StaticLuaCallbacks::ArrayNewIndexer(nint)" newName="$ArrayNewIndexer" oldStackTraceSignature="XLua.StaticLuaCallbacks:ArrayNewIndexer(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$ArrayNewIndexer(IntPtr)" />
      <method signature="int XLua.StaticLuaCallbacks::ArrayLength(nint)" newName="$ArrayLength" oldStackTraceSignature="XLua.StaticLuaCallbacks:ArrayLength(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$ArrayLength(IntPtr)" />
      <method signature="int XLua.StaticLuaCallbacks::MetaFuncIndex(nint)" newName="$MetaFuncIndex" oldStackTraceSignature="XLua.StaticLuaCallbacks:MetaFuncIndex(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$MetaFuncIndex(IntPtr)" />
      <method signature="int XLua.StaticLuaCallbacks::Panic(nint)" newName="$Panic" oldStackTraceSignature="XLua.StaticLuaCallbacks:Panic(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$Panic(IntPtr)" />
      <method signature="int XLua.StaticLuaCallbacks::Print(nint)" newName="$Print" oldStackTraceSignature="XLua.StaticLuaCallbacks:Print(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$Print(IntPtr)" />
      <method signature="int XLua.StaticLuaCallbacks::LoadSocketCore(nint)" newName="$LoadSocketCore" oldStackTraceSignature="XLua.StaticLuaCallbacks:LoadSocketCore(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$LoadSocketCore(IntPtr)" />
      <method signature="int XLua.StaticLuaCallbacks::LoadCS(nint)" newName="$LoadCS" oldStackTraceSignature="XLua.StaticLuaCallbacks:LoadCS(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$LoadCS(IntPtr)" />
      <method signature="int XLua.StaticLuaCallbacks::LoadBuiltinLib(nint)" newName="$LoadBuiltinLib" oldStackTraceSignature="XLua.StaticLuaCallbacks:LoadBuiltinLib(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$LoadBuiltinLib(IntPtr)" />
      <method signature="int XLua.StaticLuaCallbacks::LoadFromResource(nint)" newName="$LoadFromResource" oldStackTraceSignature="XLua.StaticLuaCallbacks:LoadFromResource(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$LoadFromResource(IntPtr)" />
      <method signature="int XLua.StaticLuaCallbacks::LoadFromStreamingAssetsPath(nint)" newName="$LoadFromStreamingAssetsPath" oldStackTraceSignature="XLua.StaticLuaCallbacks:LoadFromStreamingAssetsPath(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$LoadFromStreamingAssetsPath(IntPtr)" />
      <method signature="int XLua.StaticLuaCallbacks::LoadFromCustomLoaders(nint)" newName="$LoadFromCustomLoaders" oldStackTraceSignature="XLua.StaticLuaCallbacks:LoadFromCustomLoaders(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$LoadFromCustomLoaders(IntPtr)" />
      <method signature="int XLua.StaticLuaCallbacks::LoadAssembly(nint)" newName="$LoadAssembly" oldStackTraceSignature="XLua.StaticLuaCallbacks:LoadAssembly(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$LoadAssembly(IntPtr)" />
      <method signature="int XLua.StaticLuaCallbacks::ImportType(nint)" newName="$ImportType" oldStackTraceSignature="XLua.StaticLuaCallbacks:ImportType(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$ImportType(IntPtr)" />
      <method signature="int XLua.StaticLuaCallbacks::ImportGenericType(nint)" newName="$ImportGenericType" oldStackTraceSignature="XLua.StaticLuaCallbacks:ImportGenericType(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$ImportGenericType(IntPtr)" />
      <method signature="int XLua.StaticLuaCallbacks::Cast(nint)" newName="$Cast" oldStackTraceSignature="XLua.StaticLuaCallbacks:Cast(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$Cast(IntPtr)" />
      <method signature="System.Type XLua.StaticLuaCallbacks::getType(nint, [Assembly-CSharp]XLua.ObjectTranslator, int)" newName="$getType" oldStackTraceSignature="XLua.StaticLuaCallbacks:getType(IntPtr, ObjectTranslator, Int32)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$getType(IntPtr, $ObjectTranslator, Int32)" />
      <method signature="int XLua.StaticLuaCallbacks::XLuaAccess(nint)" newName="$XLuaAccess" oldStackTraceSignature="XLua.StaticLuaCallbacks:XLuaAccess(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$XLuaAccess(IntPtr)" />
      <method signature="int XLua.StaticLuaCallbacks::XLuaPrivateAccessible(nint)" newName="$XLuaPrivateAccessible" oldStackTraceSignature="XLua.StaticLuaCallbacks:XLuaPrivateAccessible(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$XLuaPrivateAccessible(IntPtr)" />
      <method signature="int XLua.StaticLuaCallbacks::XLuaMetatableOperation(nint)" newName="$XLuaMetatableOperation" oldStackTraceSignature="XLua.StaticLuaCallbacks:XLuaMetatableOperation(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$XLuaMetatableOperation(IntPtr)" />
      <method signature="int XLua.StaticLuaCallbacks::DelegateConstructor(nint)" newName="$DelegateConstructor" oldStackTraceSignature="XLua.StaticLuaCallbacks:DelegateConstructor(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$DelegateConstructor(IntPtr)" />
      <method signature="int XLua.StaticLuaCallbacks::ToFunction(nint)" newName="$ToFunction" oldStackTraceSignature="XLua.StaticLuaCallbacks:ToFunction(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$ToFunction(IntPtr)" />
      <method signature="int XLua.StaticLuaCallbacks::GenericMethodWraper(nint)" newName="$GenericMethodWraper" oldStackTraceSignature="XLua.StaticLuaCallbacks:GenericMethodWraper(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$GenericMethodWraper(IntPtr)" />
      <method signature="int XLua.StaticLuaCallbacks::GetGenericMethod(nint)" newName="$GetGenericMethod" oldStackTraceSignature="XLua.StaticLuaCallbacks:GetGenericMethod(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$GetGenericMethod(IntPtr)" />
      <method signature="int XLua.StaticLuaCallbacks::ReleaseCsObject(nint)" newName="$ReleaseCsObject" oldStackTraceSignature="XLua.StaticLuaCallbacks:ReleaseCsObject(IntPtr)" newStackTraceSignature="$XLua.$StaticLuaCallbacks:$ReleaseCsObject(IntPtr)" />
    </type>
    <type fullName="XLua.SysGenConfig" newFullName="$XLua.$SysGenConfig" status="Renamed">
      <property signature="System.Collections.Generic.List`1&lt;System.Type&gt; GCOptimize" newName="$GCOptimize" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;System.Type,System.Collections.Generic.List`1&lt;string&gt;&gt; AdditionalProperties" newName="$AdditionalProperties" />
      <method signature="System.Collections.Generic.List`1&lt;System.Type&gt; XLua.SysGenConfig::get_GCOptimize()" newName="$get_GCOptimize" oldStackTraceSignature="XLua.SysGenConfig:get_GCOptimize()" newStackTraceSignature="$XLua.$SysGenConfig:$get_GCOptimize()" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;System.Type,System.Collections.Generic.List`1&lt;string&gt;&gt; XLua.SysGenConfig::get_AdditionalProperties()" newName="$get_AdditionalProperties" oldStackTraceSignature="XLua.SysGenConfig:get_AdditionalProperties()" newStackTraceSignature="$XLua.$SysGenConfig:$get_AdditionalProperties()" />
    </type>
    <type fullName="XLua.TemplateEngine.Chunk" newFullName="$XLua.TemplateEngine.$Chunk" status="Renamed">
      <field signature="[Assembly-CSharp]XLua.TemplateEngine.TokenType &lt;Type&gt;k__BackingField" newName="$&lt;Type&gt;k__BackingField" />
      <field signature="string &lt;Text&gt;k__BackingField" newName="$&lt;Text&gt;k__BackingField" />
      <property signature="[Assembly-CSharp]XLua.TemplateEngine.TokenType Type" newName="$Type" />
      <property signature="string Text" newName="$Text" />
      <method signature="[Assembly-CSharp]XLua.TemplateEngine.TokenType XLua.TemplateEngine.Chunk::get_Type([Assembly-CSharp]XLua.TemplateEngine.Chunk)" newName="$get_Type114" oldStackTraceSignature="XLua.TemplateEngine.Chunk:get_Type()" newStackTraceSignature="$XLua.TemplateEngine.$Chunk:$get_Type114()" />
      <method signature="void XLua.TemplateEngine.Chunk::set_Type([Assembly-CSharp]XLua.TemplateEngine.Chunk, [Assembly-CSharp]XLua.TemplateEngine.TokenType)" newName="$set_Type" oldStackTraceSignature="XLua.TemplateEngine.Chunk:set_Type(TokenType)" newStackTraceSignature="$XLua.TemplateEngine.$Chunk:$set_Type($TokenType)" />
      <method signature="string XLua.TemplateEngine.Chunk::get_Text([Assembly-CSharp]XLua.TemplateEngine.Chunk)" newName="$get_Text" oldStackTraceSignature="XLua.TemplateEngine.Chunk:get_Text()" newStackTraceSignature="$XLua.TemplateEngine.$Chunk:$get_Text()" />
      <method signature="void XLua.TemplateEngine.Chunk::set_Text([Assembly-CSharp]XLua.TemplateEngine.Chunk, string)" newName="$set_Text" oldStackTraceSignature="XLua.TemplateEngine.Chunk:set_Text(String)" newStackTraceSignature="$XLua.TemplateEngine.$Chunk:$set_Text(String)" />
    </type>
    <type fullName="XLua.TemplateEngine.LuaTemplate" newFullName="$XLua.TemplateEngine.$LuaTemplate" status="Renamed">
      <field signature="[Assembly-CSharp]XLua.LuaDLL.lua_CSFunction templateCompileFunction" newName="$templateCompileFunction" />
      <field signature="[Assembly-CSharp]XLua.LuaDLL.lua_CSFunction templateExecuteFunction" newName="$templateExecuteFunction" />
      <method signature="string XLua.TemplateEngine.LuaTemplate::ComposeCode(System.Collections.Generic.List`1&lt;[Assembly-CSharp]XLua.TemplateEngine.Chunk&gt;)" newName="$ComposeCode" oldStackTraceSignature="XLua.TemplateEngine.LuaTemplate:ComposeCode(List`1)" newStackTraceSignature="$XLua.TemplateEngine.$LuaTemplate:$ComposeCode(List`1)" />
      <method signature="[Assembly-CSharp]XLua.LuaFunction XLua.TemplateEngine.LuaTemplate::Compile([Assembly-CSharp]XLua.LuaEnv, string)" newName="$Compile" oldStackTraceSignature="XLua.TemplateEngine.LuaTemplate:Compile(LuaEnv, String)" newStackTraceSignature="$XLua.TemplateEngine.$LuaTemplate:$Compile($LuaEnv, String)" />
      <method signature="string XLua.TemplateEngine.LuaTemplate::Execute([Assembly-CSharp]XLua.LuaFunction, [Assembly-CSharp]XLua.LuaTable)" newName="$Execute" oldStackTraceSignature="XLua.TemplateEngine.LuaTemplate:Execute(LuaFunction, LuaTable)" newStackTraceSignature="$XLua.TemplateEngine.$LuaTemplate:$Execute($LuaFunction, $LuaTable)" />
      <method signature="string XLua.TemplateEngine.LuaTemplate::Execute([Assembly-CSharp]XLua.LuaFunction)" newName="$Execute115" oldStackTraceSignature="XLua.TemplateEngine.LuaTemplate:Execute(LuaFunction)" newStackTraceSignature="$XLua.TemplateEngine.$LuaTemplate:$Execute115($LuaFunction)" />
      <method signature="int XLua.TemplateEngine.LuaTemplate::Compile(nint)" newName="$Compile116" oldStackTraceSignature="XLua.TemplateEngine.LuaTemplate:Compile(IntPtr)" newStackTraceSignature="$XLua.TemplateEngine.$LuaTemplate:$Compile116(IntPtr)" />
      <method signature="int XLua.TemplateEngine.LuaTemplate::Execute(nint)" newName="$Execute117" oldStackTraceSignature="XLua.TemplateEngine.LuaTemplate:Execute(IntPtr)" newStackTraceSignature="$XLua.TemplateEngine.$LuaTemplate:$Execute117(IntPtr)" />
      <method signature="void XLua.TemplateEngine.LuaTemplate::OpenLib(nint)" newName="$OpenLib118" oldStackTraceSignature="XLua.TemplateEngine.LuaTemplate:OpenLib(IntPtr)" newStackTraceSignature="$XLua.TemplateEngine.$LuaTemplate:$OpenLib118(IntPtr)" />
    </type>
    <type fullName="XLua.TemplateEngine.Parser" newFullName="$XLua.TemplateEngine.$Parser" status="Renamed">
      <field signature="string &lt;RegexString&gt;k__BackingField" newName="$&lt;RegexString&gt;k__BackingField" />
      <property signature="string RegexString" newName="$RegexString" />
      <method signature="string XLua.TemplateEngine.Parser::get_RegexString()" newName="$get_RegexString" oldStackTraceSignature="XLua.TemplateEngine.Parser:get_RegexString()" newStackTraceSignature="$XLua.TemplateEngine.$Parser:$get_RegexString()" />
      <method signature="void XLua.TemplateEngine.Parser::set_RegexString(string)" newName="$set_RegexString" oldStackTraceSignature="XLua.TemplateEngine.Parser:set_RegexString(String)" newStackTraceSignature="$XLua.TemplateEngine.$Parser:$set_RegexString(String)" />
      <method signature="string XLua.TemplateEngine.Parser::EscapeString(string)" newName="$EscapeString" oldStackTraceSignature="XLua.TemplateEngine.Parser:EscapeString(String)" newStackTraceSignature="$XLua.TemplateEngine.$Parser:$EscapeString(String)" />
      <method signature="string XLua.TemplateEngine.Parser::GetRegexString()" newName="$GetRegexString" oldStackTraceSignature="XLua.TemplateEngine.Parser:GetRegexString()" newStackTraceSignature="$XLua.TemplateEngine.$Parser:$GetRegexString()" />
      <method signature="System.Collections.Generic.List`1&lt;[Assembly-CSharp]XLua.TemplateEngine.Chunk&gt; XLua.TemplateEngine.Parser::Parse(string)" newName="$Parse" oldStackTraceSignature="XLua.TemplateEngine.Parser:Parse(String)" newStackTraceSignature="$XLua.TemplateEngine.$Parser:$Parse(String)" />
    </type>
    <type fullName="XLua.TemplateEngine.Parser/&lt;&gt;c" newFullName="" status="NotRenamed">
      <field signature="[Assembly-CSharp]XLua.TemplateEngine.Parser/&lt;&gt;c &lt;&gt;9" newName="$&lt;&gt;951" />
      <field signature="System.Func`2&lt;[System]System.Text.RegularExpressions.Capture,[Assembly-CSharp]&lt;&gt;f__AnonymousType0`3&lt;[Assembly-CSharp]XLua.TemplateEngine.TokenType,string,int&gt;&gt; &lt;&gt;9__7_0" newName="$&lt;&gt;9__7_0" />
      <field signature="System.Func`2&lt;[System]System.Text.RegularExpressions.Capture,[Assembly-CSharp]&lt;&gt;f__AnonymousType0`3&lt;[Assembly-CSharp]XLua.TemplateEngine.TokenType,string,int&gt;&gt; &lt;&gt;9__7_1" newName="$&lt;&gt;9__7_1" />
      <field signature="System.Func`2&lt;[System]System.Text.RegularExpressions.Capture,[Assembly-CSharp]&lt;&gt;f__AnonymousType0`3&lt;[Assembly-CSharp]XLua.TemplateEngine.TokenType,string,int&gt;&gt; &lt;&gt;9__7_2" newName="$&lt;&gt;9__7_2" />
      <field signature="System.Func`2&lt;[Assembly-CSharp]&lt;&gt;f__AnonymousType0`3&lt;[Assembly-CSharp]XLua.TemplateEngine.TokenType,string,int&gt;,int&gt; &lt;&gt;9__7_3" newName="$&lt;&gt;9__7_3" />
      <field signature="System.Func`2&lt;[Assembly-CSharp]&lt;&gt;f__AnonymousType0`3&lt;[Assembly-CSharp]XLua.TemplateEngine.TokenType,string,int&gt;,[Assembly-CSharp]XLua.TemplateEngine.Chunk&gt; &lt;&gt;9__7_4" newName="$&lt;&gt;9__7_4" />
      <method signature="[Assembly-CSharp]&lt;&gt;f__AnonymousType0`3&lt;[Assembly-CSharp]XLua.TemplateEngine.TokenType,string,int&gt; XLua.TemplateEngine.Parser/&lt;&gt;c::&lt;Parse&gt;b__7_0([Assembly-CSharp]XLua.TemplateEngine.Parser/&lt;&gt;c, [System]System.Text.RegularExpressions.Capture)" newName="$&lt;Parse&gt;b__7_0" oldStackTraceSignature="XLua.TemplateEngine.&lt;&gt;c:&lt;Parse&gt;b__7_0(Capture)" newStackTraceSignature="$XLua.TemplateEngine.&lt;&gt;c:$&lt;Parse&gt;b__7_0(Capture)" />
      <method signature="[Assembly-CSharp]&lt;&gt;f__AnonymousType0`3&lt;[Assembly-CSharp]XLua.TemplateEngine.TokenType,string,int&gt; XLua.TemplateEngine.Parser/&lt;&gt;c::&lt;Parse&gt;b__7_1([Assembly-CSharp]XLua.TemplateEngine.Parser/&lt;&gt;c, [System]System.Text.RegularExpressions.Capture)" newName="$&lt;Parse&gt;b__7_1" oldStackTraceSignature="XLua.TemplateEngine.&lt;&gt;c:&lt;Parse&gt;b__7_1(Capture)" newStackTraceSignature="$XLua.TemplateEngine.&lt;&gt;c:$&lt;Parse&gt;b__7_1(Capture)" />
      <method signature="[Assembly-CSharp]&lt;&gt;f__AnonymousType0`3&lt;[Assembly-CSharp]XLua.TemplateEngine.TokenType,string,int&gt; XLua.TemplateEngine.Parser/&lt;&gt;c::&lt;Parse&gt;b__7_2([Assembly-CSharp]XLua.TemplateEngine.Parser/&lt;&gt;c, [System]System.Text.RegularExpressions.Capture)" newName="$&lt;Parse&gt;b__7_2" oldStackTraceSignature="XLua.TemplateEngine.&lt;&gt;c:&lt;Parse&gt;b__7_2(Capture)" newStackTraceSignature="$XLua.TemplateEngine.&lt;&gt;c:$&lt;Parse&gt;b__7_2(Capture)" />
      <method signature="int XLua.TemplateEngine.Parser/&lt;&gt;c::&lt;Parse&gt;b__7_3([Assembly-CSharp]XLua.TemplateEngine.Parser/&lt;&gt;c, [Assembly-CSharp]&lt;&gt;f__AnonymousType0`3&lt;[Assembly-CSharp]XLua.TemplateEngine.TokenType,string,int&gt;)" newName="$&lt;Parse&gt;b__7_3" oldStackTraceSignature="XLua.TemplateEngine.&lt;&gt;c:&lt;Parse&gt;b__7_3(&lt;&gt;f__AnonymousType0`3)" newStackTraceSignature="$XLua.TemplateEngine.&lt;&gt;c:$&lt;Parse&gt;b__7_3($&lt;&gt;f__AnonymousType0`3)" />
      <method signature="[Assembly-CSharp]XLua.TemplateEngine.Chunk XLua.TemplateEngine.Parser/&lt;&gt;c::&lt;Parse&gt;b__7_4([Assembly-CSharp]XLua.TemplateEngine.Parser/&lt;&gt;c, [Assembly-CSharp]&lt;&gt;f__AnonymousType0`3&lt;[Assembly-CSharp]XLua.TemplateEngine.TokenType,string,int&gt;)" newName="$&lt;Parse&gt;b__7_4" oldStackTraceSignature="XLua.TemplateEngine.&lt;&gt;c:&lt;Parse&gt;b__7_4(&lt;&gt;f__AnonymousType0`3)" newStackTraceSignature="$XLua.TemplateEngine.&lt;&gt;c:$&lt;Parse&gt;b__7_4($&lt;&gt;f__AnonymousType0`3)" />
    </type>
    <type fullName="XLua.TemplateEngine.TemplateFormatException" newFullName="$XLua.TemplateEngine.$TemplateFormatException" status="Renamed" />
    <type fullName="XLua.TemplateEngine.TokenType" newFullName="$XLua.TemplateEngine.$TokenType" status="Renamed">
      <field signature="[Assembly-CSharp]XLua.TemplateEngine.TokenType Code" newName="$Code" />
      <field signature="[Assembly-CSharp]XLua.TemplateEngine.TokenType Eval" newName="$Eval" />
      <field signature="[Assembly-CSharp]XLua.TemplateEngine.TokenType Text" newName="$Text" />
    </type>
    <type fullName="XLua.TypeExtensions" newFullName="$XLua.$TypeExtensions" status="Renamed">
      <method signature="bool XLua.TypeExtensions::IsValueType(System.Type)" newName="$IsValueType" oldStackTraceSignature="XLua.TypeExtensions:IsValueType(Type)" newStackTraceSignature="$XLua.$TypeExtensions:$IsValueType(Type)" />
      <method signature="bool XLua.TypeExtensions::IsEnum(System.Type)" newName="$IsEnum" oldStackTraceSignature="XLua.TypeExtensions:IsEnum(Type)" newStackTraceSignature="$XLua.$TypeExtensions:$IsEnum(Type)" />
      <method signature="bool XLua.TypeExtensions::IsPrimitive(System.Type)" newName="$IsPrimitive" oldStackTraceSignature="XLua.TypeExtensions:IsPrimitive(Type)" newStackTraceSignature="$XLua.$TypeExtensions:$IsPrimitive(Type)" />
      <method signature="bool XLua.TypeExtensions::IsAbstract(System.Type)" newName="$IsAbstract" oldStackTraceSignature="XLua.TypeExtensions:IsAbstract(Type)" newStackTraceSignature="$XLua.$TypeExtensions:$IsAbstract(Type)" />
      <method signature="bool XLua.TypeExtensions::IsSealed(System.Type)" newName="$IsSealed" oldStackTraceSignature="XLua.TypeExtensions:IsSealed(Type)" newStackTraceSignature="$XLua.$TypeExtensions:$IsSealed(Type)" />
      <method signature="bool XLua.TypeExtensions::IsInterface(System.Type)" newName="$IsInterface" oldStackTraceSignature="XLua.TypeExtensions:IsInterface(Type)" newStackTraceSignature="$XLua.$TypeExtensions:$IsInterface(Type)" />
      <method signature="bool XLua.TypeExtensions::IsClass(System.Type)" newName="$IsClass" oldStackTraceSignature="XLua.TypeExtensions:IsClass(Type)" newStackTraceSignature="$XLua.$TypeExtensions:$IsClass(Type)" />
      <method signature="System.Type XLua.TypeExtensions::BaseType(System.Type)" newName="$BaseType" oldStackTraceSignature="XLua.TypeExtensions:BaseType(Type)" newStackTraceSignature="$XLua.$TypeExtensions:$BaseType(Type)" />
      <method signature="bool XLua.TypeExtensions::IsGenericType(System.Type)" newName="$IsGenericType" oldStackTraceSignature="XLua.TypeExtensions:IsGenericType(Type)" newStackTraceSignature="$XLua.$TypeExtensions:$IsGenericType(Type)" />
      <method signature="bool XLua.TypeExtensions::IsGenericTypeDefinition(System.Type)" newName="$IsGenericTypeDefinition" oldStackTraceSignature="XLua.TypeExtensions:IsGenericTypeDefinition(Type)" newStackTraceSignature="$XLua.$TypeExtensions:$IsGenericTypeDefinition(Type)" />
      <method signature="bool XLua.TypeExtensions::IsNestedPublic(System.Type)" newName="$IsNestedPublic" oldStackTraceSignature="XLua.TypeExtensions:IsNestedPublic(Type)" newStackTraceSignature="$XLua.$TypeExtensions:$IsNestedPublic(Type)" />
      <method signature="bool XLua.TypeExtensions::IsPublic(System.Type)" newName="$IsPublic" oldStackTraceSignature="XLua.TypeExtensions:IsPublic(Type)" newStackTraceSignature="$XLua.$TypeExtensions:$IsPublic(Type)" />
      <method signature="string XLua.TypeExtensions::GetFriendlyName(System.Type)" newName="$GetFriendlyName" oldStackTraceSignature="XLua.TypeExtensions:GetFriendlyName(Type)" newStackTraceSignature="$XLua.$TypeExtensions:$GetFriendlyName(Type)" />
    </type>
    <type fullName="XLua.TypeExtensions/&lt;&gt;c" newFullName="" status="NotRenamed">
      <field signature="[Assembly-CSharp]XLua.TypeExtensions/&lt;&gt;c &lt;&gt;9" newName="$&lt;&gt;938" />
      <field signature="System.Func`2&lt;System.Type,string&gt; &lt;&gt;9__12_0" newName="$&lt;&gt;9__12_0" />
      <method signature="string XLua.TypeExtensions/&lt;&gt;c::&lt;GetFriendlyName&gt;b__12_0([Assembly-CSharp]XLua.TypeExtensions/&lt;&gt;c, System.Type)" newName="$&lt;GetFriendlyName&gt;b__12_0" oldStackTraceSignature="XLua.&lt;&gt;c:&lt;GetFriendlyName&gt;b__12_0(Type)" newStackTraceSignature="$XLua.&lt;&gt;c:$&lt;GetFriendlyName&gt;b__12_0(Type)" />
    </type>
    <type fullName="XLua.Utils" newFullName="$XLua.$Utils" status="Renamed">
      <field signature="int OBJ_META_IDX" newName="$OBJ_META_IDX" />
      <field signature="int METHOD_IDX" newName="$METHOD_IDX" />
      <field signature="int GETTER_IDX" newName="$GETTER_IDX" />
      <field signature="int SETTER_IDX" newName="$SETTER_IDX" />
      <field signature="int CLS_IDX" newName="$CLS_IDX" />
      <field signature="int CLS_META_IDX" newName="$CLS_META_IDX" />
      <field signature="int CLS_GETTER_IDX" newName="$CLS_GETTER_IDX" />
      <field signature="int CLS_SETTER_IDX" newName="$CLS_SETTER_IDX" />
      <field signature="string LuaIndexsFieldName" newName="$LuaIndexsFieldName" />
      <field signature="string LuaNewIndexsFieldName" newName="$LuaNewIndexsFieldName" />
      <field signature="string LuaClassIndexsFieldName" newName="$LuaClassIndexsFieldName" />
      <field signature="string LuaClassNewIndexsFieldName" newName="$LuaClassNewIndexsFieldName" />
      <method signature="bool XLua.Utils::LoadField(nint, int, string)" newName="$LoadField" oldStackTraceSignature="XLua.Utils:LoadField(IntPtr, Int32, String)" newStackTraceSignature="$XLua.$Utils:$LoadField(IntPtr, Int32, String)" />
      <method signature="nint XLua.Utils::GetMainState(nint)" newName="$GetMainState" oldStackTraceSignature="XLua.Utils:GetMainState(IntPtr)" newStackTraceSignature="$XLua.$Utils:$GetMainState(IntPtr)" />
      <method signature="System.Collections.Generic.List`1&lt;System.Type&gt; XLua.Utils::GetAllTypes(bool)" newName="$GetAllTypes" oldStackTraceSignature="XLua.Utils:GetAllTypes(Boolean)" newStackTraceSignature="$XLua.$Utils:$GetAllTypes(Boolean)" />
      <method signature="[Assembly-CSharp]XLua.LuaDLL.lua_CSFunction XLua.Utils::genFieldGetter(System.Type, System.Reflection.FieldInfo)" newName="$genFieldGetter" oldStackTraceSignature="XLua.Utils:genFieldGetter(Type, FieldInfo)" newStackTraceSignature="$XLua.$Utils:$genFieldGetter(Type, FieldInfo)" />
      <method signature="[Assembly-CSharp]XLua.LuaDLL.lua_CSFunction XLua.Utils::genFieldSetter(System.Type, System.Reflection.FieldInfo)" newName="$genFieldSetter" oldStackTraceSignature="XLua.Utils:genFieldSetter(Type, FieldInfo)" newStackTraceSignature="$XLua.$Utils:$genFieldSetter(Type, FieldInfo)" />
      <method signature="[Assembly-CSharp]XLua.LuaDLL.lua_CSFunction XLua.Utils::genItemGetter(System.Type, System.Reflection.PropertyInfo[])" newName="$genItemGetter" oldStackTraceSignature="XLua.Utils:genItemGetter(Type, PropertyInfo[])" newStackTraceSignature="$XLua.$Utils:$genItemGetter(Type, PropertyInfo[])" />
      <method signature="[Assembly-CSharp]XLua.LuaDLL.lua_CSFunction XLua.Utils::genItemSetter(System.Type, System.Reflection.PropertyInfo[])" newName="$genItemSetter" oldStackTraceSignature="XLua.Utils:genItemSetter(Type, PropertyInfo[])" newStackTraceSignature="$XLua.$Utils:$genItemSetter(Type, PropertyInfo[])" />
      <method signature="[Assembly-CSharp]XLua.LuaDLL.lua_CSFunction XLua.Utils::genEnumCastFrom(System.Type)" newName="$genEnumCastFrom" oldStackTraceSignature="XLua.Utils:genEnumCastFrom(Type)" newStackTraceSignature="$XLua.$Utils:$genEnumCastFrom(Type)" />
      <method signature="System.Collections.Generic.IEnumerable`1&lt;System.Reflection.MethodInfo&gt; XLua.Utils::GetExtensionMethodsOf(System.Type)" newName="$GetExtensionMethodsOf" oldStackTraceSignature="XLua.Utils:GetExtensionMethodsOf(Type)" newStackTraceSignature="$XLua.$Utils:$GetExtensionMethodsOf(Type)" />
      <method signature="void XLua.Utils::makeReflectionWrap(nint, System.Type, int, int, int, int, int, int, int, [Assembly-CSharp]XLua.LuaDLL.lua_CSFunction&amp;, [Assembly-CSharp]XLua.LuaDLL.lua_CSFunction&amp;, System.Reflection.BindingFlags)" newName="$makeReflectionWrap" oldStackTraceSignature="XLua.Utils:makeReflectionWrap(IntPtr, Type, Int32, Int32, Int32, Int32, Int32, Int32, Int32, lua_CSFunction&amp;, lua_CSFunction&amp;, BindingFlags)" newStackTraceSignature="$XLua.$Utils:$makeReflectionWrap(IntPtr, Type, Int32, Int32, Int32, Int32, Int32, Int32, Int32, $lua_CSFunction&amp;, $lua_CSFunction&amp;, BindingFlags)" />
      <method signature="void XLua.Utils::loadUpvalue(nint, System.Type, string, int)" newName="$loadUpvalue" oldStackTraceSignature="XLua.Utils:loadUpvalue(IntPtr, Type, String, Int32)" newStackTraceSignature="$XLua.$Utils:$loadUpvalue(IntPtr, Type, String, Int32)" />
      <method signature="void XLua.Utils::RegisterEnumType(nint, System.Type)" newName="$RegisterEnumType" oldStackTraceSignature="XLua.Utils:RegisterEnumType(IntPtr, Type)" newStackTraceSignature="$XLua.$Utils:$RegisterEnumType(IntPtr, Type)" />
      <method signature="void XLua.Utils::MakePrivateAccessible(nint, System.Type)" newName="$MakePrivateAccessible" oldStackTraceSignature="XLua.Utils:MakePrivateAccessible(IntPtr, Type)" newStackTraceSignature="$XLua.$Utils:$MakePrivateAccessible(IntPtr, Type)" />
      <method signature="int XLua.Utils::LazyReflectionCall(nint)" newName="$LazyReflectionCall" oldStackTraceSignature="XLua.Utils:LazyReflectionCall(IntPtr)" newStackTraceSignature="$XLua.$Utils:$LazyReflectionCall(IntPtr)" />
      <method signature="void XLua.Utils::ReflectionWrap(nint, System.Type, bool)" newName="$ReflectionWrap" oldStackTraceSignature="XLua.Utils:ReflectionWrap(IntPtr, Type, Boolean)" newStackTraceSignature="$XLua.$Utils:$ReflectionWrap(IntPtr, Type, Boolean)" />
      <method signature="void XLua.Utils::BeginObjectRegister(System.Type, nint, [Assembly-CSharp]XLua.ObjectTranslator, int, int, int, int, int)" newName="$BeginObjectRegister" oldStackTraceSignature="XLua.Utils:BeginObjectRegister(Type, IntPtr, ObjectTranslator, Int32, Int32, Int32, Int32, Int32)" newStackTraceSignature="$XLua.$Utils:$BeginObjectRegister(Type, IntPtr, $ObjectTranslator, Int32, Int32, Int32, Int32, Int32)" />
      <method signature="int XLua.Utils::abs_idx(int, int)" newName="$abs_idx" oldStackTraceSignature="XLua.Utils:abs_idx(Int32, Int32)" newStackTraceSignature="$XLua.$Utils:$abs_idx(Int32, Int32)" />
      <method signature="void XLua.Utils::EndObjectRegister(System.Type, nint, [Assembly-CSharp]XLua.ObjectTranslator, [Assembly-CSharp]XLua.LuaDLL.lua_CSFunction, [Assembly-CSharp]XLua.LuaDLL.lua_CSFunction, System.Type, [Assembly-CSharp]XLua.LuaDLL.lua_CSFunction, [Assembly-CSharp]XLua.LuaDLL.lua_CSFunction)" newName="$EndObjectRegister" oldStackTraceSignature="XLua.Utils:EndObjectRegister(Type, IntPtr, ObjectTranslator, lua_CSFunction, lua_CSFunction, Type, lua_CSFunction, lua_CSFunction)" newStackTraceSignature="$XLua.$Utils:$EndObjectRegister(Type, IntPtr, $ObjectTranslator, $lua_CSFunction, $lua_CSFunction, Type, $lua_CSFunction, $lua_CSFunction)" />
      <method signature="void XLua.Utils::RegisterFunc(nint, int, string, [Assembly-CSharp]XLua.LuaDLL.lua_CSFunction)" newName="$RegisterFunc" oldStackTraceSignature="XLua.Utils:RegisterFunc(IntPtr, Int32, String, lua_CSFunction)" newStackTraceSignature="$XLua.$Utils:$RegisterFunc(IntPtr, Int32, String, $lua_CSFunction)" />
      <method signature="void XLua.Utils::RegisterLazyFunc(nint, int, string, System.Type, [Assembly-CSharp]XLua.LazyMemberTypes, bool)" newName="$RegisterLazyFunc" oldStackTraceSignature="XLua.Utils:RegisterLazyFunc(IntPtr, Int32, String, Type, LazyMemberTypes, Boolean)" newStackTraceSignature="$XLua.$Utils:$RegisterLazyFunc(IntPtr, Int32, String, Type, $LazyMemberTypes, Boolean)" />
      <method signature="void XLua.Utils::RegisterObject(nint, [Assembly-CSharp]XLua.ObjectTranslator, int, string, object)" newName="$RegisterObject" oldStackTraceSignature="XLua.Utils:RegisterObject(IntPtr, ObjectTranslator, Int32, String, Object)" newStackTraceSignature="$XLua.$Utils:$RegisterObject(IntPtr, $ObjectTranslator, Int32, String, Object)" />
      <method signature="void XLua.Utils::BeginClassRegister(System.Type, nint, [Assembly-CSharp]XLua.LuaDLL.lua_CSFunction, int, int, int)" newName="$BeginClassRegister" oldStackTraceSignature="XLua.Utils:BeginClassRegister(Type, IntPtr, lua_CSFunction, Int32, Int32, Int32)" newStackTraceSignature="$XLua.$Utils:$BeginClassRegister(Type, IntPtr, $lua_CSFunction, Int32, Int32, Int32)" />
      <method signature="void XLua.Utils::EndClassRegister(System.Type, nint, [Assembly-CSharp]XLua.ObjectTranslator)" newName="$EndClassRegister" oldStackTraceSignature="XLua.Utils:EndClassRegister(Type, IntPtr, ObjectTranslator)" newStackTraceSignature="$XLua.$Utils:$EndClassRegister(Type, IntPtr, $ObjectTranslator)" />
      <method signature="System.Collections.Generic.List`1&lt;string&gt; XLua.Utils::getPathOfType(System.Type)" newName="$getPathOfType" oldStackTraceSignature="XLua.Utils:getPathOfType(Type)" newStackTraceSignature="$XLua.$Utils:$getPathOfType(Type)" />
      <method signature="void XLua.Utils::LoadCSTable(nint, System.Type)" newName="$LoadCSTable" oldStackTraceSignature="XLua.Utils:LoadCSTable(IntPtr, Type)" newStackTraceSignature="$XLua.$Utils:$LoadCSTable(IntPtr, Type)" />
      <method signature="void XLua.Utils::SetCSTable(nint, System.Type, int)" newName="$SetCSTable" oldStackTraceSignature="XLua.Utils:SetCSTable(IntPtr, Type, Int32)" newStackTraceSignature="$XLua.$Utils:$SetCSTable(IntPtr, Type, Int32)" />
      <method signature="bool XLua.Utils::IsParamsMatch(System.Reflection.MethodInfo, System.Reflection.MethodInfo)" newName="$IsParamsMatch" oldStackTraceSignature="XLua.Utils:IsParamsMatch(MethodInfo, MethodInfo)" newStackTraceSignature="$XLua.$Utils:$IsParamsMatch(MethodInfo, MethodInfo)" />
      <method signature="bool XLua.Utils::IsSupportedMethod(System.Reflection.MethodInfo)" newName="$IsSupportedMethod" oldStackTraceSignature="XLua.Utils:IsSupportedMethod(MethodInfo)" newStackTraceSignature="$XLua.$Utils:$IsSupportedMethod(MethodInfo)" />
      <method signature="System.Reflection.MethodInfo XLua.Utils::MakeGenericMethodWithConstraints(System.Reflection.MethodInfo)" newName="$MakeGenericMethodWithConstraints" oldStackTraceSignature="XLua.Utils:MakeGenericMethodWithConstraints(MethodInfo)" newStackTraceSignature="$XLua.$Utils:$MakeGenericMethodWithConstraints(MethodInfo)" />
      <method signature="System.Type XLua.Utils::getExtendedType(System.Reflection.MethodInfo)" newName="$getExtendedType" oldStackTraceSignature="XLua.Utils:getExtendedType(MethodInfo)" newStackTraceSignature="$XLua.$Utils:$getExtendedType(MethodInfo)" />
      <method signature="bool XLua.Utils::IsStaticPInvokeCSFunction([Assembly-CSharp]XLua.LuaDLL.lua_CSFunction)" newName="$IsStaticPInvokeCSFunction" oldStackTraceSignature="XLua.Utils:IsStaticPInvokeCSFunction(lua_CSFunction)" newStackTraceSignature="$XLua.$Utils:$IsStaticPInvokeCSFunction($lua_CSFunction)" />
      <method signature="bool XLua.Utils::IsPublic(System.Type)" newName="$IsPublic113" oldStackTraceSignature="XLua.Utils:IsPublic(Type)" newStackTraceSignature="$XLua.$Utils:$IsPublic113(Type)" />
    </type>
    <type fullName="XLua.Utils/&lt;&gt;c" newFullName="" status="NotRenamed">
      <field signature="[Assembly-CSharp]XLua.Utils/&lt;&gt;c &lt;&gt;9" newName="$&lt;&gt;939" />
      <field signature="System.Func`2&lt;System.Reflection.PropertyInfo,bool&gt; &lt;&gt;9__5_0" newName="$&lt;&gt;9__5_0" />
      <field signature="System.Func`2&lt;System.Reflection.PropertyInfo,bool&gt; &lt;&gt;9__6_0" newName="$&lt;&gt;9__6_040" />
      <field signature="System.Func`2&lt;System.Type,bool&gt; &lt;&gt;9__8_7" newName="$&lt;&gt;9__8_7" />
      <field signature="System.Func`2&lt;System.Type,bool&gt; &lt;&gt;9__8_8" newName="$&lt;&gt;9__8_8" />
      <field signature="System.Func`2&lt;System.Type,System.Collections.Generic.IEnumerable`1&lt;System.Reflection.MethodInfo&gt;&gt; &lt;&gt;9__8_0" newName="$&lt;&gt;9__8_0" />
      <field signature="System.Func`3&lt;System.Type,System.Reflection.MethodInfo,[Assembly-CSharp]&lt;&gt;f__AnonymousType1`2&lt;System.Type,System.Reflection.MethodInfo&gt;&gt; &lt;&gt;9__8_1" newName="$&lt;&gt;9__8_1" />
      <field signature="System.Func`2&lt;[Assembly-CSharp]&lt;&gt;f__AnonymousType1`2&lt;System.Type,System.Reflection.MethodInfo&gt;,bool&gt; &lt;&gt;9__8_2" newName="$&lt;&gt;9__8_2" />
      <field signature="System.Func`2&lt;[Assembly-CSharp]&lt;&gt;f__AnonymousType1`2&lt;System.Type,System.Reflection.MethodInfo&gt;,System.Type&gt; &lt;&gt;9__8_3" newName="$&lt;&gt;9__8_3" />
      <field signature="System.Func`2&lt;[Assembly-CSharp]&lt;&gt;f__AnonymousType1`2&lt;System.Type,System.Reflection.MethodInfo&gt;,System.Reflection.MethodInfo&gt; &lt;&gt;9__8_4" newName="$&lt;&gt;9__8_4" />
      <field signature="System.Func`2&lt;[System.Core]System.Linq.IGrouping`2&lt;System.Type,System.Reflection.MethodInfo&gt;,System.Type&gt; &lt;&gt;9__8_5" newName="$&lt;&gt;9__8_5" />
      <field signature="System.Func`2&lt;[System.Core]System.Linq.IGrouping`2&lt;System.Type,System.Reflection.MethodInfo&gt;,System.Collections.Generic.IEnumerable`1&lt;System.Reflection.MethodInfo&gt;&gt; &lt;&gt;9__8_6" newName="$&lt;&gt;9__8_6" />
      <field signature="System.Func`2&lt;System.Reflection.MethodInfo,string&gt; &lt;&gt;9__10_0" newName="$&lt;&gt;9__10_0" />
      <field signature="System.Func`2&lt;System.Reflection.MethodInfo,string&gt; &lt;&gt;9__10_1" newName="$&lt;&gt;9__10_1" />
      <field signature="System.Func`3&lt;System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Reflection.MethodInfo&gt; &lt;&gt;9__10_2" newName="$&lt;&gt;9__10_2" />
      <method signature="bool XLua.Utils/&lt;&gt;c::&lt;genItemGetter&gt;b__5_0([Assembly-CSharp]XLua.Utils/&lt;&gt;c, System.Reflection.PropertyInfo)" newName="$&lt;genItemGetter&gt;b__5_0" oldStackTraceSignature="XLua.&lt;&gt;c:&lt;genItemGetter&gt;b__5_0(PropertyInfo)" newStackTraceSignature="$XLua.&lt;&gt;c:$&lt;genItemGetter&gt;b__5_0(PropertyInfo)" />
      <method signature="bool XLua.Utils/&lt;&gt;c::&lt;genItemSetter&gt;b__6_0([Assembly-CSharp]XLua.Utils/&lt;&gt;c, System.Reflection.PropertyInfo)" newName="$&lt;genItemSetter&gt;b__6_0" oldStackTraceSignature="XLua.&lt;&gt;c:&lt;genItemSetter&gt;b__6_0(PropertyInfo)" newStackTraceSignature="$XLua.&lt;&gt;c:$&lt;genItemSetter&gt;b__6_0(PropertyInfo)" />
      <method signature="bool XLua.Utils/&lt;&gt;c::&lt;GetExtensionMethodsOf&gt;b__8_7([Assembly-CSharp]XLua.Utils/&lt;&gt;c, System.Type)" newName="$&lt;GetExtensionMethodsOf&gt;b__8_7" oldStackTraceSignature="XLua.&lt;&gt;c:&lt;GetExtensionMethodsOf&gt;b__8_7(Type)" newStackTraceSignature="$XLua.&lt;&gt;c:$&lt;GetExtensionMethodsOf&gt;b__8_7(Type)" />
      <method signature="bool XLua.Utils/&lt;&gt;c::&lt;GetExtensionMethodsOf&gt;b__8_8([Assembly-CSharp]XLua.Utils/&lt;&gt;c, System.Type)" newName="$&lt;GetExtensionMethodsOf&gt;b__8_8" oldStackTraceSignature="XLua.&lt;&gt;c:&lt;GetExtensionMethodsOf&gt;b__8_8(Type)" newStackTraceSignature="$XLua.&lt;&gt;c:$&lt;GetExtensionMethodsOf&gt;b__8_8(Type)" />
      <method signature="System.Collections.Generic.IEnumerable`1&lt;System.Reflection.MethodInfo&gt; XLua.Utils/&lt;&gt;c::&lt;GetExtensionMethodsOf&gt;b__8_0([Assembly-CSharp]XLua.Utils/&lt;&gt;c, System.Type)" newName="$&lt;GetExtensionMethodsOf&gt;b__8_0" oldStackTraceSignature="XLua.&lt;&gt;c:&lt;GetExtensionMethodsOf&gt;b__8_0(Type)" newStackTraceSignature="$XLua.&lt;&gt;c:$&lt;GetExtensionMethodsOf&gt;b__8_0(Type)" />
      <method signature="[Assembly-CSharp]&lt;&gt;f__AnonymousType1`2&lt;System.Type,System.Reflection.MethodInfo&gt; XLua.Utils/&lt;&gt;c::&lt;GetExtensionMethodsOf&gt;b__8_1([Assembly-CSharp]XLua.Utils/&lt;&gt;c, System.Type, System.Reflection.MethodInfo)" newName="$&lt;GetExtensionMethodsOf&gt;b__8_1" oldStackTraceSignature="XLua.&lt;&gt;c:&lt;GetExtensionMethodsOf&gt;b__8_1(Type, MethodInfo)" newStackTraceSignature="$XLua.&lt;&gt;c:$&lt;GetExtensionMethodsOf&gt;b__8_1(Type, MethodInfo)" />
      <method signature="bool XLua.Utils/&lt;&gt;c::&lt;GetExtensionMethodsOf&gt;b__8_2([Assembly-CSharp]XLua.Utils/&lt;&gt;c, [Assembly-CSharp]&lt;&gt;f__AnonymousType1`2&lt;System.Type,System.Reflection.MethodInfo&gt;)" newName="$&lt;GetExtensionMethodsOf&gt;b__8_2" oldStackTraceSignature="XLua.&lt;&gt;c:&lt;GetExtensionMethodsOf&gt;b__8_2(&lt;&gt;f__AnonymousType1`2)" newStackTraceSignature="$XLua.&lt;&gt;c:$&lt;GetExtensionMethodsOf&gt;b__8_2($&lt;&gt;f__AnonymousType1`2)" />
      <method signature="System.Type XLua.Utils/&lt;&gt;c::&lt;GetExtensionMethodsOf&gt;b__8_3([Assembly-CSharp]XLua.Utils/&lt;&gt;c, [Assembly-CSharp]&lt;&gt;f__AnonymousType1`2&lt;System.Type,System.Reflection.MethodInfo&gt;)" newName="$&lt;GetExtensionMethodsOf&gt;b__8_3" oldStackTraceSignature="XLua.&lt;&gt;c:&lt;GetExtensionMethodsOf&gt;b__8_3(&lt;&gt;f__AnonymousType1`2)" newStackTraceSignature="$XLua.&lt;&gt;c:$&lt;GetExtensionMethodsOf&gt;b__8_3($&lt;&gt;f__AnonymousType1`2)" />
      <method signature="System.Reflection.MethodInfo XLua.Utils/&lt;&gt;c::&lt;GetExtensionMethodsOf&gt;b__8_4([Assembly-CSharp]XLua.Utils/&lt;&gt;c, [Assembly-CSharp]&lt;&gt;f__AnonymousType1`2&lt;System.Type,System.Reflection.MethodInfo&gt;)" newName="$&lt;GetExtensionMethodsOf&gt;b__8_4" oldStackTraceSignature="XLua.&lt;&gt;c:&lt;GetExtensionMethodsOf&gt;b__8_4(&lt;&gt;f__AnonymousType1`2)" newStackTraceSignature="$XLua.&lt;&gt;c:$&lt;GetExtensionMethodsOf&gt;b__8_4($&lt;&gt;f__AnonymousType1`2)" />
      <method signature="System.Type XLua.Utils/&lt;&gt;c::&lt;GetExtensionMethodsOf&gt;b__8_5([Assembly-CSharp]XLua.Utils/&lt;&gt;c, [System.Core]System.Linq.IGrouping`2&lt;System.Type,System.Reflection.MethodInfo&gt;)" newName="$&lt;GetExtensionMethodsOf&gt;b__8_5" oldStackTraceSignature="XLua.&lt;&gt;c:&lt;GetExtensionMethodsOf&gt;b__8_5(IGrouping`2)" newStackTraceSignature="$XLua.&lt;&gt;c:$&lt;GetExtensionMethodsOf&gt;b__8_5(IGrouping`2)" />
      <method signature="System.Collections.Generic.IEnumerable`1&lt;System.Reflection.MethodInfo&gt; XLua.Utils/&lt;&gt;c::&lt;GetExtensionMethodsOf&gt;b__8_6([Assembly-CSharp]XLua.Utils/&lt;&gt;c, [System.Core]System.Linq.IGrouping`2&lt;System.Type,System.Reflection.MethodInfo&gt;)" newName="$&lt;GetExtensionMethodsOf&gt;b__8_6" oldStackTraceSignature="XLua.&lt;&gt;c:&lt;GetExtensionMethodsOf&gt;b__8_6(IGrouping`2)" newStackTraceSignature="$XLua.&lt;&gt;c:$&lt;GetExtensionMethodsOf&gt;b__8_6(IGrouping`2)" />
      <method signature="string XLua.Utils/&lt;&gt;c::&lt;makeReflectionWrap&gt;b__10_0([Assembly-CSharp]XLua.Utils/&lt;&gt;c, System.Reflection.MethodInfo)" newName="$&lt;makeReflectionWrap&gt;b__10_0" oldStackTraceSignature="XLua.&lt;&gt;c:&lt;makeReflectionWrap&gt;b__10_0(MethodInfo)" newStackTraceSignature="$XLua.&lt;&gt;c:$&lt;makeReflectionWrap&gt;b__10_0(MethodInfo)" />
      <method signature="string XLua.Utils/&lt;&gt;c::&lt;makeReflectionWrap&gt;b__10_1([Assembly-CSharp]XLua.Utils/&lt;&gt;c, System.Reflection.MethodInfo)" newName="$&lt;makeReflectionWrap&gt;b__10_1" oldStackTraceSignature="XLua.&lt;&gt;c:&lt;makeReflectionWrap&gt;b__10_1(MethodInfo)" newStackTraceSignature="$XLua.&lt;&gt;c:$&lt;makeReflectionWrap&gt;b__10_1(MethodInfo)" />
      <method signature="System.Reflection.MethodInfo XLua.Utils/&lt;&gt;c::&lt;makeReflectionWrap&gt;b__10_2([Assembly-CSharp]XLua.Utils/&lt;&gt;c, System.Reflection.MethodInfo, System.Reflection.MethodInfo)" newName="$&lt;makeReflectionWrap&gt;b__10_2" oldStackTraceSignature="XLua.&lt;&gt;c:&lt;makeReflectionWrap&gt;b__10_2(MethodInfo, MethodInfo)" newStackTraceSignature="$XLua.&lt;&gt;c:$&lt;makeReflectionWrap&gt;b__10_2(MethodInfo, MethodInfo)" />
    </type>
    <type fullName="XLua.Utils/&lt;&gt;c__DisplayClass10_0" newFullName="$XLua.$Utils/$&lt;&gt;c__DisplayClass10_0" status="Renamed">
      <field signature="string fieldName" newName="$fieldName" />
      <method signature="bool XLua.Utils/&lt;&gt;c__DisplayClass10_0::&lt;makeReflectionWrap&gt;b__3([Assembly-CSharp]XLua.Utils/&lt;&gt;c__DisplayClass10_0, System.Reflection.EventInfo)" newName="$&lt;makeReflectionWrap&gt;b__3" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass10_0:&lt;makeReflectionWrap&gt;b__3(EventInfo)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass10_0:$&lt;makeReflectionWrap&gt;b__3(EventInfo)" />
    </type>
    <type fullName="XLua.Utils/&lt;&gt;c__DisplayClass14_0" newFullName="$XLua.$Utils/$&lt;&gt;c__DisplayClass14_00" status="Renamed">
      <field signature="string memberName" newName="$memberName" />
      <method signature="bool XLua.Utils/&lt;&gt;c__DisplayClass14_0::&lt;LazyReflectionCall&gt;b__0([Assembly-CSharp]XLua.Utils/&lt;&gt;c__DisplayClass14_0, System.Reflection.MethodInfo)" newName="$&lt;LazyReflectionCall&gt;b__0" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass14_0:&lt;LazyReflectionCall&gt;b__0(MethodInfo)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass14_00:$&lt;LazyReflectionCall&gt;b__0(MethodInfo)" />
    </type>
    <type fullName="XLua.Utils/&lt;&gt;c__DisplayClass15_0" newFullName="$XLua.$Utils/$&lt;&gt;c__DisplayClass15_01" status="Renamed">
      <field signature="System.Type type" newName="$type41" />
      <method signature="int XLua.Utils/&lt;&gt;c__DisplayClass15_0::&lt;ReflectionWrap&gt;b__0([Assembly-CSharp]XLua.Utils/&lt;&gt;c__DisplayClass15_0, nint)" newName="$&lt;ReflectionWrap&gt;b__0" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass15_0:&lt;ReflectionWrap&gt;b__0(IntPtr)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass15_01:$&lt;ReflectionWrap&gt;b__0(IntPtr)" />
    </type>
    <type fullName="XLua.Utils/&lt;&gt;c__DisplayClass2_0" newFullName="$XLua.$Utils/$&lt;&gt;c__DisplayClass2_0" status="Renamed">
      <field signature="bool exclude_generic_definition" newName="$exclude_generic_definition" />
      <field signature="System.Func`2&lt;System.Type,bool&gt; &lt;&gt;9__0" newName="$&lt;&gt;9__0" />
      <method signature="bool XLua.Utils/&lt;&gt;c__DisplayClass2_0::&lt;GetAllTypes&gt;b__0([Assembly-CSharp]XLua.Utils/&lt;&gt;c__DisplayClass2_0, System.Type)" newName="$&lt;GetAllTypes&gt;b__0" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass2_0:&lt;GetAllTypes&gt;b__0(Type)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass2_0:$&lt;GetAllTypes&gt;b__0(Type)" />
    </type>
    <type fullName="XLua.Utils/&lt;&gt;c__DisplayClass3_0" newFullName="$XLua.$Utils/$&lt;&gt;c__DisplayClass3_0" status="Renamed">
      <field signature="System.Reflection.FieldInfo field" newName="$field" />
      <field signature="System.Type type" newName="$type42" />
      <method signature="int XLua.Utils/&lt;&gt;c__DisplayClass3_0::&lt;genFieldGetter&gt;b__0([Assembly-CSharp]XLua.Utils/&lt;&gt;c__DisplayClass3_0, nint)" newName="$&lt;genFieldGetter&gt;b__0" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass3_0:&lt;genFieldGetter&gt;b__0(IntPtr)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass3_0:$&lt;genFieldGetter&gt;b__0(IntPtr)" />
      <method signature="int XLua.Utils/&lt;&gt;c__DisplayClass3_0::&lt;genFieldGetter&gt;b__1([Assembly-CSharp]XLua.Utils/&lt;&gt;c__DisplayClass3_0, nint)" newName="$&lt;genFieldGetter&gt;b__1" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass3_0:&lt;genFieldGetter&gt;b__1(IntPtr)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass3_0:$&lt;genFieldGetter&gt;b__1(IntPtr)" />
    </type>
    <type fullName="XLua.Utils/&lt;&gt;c__DisplayClass4_0" newFullName="$XLua.$Utils/$&lt;&gt;c__DisplayClass4_0" status="Renamed">
      <field signature="System.Reflection.FieldInfo field" newName="$field43" />
      <field signature="System.Type type" newName="$type44" />
      <method signature="int XLua.Utils/&lt;&gt;c__DisplayClass4_0::&lt;genFieldSetter&gt;b__0([Assembly-CSharp]XLua.Utils/&lt;&gt;c__DisplayClass4_0, nint)" newName="$&lt;genFieldSetter&gt;b__0" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass4_0:&lt;genFieldSetter&gt;b__0(IntPtr)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass4_0:$&lt;genFieldSetter&gt;b__0(IntPtr)" />
      <method signature="int XLua.Utils/&lt;&gt;c__DisplayClass4_0::&lt;genFieldSetter&gt;b__1([Assembly-CSharp]XLua.Utils/&lt;&gt;c__DisplayClass4_0, nint)" newName="$&lt;genFieldSetter&gt;b__1" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass4_0:&lt;genFieldSetter&gt;b__1(IntPtr)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass4_0:$&lt;genFieldSetter&gt;b__1(IntPtr)" />
    </type>
    <type fullName="XLua.Utils/&lt;&gt;c__DisplayClass5_0" newFullName="$XLua.$Utils/$&lt;&gt;c__DisplayClass5_0" status="Renamed">
      <field signature="System.Type type" newName="$type45" />
      <field signature="System.Reflection.PropertyInfo[] props" newName="$props" />
      <field signature="System.Type[] params_type" newName="$params_type" />
      <field signature="object[] arg" newName="$arg" />
      <method signature="int XLua.Utils/&lt;&gt;c__DisplayClass5_0::&lt;genItemGetter&gt;b__1([Assembly-CSharp]XLua.Utils/&lt;&gt;c__DisplayClass5_0, nint)" newName="$&lt;genItemGetter&gt;b__1" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass5_0:&lt;genItemGetter&gt;b__1(IntPtr)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass5_0:$&lt;genItemGetter&gt;b__1(IntPtr)" />
    </type>
    <type fullName="XLua.Utils/&lt;&gt;c__DisplayClass6_0" newFullName="$XLua.$Utils/$&lt;&gt;c__DisplayClass6_0" status="Renamed">
      <field signature="System.Type type" newName="$type46" />
      <field signature="System.Reflection.PropertyInfo[] props" newName="$props47" />
      <field signature="System.Type[] params_type" newName="$params_type48" />
      <field signature="object[] arg" newName="$arg49" />
      <method signature="int XLua.Utils/&lt;&gt;c__DisplayClass6_0::&lt;genItemSetter&gt;b__1([Assembly-CSharp]XLua.Utils/&lt;&gt;c__DisplayClass6_0, nint)" newName="$&lt;genItemSetter&gt;b__1" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass6_0:&lt;genItemSetter&gt;b__1(IntPtr)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass6_0:$&lt;genItemSetter&gt;b__1(IntPtr)" />
    </type>
    <type fullName="XLua.Utils/&lt;&gt;c__DisplayClass7_0" newFullName="$XLua.$Utils/$&lt;&gt;c__DisplayClass7_02" status="Renamed">
      <field signature="System.Type type" newName="$type50" />
      <method signature="int XLua.Utils/&lt;&gt;c__DisplayClass7_0::&lt;genEnumCastFrom&gt;b__0([Assembly-CSharp]XLua.Utils/&lt;&gt;c__DisplayClass7_0, nint)" newName="$&lt;genEnumCastFrom&gt;b__0" oldStackTraceSignature="XLua.&lt;&gt;c__DisplayClass7_0:&lt;genEnumCastFrom&gt;b__0(IntPtr)" newStackTraceSignature="$XLua.$&lt;&gt;c__DisplayClass7_02:$&lt;genEnumCastFrom&gt;b__0(IntPtr)" />
    </type>
    <type fullName="XLua.Utils/MethodKey" newFullName="$XLua.$Utils/$MethodKey" status="Renamed">
      <field signature="string Name" newName="$Name" />
      <field signature="bool IsStatic" newName="$IsStatic" />
    </type>
    <type fullName="XLuaTest.ArrayAccess" newFullName="$XLuaTest.$ArrayAccess" status="Renamed" />
    <type fullName="XLuaTest.AsyncTest" newFullName="" status="NotRenamed">
      <field signature="[Assembly-CSharp]XLua.LuaEnv luaenv" newName="$luaenv62" />
    </type>
    <type fullName="XLuaTest.BaseTest" newFullName="$XLuaTest.$BaseTest" status="Renamed">
      <method signature="void XLuaTest.BaseTest::Foo([Assembly-CSharp]XLuaTest.BaseTest, int)" newName="$Foo449" oldStackTraceSignature="XLuaTest.BaseTest:Foo(Int32)" newStackTraceSignature="$XLuaTest.$BaseTest:$Foo449(Int32)" />
      <method signature="void XLuaTest.BaseTest::Proxy([Assembly-CSharp]XLuaTest.BaseTest, int)" newName="$Proxy" oldStackTraceSignature="XLuaTest.BaseTest:Proxy(Int32)" newStackTraceSignature="$XLuaTest.$BaseTest:$Proxy(Int32)" />
    </type>
    <type fullName="XLuaTest.BaseTestBase`1" newFullName="$XLuaTest.$BaseTestBase`1" status="Renamed">
      <method signature="void XLuaTest.BaseTestBase`1::Foo([Assembly-CSharp]XLuaTest.BaseTestBase`1&lt;!0&gt;, int)" newName="$Foo449" oldStackTraceSignature="XLuaTest.BaseTestBase`1:Foo(Int32)" newStackTraceSignature="$XLuaTest.$BaseTestBase`1:$Foo449(Int32)" />
    </type>
    <type fullName="XLuaTest.BaseTestHelper" newFullName="$XLuaTest.$BaseTestHelper" status="Renamed" />
    <type fullName="XLuaTest.CoroutineConfig" newFullName="$XLuaTest.$CoroutineConfig" status="Renamed">
      <property signature="System.Collections.Generic.List`1&lt;System.Type&gt; LuaCallCSharp" newName="$LuaCallCSharp" />
      <method signature="System.Collections.Generic.List`1&lt;System.Type&gt; XLuaTest.CoroutineConfig::get_LuaCallCSharp()" newName="$get_LuaCallCSharp" oldStackTraceSignature="XLuaTest.CoroutineConfig:get_LuaCallCSharp()" newStackTraceSignature="$XLuaTest.$CoroutineConfig:$get_LuaCallCSharp()" />
    </type>
    <type fullName="XLuaTest.CoroutineTest" newFullName="" status="NotRenamed">
      <field signature="[Assembly-CSharp]XLua.LuaEnv luaenv" newName="$luaenv61" />
    </type>
    <type fullName="XLuaTest.CustomValueTypeParam" newFullName="$XLuaTest.$CustomValueTypeParam" status="Renamed" />
    <type fullName="XLuaTest.DecimalParam" newFullName="$XLuaTest.$DecimalParam" status="Renamed" />
    <type fullName="XLuaTest.EnumParam" newFullName="$XLuaTest.$EnumParam" status="Renamed" />
    <type fullName="XLuaTest.Foo" newFullName="$XLuaTest.$Foo" status="Renamed">
      <method signature="void XLuaTest.Foo::Test1`1([Assembly-CSharp]XLuaTest.Foo, !!0)" newName="$Test1421" oldStackTraceSignature="XLuaTest.Foo:Test1(T)" newStackTraceSignature="$XLuaTest.$Foo:$Test1421(T)" />
      <method signature="!!0 XLuaTest.Foo::Test2`2([Assembly-CSharp]XLuaTest.Foo, !!0, !!1, [UnityEngine.CoreModule]UnityEngine.GameObject)" newName="$Test2422" oldStackTraceSignature="XLuaTest.Foo:Test2(T1, T2, GameObject)" newStackTraceSignature="$XLuaTest.$Foo:$Test2422(T1, T2, GameObject)" />
      <method signature="void XLuaTest.Foo::UnsupportedMethod1`1([Assembly-CSharp]XLuaTest.Foo, !!0)" newName="$UnsupportedMethod1" oldStackTraceSignature="XLuaTest.Foo:UnsupportedMethod1(T)" newStackTraceSignature="$XLuaTest.$Foo:$UnsupportedMethod1(T)" />
      <method signature="void XLuaTest.Foo::UnsupportedMethod2`1([Assembly-CSharp]XLuaTest.Foo)" newName="$UnsupportedMethod2" oldStackTraceSignature="XLuaTest.Foo:UnsupportedMethod2()" newStackTraceSignature="$XLuaTest.$Foo:$UnsupportedMethod2()" />
      <method signature="void XLuaTest.Foo::UnsupportedMethod3`1([Assembly-CSharp]XLuaTest.Foo, !!0)" newName="$UnsupportedMethod3" oldStackTraceSignature="XLuaTest.Foo:UnsupportedMethod3(T)" newStackTraceSignature="$XLuaTest.$Foo:$UnsupportedMethod3(T)" />
    </type>
    <type fullName="XLuaTest.Foo1Child" newFullName="$XLuaTest.$Foo1Child" status="Renamed" />
    <type fullName="XLuaTest.Foo1Parent" newFullName="$XLuaTest.$Foo1Parent" status="Renamed" />
    <type fullName="XLuaTest.Foo2Child" newFullName="$XLuaTest.$Foo2Child" status="Renamed" />
    <type fullName="XLuaTest.Foo2Parent" newFullName="$XLuaTest.$Foo2Parent" status="Renamed" />
    <type fullName="XLuaTest.FooExtension" newFullName="$XLuaTest.$FooExtension" status="Renamed">
      <method signature="void XLuaTest.FooExtension::PlainExtension([Assembly-CSharp]XLuaTest.Foo1Parent)" newName="$PlainExtension" oldStackTraceSignature="XLuaTest.FooExtension:PlainExtension(Foo1Parent)" newStackTraceSignature="$XLuaTest.$FooExtension:$PlainExtension($Foo1Parent)" />
      <method signature="!!0 XLuaTest.FooExtension::Extension1`1(!!0)" newName="$Extension1" oldStackTraceSignature="XLuaTest.FooExtension:Extension1(T)" newStackTraceSignature="$XLuaTest.$FooExtension:$Extension1(T)" />
      <method signature="!!0 XLuaTest.FooExtension::Extension2`1(!!0, [UnityEngine.CoreModule]UnityEngine.GameObject)" newName="$Extension2" oldStackTraceSignature="XLuaTest.FooExtension:Extension2(T, GameObject)" newStackTraceSignature="$XLuaTest.$FooExtension:$Extension2(T, GameObject)" />
      <method signature="void XLuaTest.FooExtension::Extension2`2(!!0, !!1)" newName="$Extension2423" oldStackTraceSignature="XLuaTest.FooExtension:Extension2(T1, T2)" newStackTraceSignature="$XLuaTest.$FooExtension:$Extension2423(T1, T2)" />
      <method signature="!!0 XLuaTest.FooExtension::UnsupportedExtension`1([UnityEngine.CoreModule]UnityEngine.GameObject)" newName="$UnsupportedExtension" oldStackTraceSignature="XLuaTest.FooExtension:UnsupportedExtension(GameObject)" newStackTraceSignature="$XLuaTest.$FooExtension:$UnsupportedExtension(GameObject)" />
    </type>
    <type fullName="XLuaTest.GenericClass`1" newFullName="$XLuaTest.$GenericClass`1" status="Renamed">
      <field signature="!0 a" newName="$a66" />
      <method signature="void XLuaTest.GenericClass`1::Func1([Assembly-CSharp]XLuaTest.GenericClass`1&lt;!0&gt;)" newName="$Func1" oldStackTraceSignature="XLuaTest.GenericClass`1:Func1()" newStackTraceSignature="$XLuaTest.$GenericClass`1:$Func1()" />
      <method signature="!0 XLuaTest.GenericClass`1::Func2([Assembly-CSharp]XLuaTest.GenericClass`1&lt;!0&gt;)" newName="$Func2" oldStackTraceSignature="XLuaTest.GenericClass`1:Func2()" newStackTraceSignature="$XLuaTest.$GenericClass`1:$Func2()" />
    </type>
    <type fullName="XLuaTest.GenericMethodExample" newFullName="" status="NotRenamed">
      <field signature="string script" newName="$script72" />
      <field signature="[Assembly-CSharp]XLua.LuaEnv env" newName="$env" />
    </type>
    <type fullName="XLuaTest.GenericStruct`1" newFullName="$XLuaTest.$GenericStruct`1" status="Renamed">
      <field signature="!0 a" newName="$a69" />
      <method signature="!0 XLuaTest.GenericStruct`1::GetA([Assembly-CSharp]XLuaTest.GenericStruct`1&lt;!0&gt;&amp;, int)" newName="$GetA" oldStackTraceSignature="XLuaTest.GenericStruct`1:GetA(Int32)" newStackTraceSignature="$XLuaTest.$GenericStruct`1:$GetA(Int32)" />
    </type>
    <type fullName="XLuaTest.HotfixCalc" newFullName="$XLuaTest.$HotfixCalc" status="Renamed">
      <method signature="int XLuaTest.HotfixCalc::Add([Assembly-CSharp]XLuaTest.HotfixCalc, int, int)" newName="$Add412" oldStackTraceSignature="XLuaTest.HotfixCalc:Add(Int32, Int32)" newStackTraceSignature="$XLuaTest.$HotfixCalc:$Add412(Int32, Int32)" />
      <method signature="[UnityEngine.CoreModule]UnityEngine.Vector3 XLuaTest.HotfixCalc::Add([Assembly-CSharp]XLuaTest.HotfixCalc, [UnityEngine.CoreModule]UnityEngine.Vector3, [UnityEngine.CoreModule]UnityEngine.Vector3)" newName="$Add413" oldStackTraceSignature="XLuaTest.HotfixCalc:Add(Vector3, Vector3)" newStackTraceSignature="$XLuaTest.$HotfixCalc:$Add413(Vector3, Vector3)" />
      <method signature="int XLuaTest.HotfixCalc::TestOut([Assembly-CSharp]XLuaTest.HotfixCalc, int, double&amp;, string&amp;)" newName="$TestOut" oldStackTraceSignature="XLuaTest.HotfixCalc:TestOut(Int32, Double&amp;, String&amp;)" newStackTraceSignature="$XLuaTest.$HotfixCalc:$TestOut(Int32, Double&amp;, String&amp;)" />
      <method signature="int XLuaTest.HotfixCalc::TestOut([Assembly-CSharp]XLuaTest.HotfixCalc, int, double&amp;, string&amp;, [UnityEngine.CoreModule]UnityEngine.GameObject)" newName="$TestOut414" oldStackTraceSignature="XLuaTest.HotfixCalc:TestOut(Int32, Double&amp;, String&amp;, GameObject)" newStackTraceSignature="$XLuaTest.$HotfixCalc:$TestOut414(Int32, Double&amp;, String&amp;, GameObject)" />
      <method signature="!!0 XLuaTest.HotfixCalc::Test1`1([Assembly-CSharp]XLuaTest.HotfixCalc)" newName="$Test1" oldStackTraceSignature="XLuaTest.HotfixCalc:Test1()" newStackTraceSignature="$XLuaTest.$HotfixCalc:$Test1()" />
      <method signature="!!0 XLuaTest.HotfixCalc::Test2`3([Assembly-CSharp]XLuaTest.HotfixCalc, !!0, !!1&amp;, !!2&amp;)" newName="$Test2" oldStackTraceSignature="XLuaTest.HotfixCalc:Test2(T1, T2&amp;, T3&amp;)" newStackTraceSignature="$XLuaTest.$HotfixCalc:$Test2(T1, T2&amp;, T3&amp;)" />
      <method signature="int XLuaTest.HotfixCalc::Test3`1(!!0)" newName="$Test3" oldStackTraceSignature="XLuaTest.HotfixCalc:Test3(T)" newStackTraceSignature="$XLuaTest.$HotfixCalc:$Test3(T)" />
      <method signature="void XLuaTest.HotfixCalc::Test4`1(!!0)" newName="$Test4" oldStackTraceSignature="XLuaTest.HotfixCalc:Test4(T)" newStackTraceSignature="$XLuaTest.$HotfixCalc:$Test4(T)" />
      <method signature="void XLuaTest.HotfixCalc::Test5`1([Assembly-CSharp]XLuaTest.HotfixCalc, int, !!0[])" newName="$Test5" oldStackTraceSignature="XLuaTest.HotfixCalc:Test5(Int32, T[])" newStackTraceSignature="$XLuaTest.$HotfixCalc:$Test5(Int32, T[])" />
    </type>
    <type fullName="XLuaTest.HotfixTest" newFullName="" status="NotRenamed">
      <field signature="[Assembly-CSharp]XLua.LuaEnv luaenv" newName="$luaenv65" />
      <field signature="int tick" newName="$tick" />
    </type>
    <type fullName="XLuaTest.HotfixTest2" newFullName="" status="NotRenamed">
      <method signature="void XLuaTest.HotfixTest2::TestStateful([Assembly-CSharp]XLuaTest.HotfixTest2)" newName="$TestStateful" oldStackTraceSignature="XLuaTest.HotfixTest2:TestStateful()" newStackTraceSignature="XLuaTest.HotfixTest2:$TestStateful()" />
    </type>
    <type fullName="XLuaTest.HotfixTest2/&lt;&gt;c" newFullName="" status="NotRenamed">
      <field signature="[Assembly-CSharp]XLuaTest.HotfixTest2/&lt;&gt;c &lt;&gt;9" newName="$&lt;&gt;970" />
      <field signature="System.Action`2&lt;int,double&gt; &lt;&gt;9__1_0" newName="$&lt;&gt;9__1_071" />
      <method signature="void XLuaTest.HotfixTest2/&lt;&gt;c::&lt;TestStateful&gt;b__1_0([Assembly-CSharp]XLuaTest.HotfixTest2/&lt;&gt;c, int, double)" newName="$&lt;TestStateful&gt;b__1_0" oldStackTraceSignature="XLuaTest.&lt;&gt;c:&lt;TestStateful&gt;b__1_0(Int32, Double)" newStackTraceSignature="XLuaTest.&lt;&gt;c:$&lt;TestStateful&gt;b__1_0(Int32, Double)" />
    </type>
    <type fullName="XLuaTest.IExchanger" newFullName="$XLuaTest.$IExchanger" status="Renamed">
      <method signature="void XLuaTest.IExchanger::exchange([Assembly-CSharp]XLuaTest.IExchanger, System.Array)" newName="$exchange" oldStackTraceSignature="XLuaTest.IExchanger:exchange(Array)" newStackTraceSignature="$XLuaTest.$IExchanger:$exchange(Array)" />
    </type>
    <type fullName="XLuaTest.InnerTypeTest" newFullName="$XLuaTest.$InnerTypeTest" status="Renamed">
      <method signature="void XLuaTest.InnerTypeTest::Foo([Assembly-CSharp]XLuaTest.InnerTypeTest)" newName="$Foo" oldStackTraceSignature="XLuaTest.InnerTypeTest:Foo()" newStackTraceSignature="$XLuaTest.$InnerTypeTest:$Foo()" />
      <method signature="[Assembly-CSharp]XLuaTest.InnerTypeTest/_InnerStruct XLuaTest.InnerTypeTest::Bar([Assembly-CSharp]XLuaTest.InnerTypeTest)" newName="$Bar" oldStackTraceSignature="XLuaTest.InnerTypeTest:Bar()" newStackTraceSignature="$XLuaTest.$InnerTypeTest:$Bar()" />
    </type>
    <type fullName="XLuaTest.InnerTypeTest/_InnerStruct" newFullName="$XLuaTest.$InnerTypeTest/$_InnerStruct" status="Renamed">
      <field signature="int x" newName="$x67" />
      <field signature="int y" newName="$y68" />
    </type>
    <type fullName="XLuaTest.IntParam" newFullName="$XLuaTest.$IntParam" status="Renamed" />
    <type fullName="XLuaTest.InvokeLua" newFullName="" status="NotRenamed">
      <field signature="string script" newName="$script53" />
      <method signature="void XLuaTest.InvokeLua::Test([Assembly-CSharp]XLuaTest.InvokeLua, [Assembly-CSharp]XLua.LuaEnv)" newName="$Test" oldStackTraceSignature="XLuaTest.InvokeLua:Test(LuaEnv)" newStackTraceSignature="XLuaTest.InvokeLua:$Test($LuaEnv)" />
      <method signature="void XLuaTest.InvokeLua::Notify([Assembly-CSharp]XLuaTest.InvokeLua, object, [Assembly-CSharp]XLuaTest.PropertyChangedEventArgs)" newName="$Notify" oldStackTraceSignature="XLuaTest.InvokeLua:Notify(Object, PropertyChangedEventArgs)" newStackTraceSignature="XLuaTest.InvokeLua:$Notify(Object, $PropertyChangedEventArgs)" />
    </type>
    <type fullName="XLuaTest.InvokeLua/CalcNew" newFullName="XLuaTest.InvokeLua/$CalcNew" status="Renamed" />
    <type fullName="XLuaTest.InvokeLua/ICalc" newFullName="XLuaTest.InvokeLua/$ICalc3" status="Renamed">
      <property signature="int Mult" newName="$Mult" />
      <property signature="object Item(int)" newName="$Item" />
      <event signature="System.EventHandler`1&lt;[Assembly-CSharp]XLuaTest.PropertyChangedEventArgs&gt; PropertyChanged" newName="$PropertyChanged" />
      <method signature="void XLuaTest.InvokeLua/ICalc::add_PropertyChanged([Assembly-CSharp]XLuaTest.InvokeLua/ICalc, System.EventHandler`1&lt;[Assembly-CSharp]XLuaTest.PropertyChangedEventArgs&gt;)" newName="$add_PropertyChanged" oldStackTraceSignature="XLuaTest.ICalc:add_PropertyChanged(EventHandler`1)" newStackTraceSignature="XLuaTest.$ICalc3:$add_PropertyChanged(EventHandler`1)" />
      <method signature="void XLuaTest.InvokeLua/ICalc::remove_PropertyChanged([Assembly-CSharp]XLuaTest.InvokeLua/ICalc, System.EventHandler`1&lt;[Assembly-CSharp]XLuaTest.PropertyChangedEventArgs&gt;)" newName="$remove_PropertyChanged" oldStackTraceSignature="XLuaTest.ICalc:remove_PropertyChanged(EventHandler`1)" newStackTraceSignature="XLuaTest.$ICalc3:$remove_PropertyChanged(EventHandler`1)" />
      <method signature="int XLuaTest.InvokeLua/ICalc::Add([Assembly-CSharp]XLuaTest.InvokeLua/ICalc, int, int)" newName="$Add446" oldStackTraceSignature="XLuaTest.ICalc:Add(Int32, Int32)" newStackTraceSignature="XLuaTest.$ICalc3:$Add446(Int32, Int32)" />
      <method signature="int XLuaTest.InvokeLua/ICalc::get_Mult([Assembly-CSharp]XLuaTest.InvokeLua/ICalc)" newName="$get_Mult" oldStackTraceSignature="XLuaTest.ICalc:get_Mult()" newStackTraceSignature="XLuaTest.$ICalc3:$get_Mult()" />
      <method signature="void XLuaTest.InvokeLua/ICalc::set_Mult([Assembly-CSharp]XLuaTest.InvokeLua/ICalc, int)" newName="$set_Mult" oldStackTraceSignature="XLuaTest.ICalc:set_Mult(Int32)" newStackTraceSignature="XLuaTest.$ICalc3:$set_Mult(Int32)" />
      <method signature="object XLuaTest.InvokeLua/ICalc::get_Item([Assembly-CSharp]XLuaTest.InvokeLua/ICalc, int)" newName="$get_Item447" oldStackTraceSignature="XLuaTest.ICalc:get_Item(Int32)" newStackTraceSignature="XLuaTest.$ICalc3:$get_Item447(Int32)" />
      <method signature="void XLuaTest.InvokeLua/ICalc::set_Item([Assembly-CSharp]XLuaTest.InvokeLua/ICalc, int, object)" newName="$set_Item448" oldStackTraceSignature="XLuaTest.ICalc:set_Item(Int32, Object)" newStackTraceSignature="XLuaTest.$ICalc3:$set_Item448(Int32, Object)" />
    </type>
    <type fullName="XLuaTest.LuaBehaviour" newFullName="" status="NotRenamed">
      <field signature="[Assembly-CSharp]XLua.LuaEnv luaEnv" newName="$luaEnv52" />
      <field signature="float lastGCTime" newName="$lastGCTime" />
      <field signature="float GCInterval" newName="$GCInterval" />
      <field signature="System.Action luaStart" newName="$luaStart" />
      <field signature="System.Action luaUpdate" newName="$luaUpdate" />
      <field signature="System.Action luaOnDestroy" newName="$luaOnDestroy" />
      <field signature="[Assembly-CSharp]XLua.LuaTable scriptEnv" newName="$scriptEnv" />
    </type>
    <type fullName="XLuaTest.MessageBox" newFullName="" status="NotRenamed">
      <method signature="void XLuaTest.MessageBox::ShowAlertBox(string, string, System.Action)" newName="$ShowAlertBox" oldStackTraceSignature="XLuaTest.MessageBox:ShowAlertBox(String, String, Action)" newStackTraceSignature="XLuaTest.MessageBox:$ShowAlertBox(String, String, Action)" />
      <method signature="void XLuaTest.MessageBox::ShowConfirmBox(string, string, System.Action`1&lt;bool&gt;)" newName="$ShowConfirmBox" oldStackTraceSignature="XLuaTest.MessageBox:ShowConfirmBox(String, String, Action`1)" newStackTraceSignature="XLuaTest.MessageBox:$ShowConfirmBox(String, String, Action`1)" />
    </type>
    <type fullName="XLuaTest.MessageBox/&lt;&gt;c__DisplayClass0_0" newFullName="XLuaTest.MessageBox/$&lt;&gt;c__DisplayClass0_0" status="Renamed">
      <field signature="System.Action onFinished" newName="$onFinished" />
      <field signature="[UnityEngine.UI]UnityEngine.UI.Button button" newName="$button" />
      <field signature="[UnityEngine.CoreModule]UnityEngine.Transform alertPanel" newName="$alertPanel" />
      <method signature="void XLuaTest.MessageBox/&lt;&gt;c__DisplayClass0_0::&lt;ShowAlertBox&gt;b__0([Assembly-CSharp]XLuaTest.MessageBox/&lt;&gt;c__DisplayClass0_0)" newName="$&lt;ShowAlertBox&gt;b__0" oldStackTraceSignature="XLuaTest.&lt;&gt;c__DisplayClass0_0:&lt;ShowAlertBox&gt;b__0()" newStackTraceSignature="XLuaTest.$&lt;&gt;c__DisplayClass0_0:$&lt;ShowAlertBox&gt;b__0()" />
    </type>
    <type fullName="XLuaTest.MessageBox/&lt;&gt;c__DisplayClass1_0" newFullName="XLuaTest.MessageBox/$&lt;&gt;c__DisplayClass1_0" status="Renamed">
      <field signature="[UnityEngine.UI]UnityEngine.UI.Button confirmBtn" newName="$confirmBtn" />
      <field signature="[UnityEngine.UI]UnityEngine.UI.Button cancelBtn" newName="$cancelBtn" />
      <field signature="[UnityEngine.CoreModule]UnityEngine.Transform confirmPanel" newName="$confirmPanel" />
      <field signature="System.Action`1&lt;bool&gt; onFinished" newName="$onFinished63" />
      <field signature="System.Action cleanup" newName="$cleanup" />
      <method signature="void XLuaTest.MessageBox/&lt;&gt;c__DisplayClass1_0::&lt;ShowConfirmBox&gt;b__0([Assembly-CSharp]XLuaTest.MessageBox/&lt;&gt;c__DisplayClass1_0)" newName="$&lt;ShowConfirmBox&gt;b__0" oldStackTraceSignature="XLuaTest.&lt;&gt;c__DisplayClass1_0:&lt;ShowConfirmBox&gt;b__0()" newStackTraceSignature="XLuaTest.$&lt;&gt;c__DisplayClass1_0:$&lt;ShowConfirmBox&gt;b__0()" />
      <method signature="void XLuaTest.MessageBox/&lt;&gt;c__DisplayClass1_0::&lt;ShowConfirmBox&gt;b__1([Assembly-CSharp]XLuaTest.MessageBox/&lt;&gt;c__DisplayClass1_0)" newName="$&lt;ShowConfirmBox&gt;b__1" oldStackTraceSignature="XLuaTest.&lt;&gt;c__DisplayClass1_0:&lt;ShowConfirmBox&gt;b__1()" newStackTraceSignature="XLuaTest.$&lt;&gt;c__DisplayClass1_0:$&lt;ShowConfirmBox&gt;b__1()" />
      <method signature="void XLuaTest.MessageBox/&lt;&gt;c__DisplayClass1_0::&lt;ShowConfirmBox&gt;b__2([Assembly-CSharp]XLuaTest.MessageBox/&lt;&gt;c__DisplayClass1_0)" newName="$&lt;ShowConfirmBox&gt;b__2" oldStackTraceSignature="XLuaTest.&lt;&gt;c__DisplayClass1_0:&lt;ShowConfirmBox&gt;b__2()" newStackTraceSignature="XLuaTest.$&lt;&gt;c__DisplayClass1_0:$&lt;ShowConfirmBox&gt;b__2()" />
    </type>
    <type fullName="XLuaTest.MessageBoxConfig" newFullName="$XLuaTest.$MessageBoxConfig" status="Renamed">
      <field signature="System.Collections.Generic.List`1&lt;System.Type&gt; CSharpCallLua" newName="$CSharpCallLua64" />
    </type>
    <type fullName="XLuaTest.MyEnum" newFullName="$XLuaTest.$MyEnum" status="Renamed">
      <field signature="[Assembly-CSharp]XLuaTest.MyEnum E1" newName="$E155" />
      <field signature="[Assembly-CSharp]XLuaTest.MyEnum E2" newName="$E256" />
    </type>
    <type fullName="XLuaTest.MyStruct" newFullName="$XLuaTest.$MyStruct" status="Renamed">
      <field signature="int a" newName="$a" />
      <field signature="int b" newName="$b" />
      <field signature="System.Decimal c" newName="$c54" />
      <field signature="[Assembly-CSharp]XLuaTest.Pedding e" newName="$e" />
    </type>
    <type fullName="XLuaTest.NoGc" newFullName="" status="NotRenamed">
      <field signature="[Assembly-CSharp]XLua.LuaEnv luaenv" newName="$luaenv57" />
      <field signature="[Assembly-CSharp]XLuaTest.IntParam f1" newName="$f158" />
      <field signature="[Assembly-CSharp]XLuaTest.Vector3Param f2" newName="$f259" />
      <field signature="[Assembly-CSharp]XLuaTest.CustomValueTypeParam f3" newName="$f3" />
      <field signature="[Assembly-CSharp]XLuaTest.EnumParam f4" newName="$f4" />
      <field signature="[Assembly-CSharp]XLuaTest.DecimalParam f5" newName="$f5" />
      <field signature="[Assembly-CSharp]XLuaTest.ArrayAccess farr" newName="$farr" />
      <field signature="System.Action flua" newName="$flua" />
      <field signature="[Assembly-CSharp]XLuaTest.IExchanger ie" newName="$ie" />
      <field signature="[Assembly-CSharp]XLua.LuaFunction add" newName="$add60" />
      <method signature="float XLuaTest.NoGc::FloatParamMethod([Assembly-CSharp]XLuaTest.NoGc, float)" newName="$FloatParamMethod" oldStackTraceSignature="XLuaTest.NoGc:FloatParamMethod(Single)" newStackTraceSignature="XLuaTest.NoGc:$FloatParamMethod(Single)" />
      <method signature="[UnityEngine.CoreModule]UnityEngine.Vector3 XLuaTest.NoGc::Vector3ParamMethod([Assembly-CSharp]XLuaTest.NoGc, [UnityEngine.CoreModule]UnityEngine.Vector3)" newName="$Vector3ParamMethod" oldStackTraceSignature="XLuaTest.NoGc:Vector3ParamMethod(Vector3)" newStackTraceSignature="XLuaTest.NoGc:$Vector3ParamMethod(Vector3)" />
      <method signature="[Assembly-CSharp]XLuaTest.MyStruct XLuaTest.NoGc::StructParamMethod([Assembly-CSharp]XLuaTest.NoGc, [Assembly-CSharp]XLuaTest.MyStruct)" newName="$StructParamMethod" oldStackTraceSignature="XLuaTest.NoGc:StructParamMethod(MyStruct)" newStackTraceSignature="XLuaTest.NoGc:$StructParamMethod($MyStruct)" />
      <method signature="[Assembly-CSharp]XLuaTest.MyEnum XLuaTest.NoGc::EnumParamMethod([Assembly-CSharp]XLuaTest.NoGc, [Assembly-CSharp]XLuaTest.MyEnum)" newName="$EnumParamMethod" oldStackTraceSignature="XLuaTest.NoGc:EnumParamMethod(MyEnum)" newStackTraceSignature="XLuaTest.NoGc:$EnumParamMethod($MyEnum)" />
      <method signature="System.Decimal XLuaTest.NoGc::DecimalParamMethod([Assembly-CSharp]XLuaTest.NoGc, System.Decimal)" newName="$DecimalParamMethod" oldStackTraceSignature="XLuaTest.NoGc:DecimalParamMethod(Decimal)" newStackTraceSignature="XLuaTest.NoGc:$DecimalParamMethod(Decimal)" />
    </type>
    <type fullName="XLuaTest.NoHotfixCalc" newFullName="$XLuaTest.$NoHotfixCalc" status="Renamed">
      <method signature="int XLuaTest.NoHotfixCalc::Add([Assembly-CSharp]XLuaTest.NoHotfixCalc, int, int)" newName="$Add415" oldStackTraceSignature="XLuaTest.NoHotfixCalc:Add(Int32, Int32)" newStackTraceSignature="$XLuaTest.$NoHotfixCalc:$Add415(Int32, Int32)" />
    </type>
    <type fullName="XLuaTest.Pedding" newFullName="$XLuaTest.$Pedding" status="Renamed">
      <field signature="byte c" newName="$c" />
    </type>
    <type fullName="XLuaTest.PropertyChangedEventArgs" newFullName="$XLuaTest.$PropertyChangedEventArgs" status="Renamed">
      <field signature="string name" newName="$name" />
      <field signature="object value" newName="$value" />
    </type>
    <type fullName="XLuaTest.PushAsTableStruct" newFullName="$XLuaTest.$PushAsTableStruct" status="Renamed">
      <field signature="int x" newName="$x75" />
      <field signature="int y" newName="$y76" />
    </type>
    <type fullName="XLuaTest.RawObjectTest" newFullName="" status="NotRenamed">
      <method signature="void XLuaTest.RawObjectTest::PrintType(object)" newName="$PrintType" oldStackTraceSignature="XLuaTest.RawObjectTest:PrintType(Object)" newStackTraceSignature="XLuaTest.RawObjectTest:$PrintType(Object)" />
    </type>
    <type fullName="XLuaTest.SignatureLoaderTest" newFullName="" status="NotRenamed">
      <field signature="string PUBLIC_KEY" newName="$PUBLIC_KEY" />
    </type>
    <type fullName="XLuaTest.SignatureLoaderTest/&lt;&gt;c" newFullName="" status="NotRenamed">
      <field signature="[Assembly-CSharp]XLuaTest.SignatureLoaderTest/&lt;&gt;c &lt;&gt;9" newName="$&lt;&gt;973" />
      <field signature="[Assembly-CSharp]XLua.LuaEnv/CustomLoader &lt;&gt;9__1_0" newName="$&lt;&gt;9__1_074" />
      <method signature="byte[] XLuaTest.SignatureLoaderTest/&lt;&gt;c::&lt;Start&gt;b__1_0([Assembly-CSharp]XLuaTest.SignatureLoaderTest/&lt;&gt;c, string&amp;)" newName="$&lt;Start&gt;b__1_0424" oldStackTraceSignature="XLuaTest.&lt;&gt;c:&lt;Start&gt;b__1_0(String&amp;)" newStackTraceSignature="XLuaTest.&lt;&gt;c:$&lt;Start&gt;b__1_0424(String&amp;)" />
    </type>
    <type fullName="XLuaTest.StatefullTest" newFullName="$XLuaTest.$StatefullTest" status="Renamed">
      <field signature="int &lt;AProp&gt;k__BackingField" newName="$&lt;AProp&gt;k__BackingField" />
      <field signature="System.Action`2&lt;int,double&gt; AEvent" newName="$AEvent" />
      <property signature="int AProp" newName="$AProp" />
      <property signature="int Item(string)" newName="$Item" />
      <event signature="System.Action`2&lt;int,double&gt; AEvent" newName="$AEvent" />
      <method signature="int XLuaTest.StatefullTest::get_AProp([Assembly-CSharp]XLuaTest.StatefullTest)" newName="$get_AProp" oldStackTraceSignature="XLuaTest.StatefullTest:get_AProp()" newStackTraceSignature="$XLuaTest.$StatefullTest:$get_AProp()" />
      <method signature="void XLuaTest.StatefullTest::set_AProp([Assembly-CSharp]XLuaTest.StatefullTest, int)" newName="$set_AProp" oldStackTraceSignature="XLuaTest.StatefullTest:set_AProp(Int32)" newStackTraceSignature="$XLuaTest.$StatefullTest:$set_AProp(Int32)" />
      <method signature="void XLuaTest.StatefullTest::add_AEvent([Assembly-CSharp]XLuaTest.StatefullTest, System.Action`2&lt;int,double&gt;)" newName="$add_AEvent" oldStackTraceSignature="XLuaTest.StatefullTest:add_AEvent(Action`2)" newStackTraceSignature="$XLuaTest.$StatefullTest:$add_AEvent(Action`2)" />
      <method signature="void XLuaTest.StatefullTest::remove_AEvent([Assembly-CSharp]XLuaTest.StatefullTest, System.Action`2&lt;int,double&gt;)" newName="$remove_AEvent" oldStackTraceSignature="XLuaTest.StatefullTest:remove_AEvent(Action`2)" newStackTraceSignature="$XLuaTest.$StatefullTest:$remove_AEvent(Action`2)" />
      <method signature="int XLuaTest.StatefullTest::get_Item([Assembly-CSharp]XLuaTest.StatefullTest, string)" newName="$get_Item417" oldStackTraceSignature="XLuaTest.StatefullTest:get_Item(String)" newStackTraceSignature="$XLuaTest.$StatefullTest:$get_Item417(String)" />
      <method signature="void XLuaTest.StatefullTest::set_Item([Assembly-CSharp]XLuaTest.StatefullTest, string, int)" newName="$set_Item418" oldStackTraceSignature="XLuaTest.StatefullTest:set_Item(String, Int32)" newStackTraceSignature="$XLuaTest.$StatefullTest:$set_Item418(String, Int32)" />
      <method signature="void XLuaTest.StatefullTest::Start([Assembly-CSharp]XLuaTest.StatefullTest)" newName="$Start" oldStackTraceSignature="XLuaTest.StatefullTest:Start()" newStackTraceSignature="$XLuaTest.$StatefullTest:$Start()" />
      <method signature="void XLuaTest.StatefullTest::Update([Assembly-CSharp]XLuaTest.StatefullTest)" newName="$Update419" oldStackTraceSignature="XLuaTest.StatefullTest:Update()" newStackTraceSignature="$XLuaTest.$StatefullTest:$Update419()" />
      <method signature="void XLuaTest.StatefullTest::GenericTest`1([Assembly-CSharp]XLuaTest.StatefullTest, !!0)" newName="$GenericTest" oldStackTraceSignature="XLuaTest.StatefullTest:GenericTest(T)" newStackTraceSignature="$XLuaTest.$StatefullTest:$GenericTest(T)" />
      <method signature="void XLuaTest.StatefullTest::StaticFunc(int, int)" newName="$StaticFunc" oldStackTraceSignature="XLuaTest.StatefullTest:StaticFunc(Int32, Int32)" newStackTraceSignature="$XLuaTest.$StatefullTest:$StaticFunc(Int32, Int32)" />
      <method signature="void XLuaTest.StatefullTest::StaticFunc(string, int, int)" newName="$StaticFunc420" oldStackTraceSignature="XLuaTest.StatefullTest:StaticFunc(String, Int32, Int32)" newStackTraceSignature="$XLuaTest.$StatefullTest:$StaticFunc420(String, Int32, Int32)" />
    </type>
    <type fullName="XLuaTest.StructTest" newFullName="$XLuaTest.$StructTest" status="Renamed">
      <field signature="[UnityEngine.CoreModule]UnityEngine.GameObject go" newName="$go" />
      <method signature="[UnityEngine.CoreModule]UnityEngine.GameObject XLuaTest.StructTest::GetGo([Assembly-CSharp]XLuaTest.StructTest&amp;, int, object)" newName="$GetGo" oldStackTraceSignature="XLuaTest.StructTest:GetGo(Int32, Object)" newStackTraceSignature="$XLuaTest.$StructTest:$GetGo(Int32, Object)" />
      <method signature="string XLuaTest.StructTest::Proxy([Assembly-CSharp]XLuaTest.StructTest&amp;)" newName="$Proxy416" oldStackTraceSignature="XLuaTest.StructTest:Proxy()" newStackTraceSignature="$XLuaTest.$StructTest:$Proxy416()" />
    </type>
    <type fullName="XLuaTest.Vector3Param" newFullName="$XLuaTest.$Vector3Param" status="Renamed" />
  </assembly>
  <assembly name="Obfuz.Runtime">
    <type fullName="&lt;PrivateImplementationDetails&gt;" newFullName="$&lt;PrivateImplementationDetails&gt;4" status="Renamed">
      <field signature="[Obfuz.Runtime]&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=1032 99FEF9D317141F74422059EE0FCDBF041E561D92DF2836AD3F453D6E68DC7AFD" newName="$99FEF9D317141F74422059EE0FCDBF041E561D92DF2836AD3F453D6E68DC7AFD" />
      <field signature="[Obfuz.Runtime]&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=405 F9E64B97508D4D6EAE36860CFE0B3EB0B357223A54065A683F06CB98379049B7" newName="$F9E64B97508D4D6EAE36860CFE0B3EB0B357223A54065A683F06CB98379049B7" />
    </type>
    <type fullName="&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=1032" newFullName="$&lt;PrivateImplementationDetails&gt;4/$__StaticArrayInitTypeSize=1032" status="Renamed" />
    <type fullName="&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=405" newFullName="$&lt;PrivateImplementationDetails&gt;4/$__StaticArrayInitTypeSize=405" status="Renamed" />
    <type fullName="Obfuz.AssetUtility" newFullName="$Obfuz.$AssetUtility" status="Renamed">
      <method signature="void Obfuz.AssetUtility::VerifySecretKey(int, int)" newName="$VerifySecretKey" oldStackTraceSignature="Obfuz.AssetUtility:VerifySecretKey(Int32, Int32)" newStackTraceSignature="$Obfuz.$AssetUtility:$VerifySecretKey(Int32, Int32)" />
    </type>
    <type fullName="Obfuz.ConstUtility" newFullName="$Obfuz.$ConstUtility" status="Renamed">
      <method signature="int Obfuz.ConstUtility::GetInt(byte[], int)" newName="$GetInt" oldStackTraceSignature="Obfuz.ConstUtility:GetInt(Byte[], Int32)" newStackTraceSignature="$Obfuz.$ConstUtility:$GetInt(Byte[], Int32)" />
      <method signature="long Obfuz.ConstUtility::GetLong(byte[], int)" newName="$GetLong" oldStackTraceSignature="Obfuz.ConstUtility:GetLong(Byte[], Int32)" newStackTraceSignature="$Obfuz.$ConstUtility:$GetLong(Byte[], Int32)" />
      <method signature="float Obfuz.ConstUtility::GetFloat(byte[], int)" newName="$GetFloat" oldStackTraceSignature="Obfuz.ConstUtility:GetFloat(Byte[], Int32)" newStackTraceSignature="$Obfuz.$ConstUtility:$GetFloat(Byte[], Int32)" />
      <method signature="double Obfuz.ConstUtility::GetDouble(byte[], int)" newName="$GetDouble" oldStackTraceSignature="Obfuz.ConstUtility:GetDouble(Byte[], Int32)" newStackTraceSignature="$Obfuz.$ConstUtility:$GetDouble(Byte[], Int32)" />
      <method signature="string Obfuz.ConstUtility::GetString(byte[], int, int)" newName="$GetString" oldStackTraceSignature="Obfuz.ConstUtility:GetString(Byte[], Int32, Int32)" newStackTraceSignature="$Obfuz.$ConstUtility:$GetString(Byte[], Int32, Int32)" />
      <method signature="byte[] Obfuz.ConstUtility::GetBytes(byte[], int, int)" newName="$GetBytes" oldStackTraceSignature="Obfuz.ConstUtility:GetBytes(Byte[], Int32, Int32)" newStackTraceSignature="$Obfuz.$ConstUtility:$GetBytes(Byte[], Int32, Int32)" />
      <method signature="int[] Obfuz.ConstUtility::GetInts(byte[], int, int)" newName="$GetInts" oldStackTraceSignature="Obfuz.ConstUtility:GetInts(Byte[], Int32, Int32)" newStackTraceSignature="$Obfuz.$ConstUtility:$GetInts(Byte[], Int32, Int32)" />
      <method signature="void Obfuz.ConstUtility::InitializeArray(System.Array, byte[], int, int)" newName="$InitializeArray" oldStackTraceSignature="Obfuz.ConstUtility:InitializeArray(Array, Byte[], Int32, Int32)" newStackTraceSignature="$Obfuz.$ConstUtility:$InitializeArray(Array, Byte[], Int32, Int32)" />
      <method signature="int Obfuz.ConstUtility::CastFloatAsInt(float)" newName="$CastFloatAsInt" oldStackTraceSignature="Obfuz.ConstUtility:CastFloatAsInt(Single)" newStackTraceSignature="$Obfuz.$ConstUtility:$CastFloatAsInt(Single)" />
      <method signature="float Obfuz.ConstUtility::CastIntAsFloat(int)" newName="$CastIntAsFloat" oldStackTraceSignature="Obfuz.ConstUtility:CastIntAsFloat(Int32)" newStackTraceSignature="$Obfuz.$ConstUtility:$CastIntAsFloat(Int32)" />
      <method signature="long Obfuz.ConstUtility::CastDoubleAsLong(double)" newName="$CastDoubleAsLong" oldStackTraceSignature="Obfuz.ConstUtility:CastDoubleAsLong(Double)" newStackTraceSignature="$Obfuz.$ConstUtility:$CastDoubleAsLong(Double)" />
      <method signature="double Obfuz.ConstUtility::CastLongAsDouble(long)" newName="$CastLongAsDouble" oldStackTraceSignature="Obfuz.ConstUtility:CastLongAsDouble(Int64)" newStackTraceSignature="$Obfuz.$ConstUtility:$CastLongAsDouble(Int64)" />
    </type>
    <type fullName="Obfuz.DefaultDynamicEncryptionScope" newFullName="$Obfuz.$DefaultDynamicEncryptionScope" status="Renamed">
      <method signature="void Obfuz.DefaultDynamicEncryptionScope::ForcePreserveAOT([Obfuz.Runtime]Obfuz.DefaultDynamicEncryptionScope&amp;)" newName="$ForcePreserveAOT425" oldStackTraceSignature="Obfuz.DefaultDynamicEncryptionScope:ForcePreserveAOT()" newStackTraceSignature="$Obfuz.$DefaultDynamicEncryptionScope:$ForcePreserveAOT425()" />
    </type>
    <type fullName="Obfuz.DefaultStaticEncryptionScope" newFullName="$Obfuz.$DefaultStaticEncryptionScope" status="Renamed">
      <method signature="void Obfuz.DefaultStaticEncryptionScope::ForcePreserveAOT([Obfuz.Runtime]Obfuz.DefaultStaticEncryptionScope&amp;)" newName="$ForcePreserveAOT426" oldStackTraceSignature="Obfuz.DefaultStaticEncryptionScope:ForcePreserveAOT()" newStackTraceSignature="$Obfuz.$DefaultStaticEncryptionScope:$ForcePreserveAOT426()" />
    </type>
    <type fullName="Obfuz.EncryptionScopeBase" newFullName="$Obfuz.$EncryptionScopeBase" status="Renamed">
      <method signature="void Obfuz.EncryptionScopeBase::ForcePreserveAOT([Obfuz.Runtime]Obfuz.EncryptionScopeBase)" newName="$ForcePreserveAOT" oldStackTraceSignature="Obfuz.EncryptionScopeBase:ForcePreserveAOT()" newStackTraceSignature="$Obfuz.$EncryptionScopeBase:$ForcePreserveAOT()" />
    </type>
    <type fullName="Obfuz.EncryptionService`1" newFullName="$Obfuz.$EncryptionService`1" status="Renamed">
      <field signature="[Obfuz.Runtime]Obfuz.IEncryptor _encryptor" newName="$_encryptor" />
      <property signature="[Obfuz.Runtime]Obfuz.IEncryptor Encryptor" newName="$Encryptor" />
      <method signature="[Obfuz.Runtime]Obfuz.IEncryptor Obfuz.EncryptionService`1::get_Encryptor()" newName="$get_Encryptor" oldStackTraceSignature="Obfuz.EncryptionService`1:get_Encryptor()" newStackTraceSignature="$Obfuz.$EncryptionService`1:$get_Encryptor()" />
      <method signature="void Obfuz.EncryptionService`1::set_Encryptor([Obfuz.Runtime]Obfuz.IEncryptor)" newName="$set_Encryptor" oldStackTraceSignature="Obfuz.EncryptionService`1:set_Encryptor(IEncryptor)" newStackTraceSignature="$Obfuz.$EncryptionService`1:$set_Encryptor($IEncryptor)" />
      <method signature="void Obfuz.EncryptionService`1::EncryptBlock(byte[], int, int)" newName="$EncryptBlock" oldStackTraceSignature="Obfuz.EncryptionService`1:EncryptBlock(Byte[], Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptionService`1:$EncryptBlock(Byte[], Int32, Int32)" />
      <method signature="void Obfuz.EncryptionService`1::DecryptBlock(byte[], int, int)" newName="$DecryptBlock" oldStackTraceSignature="Obfuz.EncryptionService`1:DecryptBlock(Byte[], Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptionService`1:$DecryptBlock(Byte[], Int32, Int32)" />
      <method signature="int Obfuz.EncryptionService`1::Encrypt(int, int, int)" newName="$Encrypt" oldStackTraceSignature="Obfuz.EncryptionService`1:Encrypt(Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptionService`1:$Encrypt(Int32, Int32, Int32)" />
      <method signature="int Obfuz.EncryptionService`1::Decrypt(int, int, int)" newName="$Decrypt" oldStackTraceSignature="Obfuz.EncryptionService`1:Decrypt(Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptionService`1:$Decrypt(Int32, Int32, Int32)" />
      <method signature="long Obfuz.EncryptionService`1::Encrypt(long, int, int)" newName="$Encrypt427" oldStackTraceSignature="Obfuz.EncryptionService`1:Encrypt(Int64, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptionService`1:$Encrypt427(Int64, Int32, Int32)" />
      <method signature="long Obfuz.EncryptionService`1::Decrypt(long, int, int)" newName="$Decrypt428" oldStackTraceSignature="Obfuz.EncryptionService`1:Decrypt(Int64, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptionService`1:$Decrypt428(Int64, Int32, Int32)" />
      <method signature="float Obfuz.EncryptionService`1::Encrypt(float, int, int)" newName="$Encrypt429" oldStackTraceSignature="Obfuz.EncryptionService`1:Encrypt(Single, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptionService`1:$Encrypt429(Single, Int32, Int32)" />
      <method signature="float Obfuz.EncryptionService`1::Decrypt(float, int, int)" newName="$Decrypt430" oldStackTraceSignature="Obfuz.EncryptionService`1:Decrypt(Single, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptionService`1:$Decrypt430(Single, Int32, Int32)" />
      <method signature="double Obfuz.EncryptionService`1::Encrypt(double, int, int)" newName="$Encrypt431" oldStackTraceSignature="Obfuz.EncryptionService`1:Encrypt(Double, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptionService`1:$Encrypt431(Double, Int32, Int32)" />
      <method signature="double Obfuz.EncryptionService`1::Decrypt(double, int, int)" newName="$Decrypt432" oldStackTraceSignature="Obfuz.EncryptionService`1:Decrypt(Double, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptionService`1:$Decrypt432(Double, Int32, Int32)" />
      <method signature="byte[] Obfuz.EncryptionService`1::Encrypt(byte[], int, int, int, int)" newName="$Encrypt433" oldStackTraceSignature="Obfuz.EncryptionService`1:Encrypt(Byte[], Int32, Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptionService`1:$Encrypt433(Byte[], Int32, Int32, Int32, Int32)" />
      <method signature="byte[] Obfuz.EncryptionService`1::Decrypt(byte[], int, int, int, int)" newName="$Decrypt434" oldStackTraceSignature="Obfuz.EncryptionService`1:Decrypt(Byte[], Int32, Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptionService`1:$Decrypt434(Byte[], Int32, Int32, Int32, Int32)" />
      <method signature="byte[] Obfuz.EncryptionService`1::Encrypt(string, int, int)" newName="$Encrypt435" oldStackTraceSignature="Obfuz.EncryptionService`1:Encrypt(String, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptionService`1:$Encrypt435(String, Int32, Int32)" />
      <method signature="string Obfuz.EncryptionService`1::DecryptString(byte[], int, int, int, int)" newName="$DecryptString" oldStackTraceSignature="Obfuz.EncryptionService`1:DecryptString(Byte[], Int32, Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptionService`1:$DecryptString(Byte[], Int32, Int32, Int32, Int32)" />
      <method signature="int Obfuz.EncryptionService`1::DecryptFromRvaInt(byte[], int, int, int)" newName="$DecryptFromRvaInt" oldStackTraceSignature="Obfuz.EncryptionService`1:DecryptFromRvaInt(Byte[], Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptionService`1:$DecryptFromRvaInt(Byte[], Int32, Int32, Int32)" />
      <method signature="long Obfuz.EncryptionService`1::DecryptFromRvaLong(byte[], int, int, int)" newName="$DecryptFromRvaLong" oldStackTraceSignature="Obfuz.EncryptionService`1:DecryptFromRvaLong(Byte[], Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptionService`1:$DecryptFromRvaLong(Byte[], Int32, Int32, Int32)" />
      <method signature="float Obfuz.EncryptionService`1::DecryptFromRvaFloat(byte[], int, int, int)" newName="$DecryptFromRvaFloat" oldStackTraceSignature="Obfuz.EncryptionService`1:DecryptFromRvaFloat(Byte[], Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptionService`1:$DecryptFromRvaFloat(Byte[], Int32, Int32, Int32)" />
      <method signature="double Obfuz.EncryptionService`1::DecryptFromRvaDouble(byte[], int, int, int)" newName="$DecryptFromRvaDouble" oldStackTraceSignature="Obfuz.EncryptionService`1:DecryptFromRvaDouble(Byte[], Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptionService`1:$DecryptFromRvaDouble(Byte[], Int32, Int32, Int32)" />
      <method signature="string Obfuz.EncryptionService`1::DecryptFromRvaString(byte[], int, int, int, int)" newName="$DecryptFromRvaString" oldStackTraceSignature="Obfuz.EncryptionService`1:DecryptFromRvaString(Byte[], Int32, Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptionService`1:$DecryptFromRvaString(Byte[], Int32, Int32, Int32, Int32)" />
      <method signature="byte[] Obfuz.EncryptionService`1::DecryptFromRvaBytes(byte[], int, int, int, int)" newName="$DecryptFromRvaBytes" oldStackTraceSignature="Obfuz.EncryptionService`1:DecryptFromRvaBytes(Byte[], Int32, Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptionService`1:$DecryptFromRvaBytes(Byte[], Int32, Int32, Int32, Int32)" />
      <method signature="void Obfuz.EncryptionService`1::DecryptInitializeArray(System.Array, System.RuntimeFieldHandle, int, int, int)" newName="$DecryptInitializeArray" oldStackTraceSignature="Obfuz.EncryptionService`1:DecryptInitializeArray(Array, RuntimeFieldHandle, Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptionService`1:$DecryptInitializeArray(Array, RuntimeFieldHandle, Int32, Int32, Int32)" />
    </type>
    <type fullName="Obfuz.EncryptorBase" newFullName="$Obfuz.$EncryptorBase" status="Renamed">
      <property signature="int OpCodeCount" newName="$OpCodeCount" />
      <method signature="int Obfuz.EncryptorBase::get_OpCodeCount([Obfuz.Runtime]Obfuz.EncryptorBase)" newName="$get_OpCodeCount" oldStackTraceSignature="Obfuz.EncryptorBase:get_OpCodeCount()" newStackTraceSignature="$Obfuz.$EncryptorBase:$get_OpCodeCount()" />
      <method signature="int[] Obfuz.EncryptorBase::ConvertToIntKey(byte[])" newName="$ConvertToIntKey" oldStackTraceSignature="Obfuz.EncryptorBase:ConvertToIntKey(Byte[])" newStackTraceSignature="$Obfuz.$EncryptorBase:$ConvertToIntKey(Byte[])" />
      <method signature="int Obfuz.EncryptorBase::Encrypt([Obfuz.Runtime]Obfuz.EncryptorBase, int, int, int)" newName="$Encrypt450" oldStackTraceSignature="Obfuz.EncryptorBase:Encrypt(Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptorBase:$Encrypt450(Int32, Int32, Int32)" />
      <method signature="int Obfuz.EncryptorBase::Decrypt([Obfuz.Runtime]Obfuz.EncryptorBase, int, int, int)" newName="$Decrypt451" oldStackTraceSignature="Obfuz.EncryptorBase:Decrypt(Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptorBase:$Decrypt451(Int32, Int32, Int32)" />
      <method signature="long Obfuz.EncryptorBase::Encrypt([Obfuz.Runtime]Obfuz.EncryptorBase, long, int, int)" newName="$Encrypt450" oldStackTraceSignature="Obfuz.EncryptorBase:Encrypt(Int64, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptorBase:$Encrypt450(Int64, Int32, Int32)" />
      <method signature="long Obfuz.EncryptorBase::Decrypt([Obfuz.Runtime]Obfuz.EncryptorBase, long, int, int)" newName="$Decrypt451" oldStackTraceSignature="Obfuz.EncryptorBase:Decrypt(Int64, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptorBase:$Decrypt451(Int64, Int32, Int32)" />
      <method signature="float Obfuz.EncryptorBase::Encrypt([Obfuz.Runtime]Obfuz.EncryptorBase, float, int, int)" newName="$Encrypt450" oldStackTraceSignature="Obfuz.EncryptorBase:Encrypt(Single, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptorBase:$Encrypt450(Single, Int32, Int32)" />
      <method signature="float Obfuz.EncryptorBase::Decrypt([Obfuz.Runtime]Obfuz.EncryptorBase, float, int, int)" newName="$Decrypt451" oldStackTraceSignature="Obfuz.EncryptorBase:Decrypt(Single, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptorBase:$Decrypt451(Single, Int32, Int32)" />
      <method signature="double Obfuz.EncryptorBase::Encrypt([Obfuz.Runtime]Obfuz.EncryptorBase, double, int, int)" newName="$Encrypt450" oldStackTraceSignature="Obfuz.EncryptorBase:Encrypt(Double, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptorBase:$Encrypt450(Double, Int32, Int32)" />
      <method signature="double Obfuz.EncryptorBase::Decrypt([Obfuz.Runtime]Obfuz.EncryptorBase, double, int, int)" newName="$Decrypt451" oldStackTraceSignature="Obfuz.EncryptorBase:Decrypt(Double, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptorBase:$Decrypt451(Double, Int32, Int32)" />
      <method signature="byte[] Obfuz.EncryptorBase::Encrypt([Obfuz.Runtime]Obfuz.EncryptorBase, byte[], int, int, int, int)" newName="$Encrypt452" oldStackTraceSignature="Obfuz.EncryptorBase:Encrypt(Byte[], Int32, Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptorBase:$Encrypt452(Byte[], Int32, Int32, Int32, Int32)" />
      <method signature="byte[] Obfuz.EncryptorBase::Decrypt([Obfuz.Runtime]Obfuz.EncryptorBase, byte[], int, int, int, int)" newName="$Decrypt453" oldStackTraceSignature="Obfuz.EncryptorBase:Decrypt(Byte[], Int32, Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptorBase:$Decrypt453(Byte[], Int32, Int32, Int32, Int32)" />
      <method signature="byte[] Obfuz.EncryptorBase::Encrypt([Obfuz.Runtime]Obfuz.EncryptorBase, string, int, int)" newName="$Encrypt450" oldStackTraceSignature="Obfuz.EncryptorBase:Encrypt(String, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptorBase:$Encrypt450(String, Int32, Int32)" />
      <method signature="string Obfuz.EncryptorBase::DecryptString([Obfuz.Runtime]Obfuz.EncryptorBase, byte[], int, int, int, int)" newName="$DecryptString454" oldStackTraceSignature="Obfuz.EncryptorBase:DecryptString(Byte[], Int32, Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptorBase:$DecryptString454(Byte[], Int32, Int32, Int32, Int32)" />
      <method signature="void Obfuz.EncryptorBase::EncryptBlock([Obfuz.Runtime]Obfuz.EncryptorBase, byte[], int, int)" newName="$EncryptBlock455" oldStackTraceSignature="Obfuz.EncryptorBase:EncryptBlock(Byte[], Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptorBase:$EncryptBlock455(Byte[], Int32, Int32)" />
      <method signature="void Obfuz.EncryptorBase::DecryptBlock([Obfuz.Runtime]Obfuz.EncryptorBase, byte[], int, int)" newName="$DecryptBlock456" oldStackTraceSignature="Obfuz.EncryptorBase:DecryptBlock(Byte[], Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptorBase:$DecryptBlock456(Byte[], Int32, Int32)" />
      <method signature="void Obfuz.EncryptorBase::DecryptBlock([Obfuz.Runtime]Obfuz.EncryptorBase, byte*, int, int, int)" newName="$DecryptBlock436" oldStackTraceSignature="Obfuz.EncryptorBase:DecryptBlock(Byte*, Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptorBase:$DecryptBlock436(Byte*, Int32, Int32, Int32)" />
      <method signature="void Obfuz.EncryptorBase::DecryptInitializeArray([Obfuz.Runtime]Obfuz.EncryptorBase, System.Array, System.RuntimeFieldHandle, int, int, int)" newName="$DecryptInitializeArray457" oldStackTraceSignature="Obfuz.EncryptorBase:DecryptInitializeArray(Array, RuntimeFieldHandle, Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.$EncryptorBase:$DecryptInitializeArray457(Array, RuntimeFieldHandle, Int32, Int32, Int32)" />
    </type>
    <type fullName="Obfuz.IEncryptionScope" newFullName="$Obfuz.$IEncryptionScope" status="Renamed" />
    <type fullName="Obfuz.IEncryptor" newFullName="$Obfuz.$IEncryptor" status="Renamed">
      <property signature="int OpCodeCount" newName="$OpCodeCount" />
      <method signature="int Obfuz.IEncryptor::get_OpCodeCount([Obfuz.Runtime]Obfuz.IEncryptor)" newName="$get_OpCodeCount" oldStackTraceSignature="Obfuz.IEncryptor:get_OpCodeCount()" newStackTraceSignature="$Obfuz.$IEncryptor:$get_OpCodeCount()" />
      <method signature="void Obfuz.IEncryptor::EncryptBlock([Obfuz.Runtime]Obfuz.IEncryptor, byte[], int, int)" newName="$EncryptBlock455" oldStackTraceSignature="Obfuz.IEncryptor:EncryptBlock(Byte[], Int32, Int32)" newStackTraceSignature="$Obfuz.$IEncryptor:$EncryptBlock455(Byte[], Int32, Int32)" />
      <method signature="void Obfuz.IEncryptor::DecryptBlock([Obfuz.Runtime]Obfuz.IEncryptor, byte[], int, int)" newName="$DecryptBlock456" oldStackTraceSignature="Obfuz.IEncryptor:DecryptBlock(Byte[], Int32, Int32)" newStackTraceSignature="$Obfuz.$IEncryptor:$DecryptBlock456(Byte[], Int32, Int32)" />
      <method signature="int Obfuz.IEncryptor::Encrypt([Obfuz.Runtime]Obfuz.IEncryptor, int, int, int)" newName="$Encrypt450" oldStackTraceSignature="Obfuz.IEncryptor:Encrypt(Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.$IEncryptor:$Encrypt450(Int32, Int32, Int32)" />
      <method signature="int Obfuz.IEncryptor::Decrypt([Obfuz.Runtime]Obfuz.IEncryptor, int, int, int)" newName="$Decrypt451" oldStackTraceSignature="Obfuz.IEncryptor:Decrypt(Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.$IEncryptor:$Decrypt451(Int32, Int32, Int32)" />
      <method signature="long Obfuz.IEncryptor::Encrypt([Obfuz.Runtime]Obfuz.IEncryptor, long, int, int)" newName="$Encrypt450" oldStackTraceSignature="Obfuz.IEncryptor:Encrypt(Int64, Int32, Int32)" newStackTraceSignature="$Obfuz.$IEncryptor:$Encrypt450(Int64, Int32, Int32)" />
      <method signature="long Obfuz.IEncryptor::Decrypt([Obfuz.Runtime]Obfuz.IEncryptor, long, int, int)" newName="$Decrypt451" oldStackTraceSignature="Obfuz.IEncryptor:Decrypt(Int64, Int32, Int32)" newStackTraceSignature="$Obfuz.$IEncryptor:$Decrypt451(Int64, Int32, Int32)" />
      <method signature="float Obfuz.IEncryptor::Encrypt([Obfuz.Runtime]Obfuz.IEncryptor, float, int, int)" newName="$Encrypt450" oldStackTraceSignature="Obfuz.IEncryptor:Encrypt(Single, Int32, Int32)" newStackTraceSignature="$Obfuz.$IEncryptor:$Encrypt450(Single, Int32, Int32)" />
      <method signature="float Obfuz.IEncryptor::Decrypt([Obfuz.Runtime]Obfuz.IEncryptor, float, int, int)" newName="$Decrypt451" oldStackTraceSignature="Obfuz.IEncryptor:Decrypt(Single, Int32, Int32)" newStackTraceSignature="$Obfuz.$IEncryptor:$Decrypt451(Single, Int32, Int32)" />
      <method signature="double Obfuz.IEncryptor::Encrypt([Obfuz.Runtime]Obfuz.IEncryptor, double, int, int)" newName="$Encrypt450" oldStackTraceSignature="Obfuz.IEncryptor:Encrypt(Double, Int32, Int32)" newStackTraceSignature="$Obfuz.$IEncryptor:$Encrypt450(Double, Int32, Int32)" />
      <method signature="double Obfuz.IEncryptor::Decrypt([Obfuz.Runtime]Obfuz.IEncryptor, double, int, int)" newName="$Decrypt451" oldStackTraceSignature="Obfuz.IEncryptor:Decrypt(Double, Int32, Int32)" newStackTraceSignature="$Obfuz.$IEncryptor:$Decrypt451(Double, Int32, Int32)" />
      <method signature="byte[] Obfuz.IEncryptor::Encrypt([Obfuz.Runtime]Obfuz.IEncryptor, byte[], int, int, int, int)" newName="$Encrypt452" oldStackTraceSignature="Obfuz.IEncryptor:Encrypt(Byte[], Int32, Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.$IEncryptor:$Encrypt452(Byte[], Int32, Int32, Int32, Int32)" />
      <method signature="byte[] Obfuz.IEncryptor::Decrypt([Obfuz.Runtime]Obfuz.IEncryptor, byte[], int, int, int, int)" newName="$Decrypt453" oldStackTraceSignature="Obfuz.IEncryptor:Decrypt(Byte[], Int32, Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.$IEncryptor:$Decrypt453(Byte[], Int32, Int32, Int32, Int32)" />
      <method signature="byte[] Obfuz.IEncryptor::Encrypt([Obfuz.Runtime]Obfuz.IEncryptor, string, int, int)" newName="$Encrypt450" oldStackTraceSignature="Obfuz.IEncryptor:Encrypt(String, Int32, Int32)" newStackTraceSignature="$Obfuz.$IEncryptor:$Encrypt450(String, Int32, Int32)" />
      <method signature="string Obfuz.IEncryptor::DecryptString([Obfuz.Runtime]Obfuz.IEncryptor, byte[], int, int, int, int)" newName="$DecryptString454" oldStackTraceSignature="Obfuz.IEncryptor:DecryptString(Byte[], Int32, Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.$IEncryptor:$DecryptString454(Byte[], Int32, Int32, Int32, Int32)" />
      <method signature="void Obfuz.IEncryptor::DecryptInitializeArray([Obfuz.Runtime]Obfuz.IEncryptor, System.Array, System.RuntimeFieldHandle, int, int, int)" newName="$DecryptInitializeArray457" oldStackTraceSignature="Obfuz.IEncryptor:DecryptInitializeArray(Array, RuntimeFieldHandle, Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.$IEncryptor:$DecryptInitializeArray457(Array, RuntimeFieldHandle, Int32, Int32, Int32)" />
    </type>
    <type fullName="Obfuz.NullEncryptor" newFullName="$Obfuz.$NullEncryptor" status="Renamed">
      <field signature="byte[] _key" newName="$_key" />
      <property signature="int OpCodeCount" newName="$OpCodeCount" />
      <method signature="int Obfuz.NullEncryptor::get_OpCodeCount([Obfuz.Runtime]Obfuz.NullEncryptor)" newName="$get_OpCodeCount" oldStackTraceSignature="Obfuz.NullEncryptor:get_OpCodeCount()" newStackTraceSignature="$Obfuz.$NullEncryptor:$get_OpCodeCount()" />
      <method signature="int Obfuz.NullEncryptor::Encrypt([Obfuz.Runtime]Obfuz.NullEncryptor, int, int, int)" newName="$Encrypt450" oldStackTraceSignature="Obfuz.NullEncryptor:Encrypt(Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.$NullEncryptor:$Encrypt450(Int32, Int32, Int32)" />
      <method signature="int Obfuz.NullEncryptor::Decrypt([Obfuz.Runtime]Obfuz.NullEncryptor, int, int, int)" newName="$Decrypt451" oldStackTraceSignature="Obfuz.NullEncryptor:Decrypt(Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.$NullEncryptor:$Decrypt451(Int32, Int32, Int32)" />
      <method signature="long Obfuz.NullEncryptor::Encrypt([Obfuz.Runtime]Obfuz.NullEncryptor, long, int, int)" newName="$Encrypt450" oldStackTraceSignature="Obfuz.NullEncryptor:Encrypt(Int64, Int32, Int32)" newStackTraceSignature="$Obfuz.$NullEncryptor:$Encrypt450(Int64, Int32, Int32)" />
      <method signature="long Obfuz.NullEncryptor::Decrypt([Obfuz.Runtime]Obfuz.NullEncryptor, long, int, int)" newName="$Decrypt451" oldStackTraceSignature="Obfuz.NullEncryptor:Decrypt(Int64, Int32, Int32)" newStackTraceSignature="$Obfuz.$NullEncryptor:$Decrypt451(Int64, Int32, Int32)" />
      <method signature="float Obfuz.NullEncryptor::Encrypt([Obfuz.Runtime]Obfuz.NullEncryptor, float, int, int)" newName="$Encrypt450" oldStackTraceSignature="Obfuz.NullEncryptor:Encrypt(Single, Int32, Int32)" newStackTraceSignature="$Obfuz.$NullEncryptor:$Encrypt450(Single, Int32, Int32)" />
      <method signature="float Obfuz.NullEncryptor::Decrypt([Obfuz.Runtime]Obfuz.NullEncryptor, float, int, int)" newName="$Decrypt451" oldStackTraceSignature="Obfuz.NullEncryptor:Decrypt(Single, Int32, Int32)" newStackTraceSignature="$Obfuz.$NullEncryptor:$Decrypt451(Single, Int32, Int32)" />
      <method signature="double Obfuz.NullEncryptor::Encrypt([Obfuz.Runtime]Obfuz.NullEncryptor, double, int, int)" newName="$Encrypt450" oldStackTraceSignature="Obfuz.NullEncryptor:Encrypt(Double, Int32, Int32)" newStackTraceSignature="$Obfuz.$NullEncryptor:$Encrypt450(Double, Int32, Int32)" />
      <method signature="double Obfuz.NullEncryptor::Decrypt([Obfuz.Runtime]Obfuz.NullEncryptor, double, int, int)" newName="$Decrypt451" oldStackTraceSignature="Obfuz.NullEncryptor:Decrypt(Double, Int32, Int32)" newStackTraceSignature="$Obfuz.$NullEncryptor:$Decrypt451(Double, Int32, Int32)" />
      <method signature="byte[] Obfuz.NullEncryptor::Encrypt([Obfuz.Runtime]Obfuz.NullEncryptor, byte[], int, int, int, int)" newName="$Encrypt452" oldStackTraceSignature="Obfuz.NullEncryptor:Encrypt(Byte[], Int32, Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.$NullEncryptor:$Encrypt452(Byte[], Int32, Int32, Int32, Int32)" />
      <method signature="byte[] Obfuz.NullEncryptor::Decrypt([Obfuz.Runtime]Obfuz.NullEncryptor, byte[], int, int, int, int)" newName="$Decrypt453" oldStackTraceSignature="Obfuz.NullEncryptor:Decrypt(Byte[], Int32, Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.$NullEncryptor:$Decrypt453(Byte[], Int32, Int32, Int32, Int32)" />
      <method signature="byte[] Obfuz.NullEncryptor::Encrypt([Obfuz.Runtime]Obfuz.NullEncryptor, string, int, int)" newName="$Encrypt450" oldStackTraceSignature="Obfuz.NullEncryptor:Encrypt(String, Int32, Int32)" newStackTraceSignature="$Obfuz.$NullEncryptor:$Encrypt450(String, Int32, Int32)" />
      <method signature="string Obfuz.NullEncryptor::DecryptString([Obfuz.Runtime]Obfuz.NullEncryptor, byte[], int, int, int, int)" newName="$DecryptString454" oldStackTraceSignature="Obfuz.NullEncryptor:DecryptString(Byte[], Int32, Int32, Int32, Int32)" newStackTraceSignature="$Obfuz.$NullEncryptor:$DecryptString454(Byte[], Int32, Int32, Int32, Int32)" />
    </type>
    <type fullName="Obfuz.ObfuscationInstincts" newFullName="$Obfuz.$ObfuscationInstincts" status="Renamed">
      <method signature="string Obfuz.ObfuscationInstincts::FullNameOf`1()" newName="$FullNameOf" oldStackTraceSignature="Obfuz.ObfuscationInstincts:FullNameOf()" newStackTraceSignature="$Obfuz.$ObfuscationInstincts:$FullNameOf()" />
      <method signature="string Obfuz.ObfuscationInstincts::NameOf`1()" newName="$NameOf" oldStackTraceSignature="Obfuz.ObfuscationInstincts:NameOf()" newStackTraceSignature="$Obfuz.$ObfuscationInstincts:$NameOf()" />
      <method signature="void Obfuz.ObfuscationInstincts::RegisterReflectionType`1()" newName="$RegisterReflectionType" oldStackTraceSignature="Obfuz.ObfuscationInstincts:RegisterReflectionType()" newStackTraceSignature="$Obfuz.$ObfuscationInstincts:$RegisterReflectionType()" />
    </type>
    <type fullName="Obfuz.ObfuscationTypeMapper" newFullName="$Obfuz.$ObfuscationTypeMapper" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;System.Type,string&gt; _type2OriginalFullName" newName="$_type2OriginalFullName" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;System.Reflection.Assembly,System.Collections.Generic.Dictionary`2&lt;string,System.Type&gt;&gt; _originalFullName2Types" newName="$_originalFullName2Types" />
      <method signature="void Obfuz.ObfuscationTypeMapper::RegisterType`1(string)" newName="$RegisterType" oldStackTraceSignature="Obfuz.ObfuscationTypeMapper:RegisterType(String)" newStackTraceSignature="$Obfuz.$ObfuscationTypeMapper:$RegisterType(String)" />
      <method signature="void Obfuz.ObfuscationTypeMapper::RegisterType(System.Type, string)" newName="$RegisterType437" oldStackTraceSignature="Obfuz.ObfuscationTypeMapper:RegisterType(Type, String)" newStackTraceSignature="$Obfuz.$ObfuscationTypeMapper:$RegisterType437(Type, String)" />
      <method signature="string Obfuz.ObfuscationTypeMapper::GetOriginalTypeFullName(System.Type)" newName="$GetOriginalTypeFullName" oldStackTraceSignature="Obfuz.ObfuscationTypeMapper:GetOriginalTypeFullName(Type)" newStackTraceSignature="$Obfuz.$ObfuscationTypeMapper:$GetOriginalTypeFullName(Type)" />
      <method signature="string Obfuz.ObfuscationTypeMapper::GetOriginalTypeFullNameOrCurrent(System.Type)" newName="$GetOriginalTypeFullNameOrCurrent" oldStackTraceSignature="Obfuz.ObfuscationTypeMapper:GetOriginalTypeFullNameOrCurrent(Type)" newStackTraceSignature="$Obfuz.$ObfuscationTypeMapper:$GetOriginalTypeFullNameOrCurrent(Type)" />
      <method signature="System.Type Obfuz.ObfuscationTypeMapper::GetTypeByOriginalFullName(System.Reflection.Assembly, string)" newName="$GetTypeByOriginalFullName" oldStackTraceSignature="Obfuz.ObfuscationTypeMapper:GetTypeByOriginalFullName(Assembly, String)" newStackTraceSignature="$Obfuz.$ObfuscationTypeMapper:$GetTypeByOriginalFullName(Assembly, String)" />
      <method signature="void Obfuz.ObfuscationTypeMapper::Clear()" newName="$Clear438" oldStackTraceSignature="Obfuz.ObfuscationTypeMapper:Clear()" newStackTraceSignature="$Obfuz.$ObfuscationTypeMapper:$Clear438()" />
    </type>
  </assembly>
</mapping>